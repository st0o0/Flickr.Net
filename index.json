{
  "api/Flickr.Net.Core.Configuration.FlickrConfiguration.html": {
    "href": "api/Flickr.Net.Core.Configuration.FlickrConfiguration.html",
    "title": "Class FlickrConfiguration | Flickr.Net",
    "keywords": "Class FlickrConfiguration The flickr configuration. Inheritance System.Object FlickrConfiguration Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Configuration Assembly : Flickr.Net.Core.dll Syntax public class FlickrConfiguration Properties | Improve this Doc View Source ApiKey Gets or sets the api key. Declaration public string ApiKey { get; set; } Property Value Type Description System.String | Improve this Doc View Source CacheDisabled Gets or sets a value indicating whether cache disabled. Declaration public bool CacheDisabled { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CacheLocation Gets or sets the cache location. Declaration public string CacheLocation { get; set; } Property Value Type Description System.String | Improve this Doc View Source CacheSize Gets or sets the cache size. Declaration public int CacheSize { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CacheTimeout Gets or sets the cache timeout. Declaration public TimeSpan CacheTimeout { get; set; } Property Value Type Description TimeSpan | Improve this Doc View Source SharedSecret Gets or sets the shared secret. Declaration public string SharedSecret { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Configuration.html": {
    "href": "api/Flickr.Net.Core.Configuration.html",
    "title": "Namespace Flickr.Net.Core.Configuration | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Configuration Classes FlickrConfiguration The flickr configuration."
  },
  "api/Flickr.Net.Core.Entities.ActivityEvent.html": {
    "href": "api/Flickr.Net.Core.Entities.ActivityEvent.html",
    "title": "Class ActivityEvent | Flickr.Net",
    "keywords": "Class ActivityEvent A user event on a photo, e.g. Comment or Favourite etc. Inheritance System.Object ActivityEvent Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class ActivityEvent : IFlickrParsable Remarks Includes the user's Flickr ID, name, the date of the activity and its content (if a comment). Properties | Improve this Doc View Source CommentId If this event is a comment then this is the ID of the comment. Declaration public string CommentId { get; set; } Property Value Type Description System.String | Improve this Doc View Source DateAdded The date the note or comment was added. Declaration public DateTime DateAdded { get; set; } Property Value Type Description DateTime | Improve this Doc View Source EventType The of the event, either Comment or Note. Declaration public ActivityEventType EventType { get; set; } Property Value Type Description ActivityEventType | Improve this Doc View Source GalleryId If this is a gallery activityits then this will contain the ID of the gallery. Declaration public string GalleryId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupId If this is group invite, then this is the group ID of the group it has been invited to. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupName If this is group invite, then this is the name of the group it has been invited to. Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconFarm Farm for the buddy icon for the event user. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer Server for the buddy icon for the event user. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsMuted Is the activity type muted. Declaration public bool? IsMuted { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source NoteId If this is a note activity then this is the ID of the note. Declaration public string NoteId { get; set; } Property Value Type Description System.String | Improve this Doc View Source RealName The real name of the user who made the comment or note. Declaration public string RealName { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserId The user id of the user who made the comment or note. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserName The screen name of the user who made the comment or note. Declaration public string UserName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Value The text of the note or comment. Declaration public string Value { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.ActivityItem.html": {
    "href": "api/Flickr.Net.Core.Entities.ActivityItem.html",
    "title": "Class ActivityItem | Flickr.Net",
    "keywords": "Class ActivityItem Activity class used for UserPhotosAsync(Int32, TimeType, Int32, Int32, CancellationToken) and UserCommentsAsync(Int32, Int32, CancellationToken) . Inheritance System.Object ActivityItem Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class ActivityItem : IFlickrParsable Constructors | Improve this Doc View Source ActivityItem() Default constructor. Declaration public ActivityItem() Properties | Improve this Doc View Source Comments The number of comments on the item. Declaration public int Comments { get; set; } Property Value Type Description System.Int32 Remarks Only applicable for UserCommentsAsync(Int32, Int32, CancellationToken) . | Improve this Doc View Source Events The events that comprise this activity item. Declaration public Collection<ActivityEvent> Events { get; set; } Property Value Type Description System.Collections.ObjectModel.Collection < ActivityEvent > | Improve this Doc View Source Farm The server farm for either the photo, or the primary photo for the photoset. Declaration public string Farm { get; set; } Property Value Type Description System.String | Improve this Doc View Source Favorites If the type is a photo then this contains the number of favourites in the set. Otherwise returns -1. Declaration public int? Favorites { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Id The ID of either the photoset or the photo. Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source ItemType The of the item. Declaration public ActivityItemType ItemType { get; set; } Property Value Type Description ActivityItemType | Improve this Doc View Source Media The media type for this activity item, either photo or video. Declaration public MediaType Media { get; set; } Property Value Type Description MediaType | Improve this Doc View Source More You want more! You got it! Declaration public bool More { get; set; } Property Value Type Description System.Boolean Remarks Actually, not sure what this it for! | Improve this Doc View Source NewComments The number of new comments within the given time frame. Declaration public int NewComments { get; set; } Property Value Type Description System.Int32 Remarks Only applicable for UserPhotosAsync(Int32, TimeType, Int32, Int32, CancellationToken) . | Improve this Doc View Source NewNotes The number of new notes within the given time frame. Declaration public int? NewNotes { get; set; } Property Value Type Description System.Nullable < System.Int32 > Remarks Only applicable for photos and when calling UserPhotosAsync(Int32, TimeType, Int32, Int32, CancellationToken) . | Improve this Doc View Source Notes The number of comments on the photo. Declaration public int? Notes { get; set; } Property Value Type Description System.Nullable < System.Int32 > Remarks Only applicable for photos and when calling UserCommentsAsync(Int32, Int32, CancellationToken) . | Improve this Doc View Source OldComments The number of old comments within the given time frame. Declaration public int OldComments { get; set; } Property Value Type Description System.Int32 Remarks Only applicable for UserPhotosAsync(Int32, TimeType, Int32, Int32, CancellationToken) . | Improve this Doc View Source OldNotes The number of old notes within the given time frame. Declaration public int? OldNotes { get; set; } Property Value Type Description System.Nullable < System.Int32 > Remarks Only applicable for photos and when calling UserPhotosAsync(Int32, TimeType, Int32, Int32, CancellationToken) . | Improve this Doc View Source OwnerBuddyIcon The activity item owners buddy icon. Declaration public string OwnerBuddyIcon { get; } Property Value Type Description System.String | Improve this Doc View Source OwnerFarm The server farm number for the activity item owners buddy icon. Declaration public string OwnerFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerId The user id of the owner of this item. Declaration public string OwnerId { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerName The username of the owner of this item. Declaration public string OwnerName { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerServer The web server number for the activity item owners buddy icon. Declaration public string OwnerServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source Photos If the type is a photoset then this contains the number of photos in the set. Otherwise returns -1. Declaration public int? Photos { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source PrimaryPhotoId If this is a photoset then returns the primary photo id, otherwise will be null ( Nothing in VB.Net). Declaration public string PrimaryPhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source RealName The real name of the activity item owner. Declaration public string RealName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Secret The secret for either the photo, or the primary photo for the photoset. Declaration public string Secret { get; set; } Property Value Type Description System.String | Improve this Doc View Source Server The server for either the photo, or the primary photo for the photoset. Declaration public string Server { get; set; } Property Value Type Description System.String | Improve this Doc View Source SmallUrl The URL for the small thumbnail of a photo or the primary photo for a photoset or gallery. Declaration public string SmallUrl { get; } Property Value Type Description System.String | Improve this Doc View Source SquareThumbnailUrl The URL for the square thumbnail of a photo or the primary photo for a photoset or gallery. Declaration public string SquareThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Title The title of the photoset or photo. Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source Views Gets the number of views for this photo or photoset. Declaration public int Views { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.AllContexts.html": {
    "href": "api/Flickr.Net.Core.Entities.AllContexts.html",
    "title": "Class AllContexts | Flickr.Net",
    "keywords": "Class AllContexts All contexts that a photo is in. Inheritance System.Object AllContexts Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class AllContexts : IFlickrParsable Constructors | Improve this Doc View Source AllContexts() Default constructor. Declaration public AllContexts() Properties | Improve this Doc View Source Groups An array of ContextGroup objects for the current photo. Declaration public Collection<ContextGroup> Groups { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < ContextGroup > | Improve this Doc View Source Sets An array of ContextSet objects for the current photo. Declaration public Collection<ContextSet> Sets { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < ContextSet >"
  },
  "api/Flickr.Net.Core.Entities.Auth.html": {
    "href": "api/Flickr.Net.Core.Entities.Auth.html",
    "title": "Class Auth | Flickr.Net",
    "keywords": "Class Auth Successful authentication returns a Auth object. Inheritance System.Object Auth Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Auth : IFlickrParsable Properties | Improve this Doc View Source Permissions The permissions the current token allows the application to perform. Declaration public AuthLevel Permissions { get; set; } Property Value Type Description AuthLevel | Improve this Doc View Source Token The authentication token returned by the GetAccessTokenAsync(OAuthRequestToken, String, CancellationToken) or CheckTokenAsync(CancellationToken) methods. Declaration public string Token { get; set; } Property Value Type Description System.String | Improve this Doc View Source User The User object associated with the token. Readonly. Declaration public FoundUser User { get; set; } Property Value Type Description FoundUser"
  },
  "api/Flickr.Net.Core.Entities.Blog.html": {
    "href": "api/Flickr.Net.Core.Entities.Blog.html",
    "title": "Class Blog | Flickr.Net",
    "keywords": "Class Blog Provides details of a specific blog, as configured by the user. Inheritance System.Object Blog Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Blog : IFlickrParsable Properties | Improve this Doc View Source BlogId The ID Flickr has assigned to the blog. Use this to post to the blog using PostPhotoAsync(String, String, String, String, String, CancellationToken) . Declaration public string BlogId { get; set; } Property Value Type Description System.String | Improve this Doc View Source BlogName The name you have assigned to the blog in Flickr. Declaration public string BlogName { get; set; } Property Value Type Description System.String | Improve this Doc View Source BlogUrl The URL of the blog website. Declaration public string BlogUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source NeedsPassword If Flickr stores the password for this then this will be 0, meaning you do not need to pass in the password when posting. Declaration public bool NeedsPassword { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Service The service that his blog uses. See GetServicesAsync(CancellationToken) Declaration public string Service { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.BlogService.html": {
    "href": "api/Flickr.Net.Core.Entities.BlogService.html",
    "title": "Class BlogService | Flickr.Net",
    "keywords": "Class BlogService Details of the blog services supported by Flickr. e.g. Twitter, Blogger etc. Inheritance System.Object BlogService Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class BlogService : IFlickrParsable Properties | Improve this Doc View Source Id The unique ID for the blog service supported by Flickr. Declaration public string Id { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name The name of the blog service supported by Flickr. Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Brand.html": {
    "href": "api/Flickr.Net.Core.Entities.Brand.html",
    "title": "Class Brand | Flickr.Net",
    "keywords": "Class Brand A particular camera brand. Inheritance System.Object Brand Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class Brand : IFlickrParsable Properties | Improve this Doc View Source BrandId The ID of the camera brand. e.g. \"canon\". Declaration public string BrandId { get; set; } Property Value Type Description System.String | Improve this Doc View Source BrandName The name of the camera brand. e.g. \"Canon\". Declaration public string BrandName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Camera.html": {
    "href": "api/Flickr.Net.Core.Entities.Camera.html",
    "title": "Class Camera | Flickr.Net",
    "keywords": "Class Camera The details of a particular camera model. Inheritance System.Object Camera Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class Camera : IFlickrParsable Properties | Improve this Doc View Source CameraId The unique ID of this camera on Flickr. Declaration public string CameraId { get; set; } Property Value Type Description System.String | Improve this Doc View Source CameraName The name of this camera. Declaration public string CameraName { get; set; } Property Value Type Description System.String | Improve this Doc View Source LargeImage The large image for this camera model. Declaration public string LargeImage { get; set; } Property Value Type Description System.String | Improve this Doc View Source LcdScreenSize The size of the LCD screen (if any) used in this camera. Declaration public string LcdScreenSize { get; set; } Property Value Type Description System.String | Improve this Doc View Source MegaPixels The number of megapixels for this camera. Declaration public string MegaPixels { get; set; } Property Value Type Description System.String | Improve this Doc View Source MemoryType The type of memory used in this camera. Declaration public string MemoryType { get; set; } Property Value Type Description System.String | Improve this Doc View Source SmallImage The small image for this camera model. Declaration public string SmallImage { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Cluster.html": {
    "href": "api/Flickr.Net.Core.Entities.Cluster.html",
    "title": "Class Cluster | Flickr.Net",
    "keywords": "Class Cluster A tag cluster (a tag and a group of common sibling tags). Inheritance System.Object Cluster Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Cluster : IFlickrParsable Properties | Improve this Doc View Source ClusterId The cluster id for this cluster. Declaration public string ClusterId { get; } Property Value Type Description System.String | Improve this Doc View Source ClusterUrl The URL for the clusters Flickr page. Declaration public string ClusterUrl { get; } Property Value Type Description System.String | Improve this Doc View Source SourceTag The tag for which this cluster belongs. Declaration public string SourceTag { get; set; } Property Value Type Description System.String | Improve this Doc View Source Tags The collection of tags in this cluster. Declaration public Collection<string> Tags { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < System.String > | Improve this Doc View Source TotalTags The number of tags in this cluster. Declaration public int TotalTags { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.Collection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collection.html",
    "title": "Class Collection | Flickr.Net",
    "keywords": "Class Collection The collection. Inheritance System.Object Collection Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Collection : IFlickrParsable Properties | Improve this Doc View Source CollectionId Gets or sets the collection id. Declaration public string CollectionId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Collections An array of Collection objects. Declaration public Collection<Collection> Collections { get; } Property Value Type Description Flickr.Net.Core.Entities.Collection < Collection > | Improve this Doc View Source Description Gets or sets the description. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconLarge Gets or sets the icon large. Declaration public string IconLarge { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconSmall Gets or sets the icon small. Declaration public string IconSmall { get; set; } Property Value Type Description System.String | Improve this Doc View Source Sets An array of CollectionSet objects. Declaration public Collection<CollectionSet> Sets { get; } Property Value Type Description Flickr.Net.Core.Entities.Collection < CollectionSet > | Improve this Doc View Source Title Gets or sets the title. Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source Url The URL of the collection. Only returned when creating a new collection. Declaration public string Url { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.CollectionInfo.html": {
    "href": "api/Flickr.Net.Core.Entities.CollectionInfo.html",
    "title": "Class CollectionInfo | Flickr.Net",
    "keywords": "Class CollectionInfo Summary description for CollectionInfo. Inheritance System.Object CollectionInfo Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class CollectionInfo : IFlickrParsable Properties | Improve this Doc View Source ChildCount The number of child collections this collection contains. Call GetTreeAsync(String, String, CancellationToken) for children. Declaration public int ChildCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CollectionId The ID for the collection. Declaration public string CollectionId { get; set; } Property Value Type Description System.String | Improve this Doc View Source DateCreated The date the collection was created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Description The description for the collection. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconLarge The large mosaic icon for the collection. Declaration public string IconLarge { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconPhotos An array of the 12 photos used to create a collection's mosaic. Declaration public Collection<Photo> IconPhotos { get; } Property Value Type Description Flickr.Net.Core.Entities.Collection < Photo > | Improve this Doc View Source IconSmall The small mosaix icon for the collection. Declaration public string IconSmall { get; set; } Property Value Type Description System.String | Improve this Doc View Source Secret The secret for the icons. Declaration public string Secret { get; set; } Property Value Type Description System.String | Improve this Doc View Source Server The server for the icons. Declaration public string Server { get; set; } Property Value Type Description System.String | Improve this Doc View Source Title The title of the description. Declaration public string Title { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Collections.ActivityItemCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.ActivityItemCollection.html",
    "title": "Class ActivityItemCollection | Flickr.Net",
    "keywords": "Class ActivityItemCollection A list of ActivityItem items. Inheritance System.Object ActivityItemCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class ActivityItemCollection : Collection<ActivityItem> Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.BlogCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.BlogCollection.html",
    "title": "Class BlogCollection | Flickr.Net",
    "keywords": "Class BlogCollection Contains a list of Blog items for the user. Inheritance System.Object BlogCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class BlogCollection : Collection<Blog> Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.BlogServiceCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.BlogServiceCollection.html",
    "title": "Class BlogServiceCollection | Flickr.Net",
    "keywords": "Class BlogServiceCollection A list of the blog services that Flickr aupports. Inheritance System.Object System.Collections.ObjectModel.Collection < BlogService > BlogServiceCollection Implements System.Collections.Generic.IList < BlogService > System.Collections.Generic.ICollection < BlogService > System.Collections.Generic.IReadOnlyList < BlogService > System.Collections.Generic.IReadOnlyCollection < BlogService > System.Collections.Generic.IEnumerable < BlogService > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.Add(Flickr.Net.Core.Entities.BlogService) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.Contains(Flickr.Net.Core.Entities.BlogService) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.CopyTo(Flickr.Net.Core.Entities.BlogService[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.IndexOf(Flickr.Net.Core.Entities.BlogService) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.Insert(System.Int32, Flickr.Net.Core.Entities.BlogService) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.InsertItem(System.Int32, Flickr.Net.Core.Entities.BlogService) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.Remove(Flickr.Net.Core.Entities.BlogService) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.SetItem(System.Int32, Flickr.Net.Core.Entities.BlogService) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.BlogService>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.BlogService>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class BlogServiceCollection : Collection<BlogService>, IList<BlogService>, ICollection<BlogService>, IReadOnlyList<BlogService>, IReadOnlyCollection<BlogService>, IEnumerable<BlogService>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.BrandCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.BrandCollection.html",
    "title": "Class BrandCollection | Flickr.Net",
    "keywords": "Class BrandCollection A collection of camera brands Inheritance System.Object BrandCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public class BrandCollection : Collection<Brand> Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.CameraCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.CameraCollection.html",
    "title": "Class CameraCollection | Flickr.Net",
    "keywords": "Class CameraCollection A collection of camera models for a particular brand. Inheritance System.Object CameraCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public class CameraCollection : Collection<Camera> Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.ClusterCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.ClusterCollection.html",
    "title": "Class ClusterCollection | Flickr.Net",
    "keywords": "Class ClusterCollection A collection of Cluster instances. Inheritance System.Object ClusterCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class ClusterCollection : Collection<Cluster> Properties | Improve this Doc View Source SourceTag The source tag for this cluster collection. Declaration public string SourceTag { get; set; } Property Value Type Description System.String | Improve this Doc View Source TotalClusters The total number of clusters for this tag. Declaration public int TotalClusters { get; set; } Property Value Type Description System.Int32 Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.CollectionCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.CollectionCollection.html",
    "title": "Class CollectionCollection | Flickr.Net",
    "keywords": "Class CollectionCollection The collection collection. Inheritance System.Object System.Collections.ObjectModel.Collection < Collection > CollectionCollection Implements System.Collections.Generic.IList < Collection > System.Collections.Generic.ICollection < Collection > System.Collections.Generic.IReadOnlyList < Collection > System.Collections.Generic.IReadOnlyCollection < Collection > System.Collections.Generic.IEnumerable < Collection > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.Add(Flickr.Net.Core.Entities.Collection) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.Contains(Flickr.Net.Core.Entities.Collection) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.CopyTo(Flickr.Net.Core.Entities.Collection[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.IndexOf(Flickr.Net.Core.Entities.Collection) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.Insert(System.Int32, Flickr.Net.Core.Entities.Collection) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Collection) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.Remove(Flickr.Net.Core.Entities.Collection) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.SetItem(System.Int32, Flickr.Net.Core.Entities.Collection) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Collection>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Collection>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class CollectionCollection : Collection<Collection>, IList<Collection>, ICollection<Collection>, IReadOnlyList<Collection>, IReadOnlyCollection<Collection>, IEnumerable<Collection>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.ContactCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.ContactCollection.html",
    "title": "Class ContactCollection | Flickr.Net",
    "keywords": "Class ContactCollection Contains a list of Contact items for a given user. Inheritance System.Object System.Collections.ObjectModel.Collection < Contact > ContactCollection Implements System.Collections.Generic.IList < Contact > System.Collections.Generic.ICollection < Contact > System.Collections.Generic.IReadOnlyList < Contact > System.Collections.Generic.IReadOnlyCollection < Contact > System.Collections.Generic.IEnumerable < Contact > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.Add(Flickr.Net.Core.Entities.Contact) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.Contains(Flickr.Net.Core.Entities.Contact) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.CopyTo(Flickr.Net.Core.Entities.Contact[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.IndexOf(Flickr.Net.Core.Entities.Contact) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.Insert(System.Int32, Flickr.Net.Core.Entities.Contact) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Contact) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.Remove(Flickr.Net.Core.Entities.Contact) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.SetItem(System.Int32, Flickr.Net.Core.Entities.Contact) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Contact>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Contact>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class ContactCollection : Collection<Contact>, IList<Contact>, ICollection<Contact>, IReadOnlyList<Contact>, IReadOnlyCollection<Contact>, IEnumerable<Contact>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Page The page of the result set that has been returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of contacts that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of contacts returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of contacts that match the calling query. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.CsvFileCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.CsvFileCollection.html",
    "title": "Class CsvFileCollection | Flickr.Net",
    "keywords": "Class CsvFileCollection The collection of CSV files containing archived stats available for download from Flickr. Inheritance System.Object System.Collections.ObjectModel.Collection < CsvFile > CsvFileCollection Implements System.Collections.Generic.IList < CsvFile > System.Collections.Generic.ICollection < CsvFile > System.Collections.Generic.IReadOnlyList < CsvFile > System.Collections.Generic.IReadOnlyCollection < CsvFile > System.Collections.Generic.IEnumerable < CsvFile > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.Add(Flickr.Net.Core.Entities.CsvFile) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.Contains(Flickr.Net.Core.Entities.CsvFile) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.CopyTo(Flickr.Net.Core.Entities.CsvFile[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.IndexOf(Flickr.Net.Core.Entities.CsvFile) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.Insert(System.Int32, Flickr.Net.Core.Entities.CsvFile) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.InsertItem(System.Int32, Flickr.Net.Core.Entities.CsvFile) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.Remove(Flickr.Net.Core.Entities.CsvFile) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.SetItem(System.Int32, Flickr.Net.Core.Entities.CsvFile) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.CsvFile>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.CsvFile>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class CsvFileCollection : Collection<CsvFile>, IList<CsvFile>, ICollection<CsvFile>, IReadOnlyList<CsvFile>, IReadOnlyCollection<CsvFile>, IEnumerable<CsvFile>, IList, ICollection, IEnumerable Remarks Only supported until the 1st June 2010. Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.ExifTagCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.ExifTagCollection.html",
    "title": "Class ExifTagCollection | Flickr.Net",
    "keywords": "Class ExifTagCollection EXIF data for the selected photo. Inheritance System.Object System.Collections.ObjectModel.Collection < ExifTag > ExifTagCollection Implements System.Collections.Generic.IList < ExifTag > System.Collections.Generic.ICollection < ExifTag > System.Collections.Generic.IReadOnlyList < ExifTag > System.Collections.Generic.IReadOnlyCollection < ExifTag > System.Collections.Generic.IEnumerable < ExifTag > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.Add(Flickr.Net.Core.Entities.ExifTag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.Contains(Flickr.Net.Core.Entities.ExifTag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.CopyTo(Flickr.Net.Core.Entities.ExifTag[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.IndexOf(Flickr.Net.Core.Entities.ExifTag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.Insert(System.Int32, Flickr.Net.Core.Entities.ExifTag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.InsertItem(System.Int32, Flickr.Net.Core.Entities.ExifTag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.Remove(Flickr.Net.Core.Entities.ExifTag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.SetItem(System.Int32, Flickr.Net.Core.Entities.ExifTag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.ExifTag>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.ExifTag>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class ExifTagCollection : Collection<ExifTag>, IList<ExifTag>, ICollection<ExifTag>, IReadOnlyList<ExifTag>, IReadOnlyCollection<ExifTag>, IEnumerable<ExifTag>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Camera The make and model of the camera that took the photo, if available. Declaration public string Camera { get; set; } Property Value Type Description System.String | Improve this Doc View Source Farm The server farm for this photo. Declaration public string Farm { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotoId The Photo ID for the photo whose EXIF data this is. Declaration public string PhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Secret The Secret of the photo. Declaration public string Secret { get; set; } Property Value Type Description System.String | Improve this Doc View Source Server The server number for the photo. Declaration public string Server { get; set; } Property Value Type Description System.String Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.GalleryCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.GalleryCollection.html",
    "title": "Class GalleryCollection | Flickr.Net",
    "keywords": "Class GalleryCollection A collection of Gallery instances. Inheritance System.Object GalleryCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class GalleryCollection : Collection<Gallery> Properties | Improve this Doc View Source Page The current page that the group search results represents. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The total number of pages this search would return. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of groups returned per photo. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PhotoId The ID photo that these galleries contain if called from GetListForPhotoAsync(String, Int32, Int32, CancellationToken) . Declaration public string PhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Total The total number of groups that where returned for the search. Declaration public int Total { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source UserId The owner of these galleries if called from GetListAsync(String, Int32, Int32, CancellationToken) . Declaration public string UserId { get; set; } Property Value Type Description System.String Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.GalleryPhotoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.GalleryPhotoCollection.html",
    "title": "Class GalleryPhotoCollection | Flickr.Net",
    "keywords": "Class GalleryPhotoCollection A list of gallery photos as returned by GetPhotosAsync(String, PhotoSearchExtras, CancellationToken) Inheritance System.Object System.Collections.ObjectModel.Collection < GalleryPhoto > GalleryPhotoCollection Implements System.Collections.Generic.IList < GalleryPhoto > System.Collections.Generic.ICollection < GalleryPhoto > System.Collections.Generic.IReadOnlyList < GalleryPhoto > System.Collections.Generic.IReadOnlyCollection < GalleryPhoto > System.Collections.Generic.IEnumerable < GalleryPhoto > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.Add(Flickr.Net.Core.Entities.GalleryPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.Contains(Flickr.Net.Core.Entities.GalleryPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.CopyTo(Flickr.Net.Core.Entities.GalleryPhoto[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.IndexOf(Flickr.Net.Core.Entities.GalleryPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.Insert(System.Int32, Flickr.Net.Core.Entities.GalleryPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.InsertItem(System.Int32, Flickr.Net.Core.Entities.GalleryPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.Remove(Flickr.Net.Core.Entities.GalleryPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.SetItem(System.Int32, Flickr.Net.Core.Entities.GalleryPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.GalleryPhoto>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GalleryPhoto>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class GalleryPhotoCollection : Collection<GalleryPhoto>, IList<GalleryPhoto>, ICollection<GalleryPhoto>, IReadOnlyList<GalleryPhoto>, IReadOnlyCollection<GalleryPhoto>, IEnumerable<GalleryPhoto>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Page The page of the results returned. Will be 1 even if no results are returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of photos returned. Will likely be 1 if no photos are returned. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of photos returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of photos that match the query. Call the method again to retrieve each page of results if Total > PerPage. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.GroupInfoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.GroupInfoCollection.html",
    "title": "Class GroupInfoCollection | Flickr.Net",
    "keywords": "Class GroupInfoCollection List containing GroupInfo items. Inheritance System.Object System.Collections.ObjectModel.Collection < GroupInfo > GroupInfoCollection Implements System.Collections.Generic.IList < GroupInfo > System.Collections.Generic.ICollection < GroupInfo > System.Collections.Generic.IReadOnlyList < GroupInfo > System.Collections.Generic.IReadOnlyCollection < GroupInfo > System.Collections.Generic.IEnumerable < GroupInfo > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.Add(Flickr.Net.Core.Entities.GroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.Contains(Flickr.Net.Core.Entities.GroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.CopyTo(Flickr.Net.Core.Entities.GroupInfo[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.IndexOf(Flickr.Net.Core.Entities.GroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.Insert(System.Int32, Flickr.Net.Core.Entities.GroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.InsertItem(System.Int32, Flickr.Net.Core.Entities.GroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.Remove(Flickr.Net.Core.Entities.GroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.SetItem(System.Int32, Flickr.Net.Core.Entities.GroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.GroupInfo>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupInfo>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class GroupInfoCollection : Collection<GroupInfo>, IList<GroupInfo>, ICollection<GroupInfo>, IReadOnlyList<GroupInfo>, IReadOnlyCollection<GroupInfo>, IEnumerable<GroupInfo>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.GroupSearchResultCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.GroupSearchResultCollection.html",
    "title": "Class GroupSearchResultCollection | Flickr.Net",
    "keywords": "Class GroupSearchResultCollection Returned by SearchAsync(String, Int32, Int32, CancellationToken) methods. Inheritance System.Object System.Collections.ObjectModel.Collection < GroupSearchResult > GroupSearchResultCollection Implements System.Collections.Generic.IList < GroupSearchResult > System.Collections.Generic.ICollection < GroupSearchResult > System.Collections.Generic.IReadOnlyList < GroupSearchResult > System.Collections.Generic.IReadOnlyCollection < GroupSearchResult > System.Collections.Generic.IEnumerable < GroupSearchResult > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.Add(Flickr.Net.Core.Entities.GroupSearchResult) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.Contains(Flickr.Net.Core.Entities.GroupSearchResult) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.CopyTo(Flickr.Net.Core.Entities.GroupSearchResult[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.IndexOf(Flickr.Net.Core.Entities.GroupSearchResult) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.Insert(System.Int32, Flickr.Net.Core.Entities.GroupSearchResult) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.InsertItem(System.Int32, Flickr.Net.Core.Entities.GroupSearchResult) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.Remove(Flickr.Net.Core.Entities.GroupSearchResult) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.SetItem(System.Int32, Flickr.Net.Core.Entities.GroupSearchResult) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.GroupSearchResult>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.GroupSearchResult>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class GroupSearchResultCollection : Collection<GroupSearchResult>, IList<GroupSearchResult>, ICollection<GroupSearchResult>, IReadOnlyList<GroupSearchResult>, IReadOnlyCollection<GroupSearchResult>, IEnumerable<GroupSearchResult>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Page The current page that the group search results represents. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The total number of pages this search would return. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of groups returned per photo. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of groups that where returned for the search. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.HotTagCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.HotTagCollection.html",
    "title": "Class HotTagCollection | Flickr.Net",
    "keywords": "Class HotTagCollection A collection of HotTag instances. Inheritance System.Object HotTagCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class HotTagCollection : Collection<HotTag> Properties | Improve this Doc View Source Period The period that was used for the query. Declaration public string Period { get; set; } Property Value Type Description System.String | Improve this Doc View Source TagCount The count that was used for the query. Declaration public int TagCount { get; set; } Property Value Type Description System.Int32 Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.html",
    "title": "Namespace Flickr.Net.Core.Entities.Collections | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Entities.Collections Classes ActivityItemCollection A list of ActivityItem items. BlogCollection Contains a list of Blog items for the user. BlogServiceCollection A list of the blog services that Flickr aupports. BrandCollection A collection of camera brands CameraCollection A collection of camera models for a particular brand. ClusterCollection A collection of Cluster instances. CollectionCollection The collection collection. ContactCollection Contains a list of Contact items for a given user. CsvFileCollection The collection of CSV files containing archived stats available for download from Flickr. ExifTagCollection EXIF data for the selected photo. GalleryCollection A collection of Gallery instances. GalleryPhotoCollection A list of gallery photos as returned by GetPhotosAsync(String, PhotoSearchExtras, CancellationToken) GroupInfoCollection List containing GroupInfo items. GroupSearchResultCollection Returned by SearchAsync(String, Int32, Int32, CancellationToken) methods. HotTagCollection A collection of HotTag instances. InstitutionCollection A collection of Institution instances. LicenseCollection A class which encapsulates a single property, an array of License objects in its LicenseCollection property. MemberCollection A collection of members returned by the GetListAsync(String, MemberTypes, Int32, Int32, CancellationToken) method. MemberGroupInfoCollection A list of MemberGroupInfo items. MethodCollection Summary description for Methods. NamespaceCollection A collection of Namespace instances. PagedPhotoCollection Abstract class containing a collection of Photo instances along with paged information about the result set. PairCollection A collection of Pair instances. PandaPhotoCollection A collection of photos returned by the GetPhotosAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) methods. PeoplePhotoCollection A collection of photos returned by the GetPhotosAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) methods. PhotoCollection The photo collection. PhotoCommentCollection A list of PhotoComment items. PhotoCountCollection The information about the number of photos a user has. PhotoFavoriteCollection The collection of favourites for a photo. PhotoPersonCollection A list of PhotoPerson instances. PhotosetCollection Collection containing a users photosets. PhotosetCommentCollection A list of PhotoComment items. PhotosetPhotoCollection A list of photos contained within a photoset. PlaceCollection A list of Place items. PlaceTypeInfoCollection Collection containing information about the types of 'places' available from the Flickr API. PopularPhotoCollection A list of popular photos as returned by GetPopularPhotosAsync(DateTime, PopularitySort, Int32, Int32, CancellationToken) PredicateCollection A collection of Predicate instances. ShapeDataCollection A collection of ShapeData instances. SizeCollection Collection of Size items for a given photograph. StatDomainCollection A list of referring domains. StatReferrerCollection A list of referrers. SubscriptionCollection A collection of Subscription instances for the calling user. SuggestionCollection The collection of location suggestions returned by GetListAsync(String, SuggestionStatus, CancellationToken) . TagCollection List containing Tag items. TicketCollection A collection of Ticket instances. TopicCollection A collection of topics for a particular group. TopicReplyCollection The list of replies for a particular topic. ValueCollection A collection of Value instances."
  },
  "api/Flickr.Net.Core.Entities.Collections.InstitutionCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.InstitutionCollection.html",
    "title": "Class InstitutionCollection | Flickr.Net",
    "keywords": "Class InstitutionCollection A collection of Institution instances. Inheritance System.Object InstitutionCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class InstitutionCollection : Collection<Institution> Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.LicenseCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.LicenseCollection.html",
    "title": "Class LicenseCollection | Flickr.Net",
    "keywords": "Class LicenseCollection A class which encapsulates a single property, an array of License objects in its LicenseCollection property. Inheritance System.Object System.Collections.ObjectModel.Collection < License > LicenseCollection Implements System.Collections.Generic.IList < License > System.Collections.Generic.ICollection < License > System.Collections.Generic.IReadOnlyList < License > System.Collections.Generic.IReadOnlyCollection < License > System.Collections.Generic.IEnumerable < License > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.Add(Flickr.Net.Core.Entities.License) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.Contains(Flickr.Net.Core.Entities.License) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.CopyTo(Flickr.Net.Core.Entities.License[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.IndexOf(Flickr.Net.Core.Entities.License) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.Insert(System.Int32, Flickr.Net.Core.Entities.License) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.InsertItem(System.Int32, Flickr.Net.Core.Entities.License) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.Remove(Flickr.Net.Core.Entities.License) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.SetItem(System.Int32, Flickr.Net.Core.Entities.License) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.License>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.License>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class LicenseCollection : Collection<License>, IList<License>, ICollection<License>, IReadOnlyList<License>, IReadOnlyCollection<License>, IEnumerable<License>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.MemberCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.MemberCollection.html",
    "title": "Class MemberCollection | Flickr.Net",
    "keywords": "Class MemberCollection A collection of members returned by the GetListAsync(String, MemberTypes, Int32, Int32, CancellationToken) method. Inheritance System.Object System.Collections.ObjectModel.Collection < Member > MemberCollection Implements System.Collections.Generic.IList < Member > System.Collections.Generic.ICollection < Member > System.Collections.Generic.IReadOnlyList < Member > System.Collections.Generic.IReadOnlyCollection < Member > System.Collections.Generic.IEnumerable < Member > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.Add(Flickr.Net.Core.Entities.Member) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.Contains(Flickr.Net.Core.Entities.Member) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.CopyTo(Flickr.Net.Core.Entities.Member[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.IndexOf(Flickr.Net.Core.Entities.Member) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.Insert(System.Int32, Flickr.Net.Core.Entities.Member) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Member) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.Remove(Flickr.Net.Core.Entities.Member) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.SetItem(System.Int32, Flickr.Net.Core.Entities.Member) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Member>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Member>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class MemberCollection : Collection<Member>, IList<Member>, ICollection<Member>, IReadOnlyList<Member>, IReadOnlyCollection<Member>, IEnumerable<Member>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Page The page of the results returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The total number of pages that could have been returned. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of members returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of members in the group. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.MemberGroupInfoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.MemberGroupInfoCollection.html",
    "title": "Class MemberGroupInfoCollection | Flickr.Net",
    "keywords": "Class MemberGroupInfoCollection A list of MemberGroupInfo items. Inheritance System.Object System.Collections.ObjectModel.Collection < MemberGroupInfo > MemberGroupInfoCollection Implements System.Collections.Generic.IList < MemberGroupInfo > System.Collections.Generic.ICollection < MemberGroupInfo > System.Collections.Generic.IReadOnlyList < MemberGroupInfo > System.Collections.Generic.IReadOnlyCollection < MemberGroupInfo > System.Collections.Generic.IEnumerable < MemberGroupInfo > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.Add(Flickr.Net.Core.Entities.MemberGroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.Contains(Flickr.Net.Core.Entities.MemberGroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.CopyTo(Flickr.Net.Core.Entities.MemberGroupInfo[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.IndexOf(Flickr.Net.Core.Entities.MemberGroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.Insert(System.Int32, Flickr.Net.Core.Entities.MemberGroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.InsertItem(System.Int32, Flickr.Net.Core.Entities.MemberGroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.Remove(Flickr.Net.Core.Entities.MemberGroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.SetItem(System.Int32, Flickr.Net.Core.Entities.MemberGroupInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.MemberGroupInfo>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.MemberGroupInfo>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class MemberGroupInfoCollection : Collection<MemberGroupInfo>, IList<MemberGroupInfo>, ICollection<MemberGroupInfo>, IReadOnlyList<MemberGroupInfo>, IReadOnlyCollection<MemberGroupInfo>, IEnumerable<MemberGroupInfo>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Page The page of the results that has been returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The total number of pages of results that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of results that are returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 Remarks This may be more than the total number of groups returned if this is the last page. | Improve this Doc View Source Total The total number of groups that are available. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.MethodCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.MethodCollection.html",
    "title": "Class MethodCollection | Flickr.Net",
    "keywords": "Class MethodCollection Summary description for Methods. Inheritance System.Object System.Collections.ObjectModel.Collection < System.String > MethodCollection Implements System.Collections.Generic.IList < System.String > System.Collections.Generic.ICollection < System.String > System.Collections.Generic.IReadOnlyList < System.String > System.Collections.Generic.IReadOnlyCollection < System.String > System.Collections.Generic.IEnumerable < System.String > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<System.String>.Add(System.String) System.Collections.ObjectModel.Collection<System.String>.Clear() System.Collections.ObjectModel.Collection<System.String>.ClearItems() System.Collections.ObjectModel.Collection<System.String>.Contains(System.String) System.Collections.ObjectModel.Collection<System.String>.CopyTo(System.String[], System.Int32) System.Collections.ObjectModel.Collection<System.String>.GetEnumerator() System.Collections.ObjectModel.Collection<System.String>.IndexOf(System.String) System.Collections.ObjectModel.Collection<System.String>.Insert(System.Int32, System.String) System.Collections.ObjectModel.Collection<System.String>.InsertItem(System.Int32, System.String) System.Collections.ObjectModel.Collection<System.String>.Remove(System.String) System.Collections.ObjectModel.Collection<System.String>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<System.String>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<System.String>.SetItem(System.Int32, System.String) System.Collections.ObjectModel.Collection<System.String>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<System.String>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<System.String>.Count System.Collections.ObjectModel.Collection<System.String>.Item[System.Int32] System.Collections.ObjectModel.Collection<System.String>.Items System.Collections.ObjectModel.Collection<System.String>.System.Collections.Generic.ICollection<System.String>.IsReadOnly System.Collections.ObjectModel.Collection<System.String>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<System.String>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<System.String>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class MethodCollection : Collection<string>, IList<string>, ICollection<string>, IReadOnlyList<string>, IReadOnlyCollection<string>, IEnumerable<string>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.NamespaceCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.NamespaceCollection.html",
    "title": "Class NamespaceCollection | Flickr.Net",
    "keywords": "Class NamespaceCollection A collection of Namespace instances. Inheritance System.Object NamespaceCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class NamespaceCollection : Collection<Namespace> Properties | Improve this Doc View Source Page The page of the result set that has been returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of namespaces that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of namespaces returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of namespaces that match the calling query. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PagedPhotoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PagedPhotoCollection.html",
    "title": "Class PagedPhotoCollection | Flickr.Net",
    "keywords": "Class PagedPhotoCollection Abstract class containing a collection of Photo instances along with paged information about the result set. Inheritance System.Object System.Collections.ObjectModel.Collection < Photo > PagedPhotoCollection PhotoCollection PhotosetPhotoCollection Implements System.Collections.Generic.IList < Photo > System.Collections.Generic.ICollection < Photo > System.Collections.Generic.IReadOnlyList < Photo > System.Collections.Generic.IReadOnlyCollection < Photo > System.Collections.Generic.IEnumerable < Photo > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Add(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Contains(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.CopyTo(Flickr.Net.Core.Entities.Photo[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.IndexOf(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Insert(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Remove(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.SetItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Photo>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public abstract class PagedPhotoCollection : Collection<Photo>, IList<Photo>, ICollection<Photo>, IReadOnlyList<Photo>, IReadOnlyCollection<Photo>, IEnumerable<Photo>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Page The Page of results that was returned from Flickr. The first page is 1. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages available from Flickr. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of photos per page in the result set. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of photos available from Flickr (over all the pages). Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PairCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PairCollection.html",
    "title": "Class PairCollection | Flickr.Net",
    "keywords": "Class PairCollection A collection of Pair instances. Inheritance System.Object PairCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PairCollection : Collection<Pair> Properties | Improve this Doc View Source NamespaceName The namespace that was searched for, if any. Declaration public string NamespaceName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Page The page of the result set that has been returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of namespaces that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of namespaces returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PredicateName The name of the predicate searched for, if any. Declaration public string PredicateName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Total The total number of namespaces that match the calling query. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PandaPhotoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PandaPhotoCollection.html",
    "title": "Class PandaPhotoCollection | Flickr.Net",
    "keywords": "Class PandaPhotoCollection A collection of photos returned by the GetPhotosAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) methods. Inheritance System.Object System.Collections.ObjectModel.Collection < Photo > PandaPhotoCollection Implements System.Collections.Generic.IList < Photo > System.Collections.Generic.ICollection < Photo > System.Collections.Generic.IReadOnlyList < Photo > System.Collections.Generic.IReadOnlyCollection < Photo > System.Collections.Generic.IEnumerable < Photo > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Add(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Contains(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.CopyTo(Flickr.Net.Core.Entities.Photo[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.IndexOf(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Insert(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Remove(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.SetItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Photo>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PandaPhotoCollection : Collection<Photo>, IList<Photo>, ICollection<Photo>, IReadOnlyList<Photo>, IReadOnlyCollection<Photo>, IEnumerable<Photo>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Interval The number of seconds the application developer should wait before calling this panda again. Declaration public int Interval { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source LastUpdated When the list of photos from this panda was last updated. Declaration public DateTime LastUpdated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source PandaName The pands that returned this set of photos. Declaration public string PandaName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Total The total number of photos returned. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PeoplePhotoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PeoplePhotoCollection.html",
    "title": "Class PeoplePhotoCollection | Flickr.Net",
    "keywords": "Class PeoplePhotoCollection A collection of photos returned by the GetPhotosAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) methods. Inheritance System.Object System.Collections.ObjectModel.Collection < Photo > PeoplePhotoCollection Implements System.Collections.Generic.IList < Photo > System.Collections.Generic.ICollection < Photo > System.Collections.Generic.IReadOnlyList < Photo > System.Collections.Generic.IReadOnlyCollection < Photo > System.Collections.Generic.IEnumerable < Photo > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Add(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Contains(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.CopyTo(Flickr.Net.Core.Entities.Photo[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.IndexOf(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Insert(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Remove(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.SetItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Photo>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PeoplePhotoCollection : Collection<Photo>, IList<Photo>, ICollection<Photo>, IReadOnlyList<Photo>, IReadOnlyCollection<Photo>, IEnumerable<Photo>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source HasNextPage When the list of photos from this panda was last updated. Declaration public bool HasNextPage { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Page The number of seconds the application developer should wait before calling this panda again. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages Only populate for authenticated calls to GetPhotosOfAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The total number of photos returned. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total Only populate for authenticated calls to GetPhotosOfAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PhotoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PhotoCollection.html",
    "title": "Class PhotoCollection | Flickr.Net",
    "keywords": "Class PhotoCollection The photo collection. Inheritance System.Object System.Collections.ObjectModel.Collection < Photo > PagedPhotoCollection PhotoCollection Implements System.Collections.Generic.IList < Photo > System.Collections.Generic.ICollection < Photo > System.Collections.Generic.IReadOnlyList < Photo > System.Collections.Generic.IReadOnlyCollection < Photo > System.Collections.Generic.IEnumerable < Photo > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members PagedPhotoCollection.Page PagedPhotoCollection.Pages PagedPhotoCollection.PerPage PagedPhotoCollection.Total System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Add(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Contains(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.CopyTo(Flickr.Net.Core.Entities.Photo[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.IndexOf(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Insert(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Remove(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.SetItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Photo>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoCollection : PagedPhotoCollection, IList<Photo>, ICollection<Photo>, IReadOnlyList<Photo>, IReadOnlyCollection<Photo>, IEnumerable<Photo>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PhotoCommentCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PhotoCommentCollection.html",
    "title": "Class PhotoCommentCollection | Flickr.Net",
    "keywords": "Class PhotoCommentCollection A list of PhotoComment items. Inheritance System.Object System.Collections.ObjectModel.Collection < PhotoComment > PhotoCommentCollection Implements System.Collections.Generic.IList < PhotoComment > System.Collections.Generic.ICollection < PhotoComment > System.Collections.Generic.IReadOnlyList < PhotoComment > System.Collections.Generic.IReadOnlyCollection < PhotoComment > System.Collections.Generic.IEnumerable < PhotoComment > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Add(Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Contains(Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.CopyTo(Flickr.Net.Core.Entities.PhotoComment[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.IndexOf(Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Insert(System.Int32, Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.InsertItem(System.Int32, Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Remove(Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.SetItem(System.Int32, Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.PhotoComment>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoCommentCollection : Collection<PhotoComment>, IList<PhotoComment>, ICollection<PhotoComment>, IReadOnlyList<PhotoComment>, IReadOnlyCollection<PhotoComment>, IEnumerable<PhotoComment>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source PhotoId The ID of photo for these comments. Declaration public string PhotoId { get; set; } Property Value Type Description System.String Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PhotoCountCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PhotoCountCollection.html",
    "title": "Class PhotoCountCollection | Flickr.Net",
    "keywords": "Class PhotoCountCollection The information about the number of photos a user has. Inheritance System.Object System.Collections.ObjectModel.Collection < PhotoCount > PhotoCountCollection Implements System.Collections.Generic.IList < PhotoCount > System.Collections.Generic.ICollection < PhotoCount > System.Collections.Generic.IReadOnlyList < PhotoCount > System.Collections.Generic.IReadOnlyCollection < PhotoCount > System.Collections.Generic.IEnumerable < PhotoCount > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.Add(Flickr.Net.Core.Entities.PhotoCount) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.Contains(Flickr.Net.Core.Entities.PhotoCount) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.CopyTo(Flickr.Net.Core.Entities.PhotoCount[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.IndexOf(Flickr.Net.Core.Entities.PhotoCount) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.Insert(System.Int32, Flickr.Net.Core.Entities.PhotoCount) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.InsertItem(System.Int32, Flickr.Net.Core.Entities.PhotoCount) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.Remove(Flickr.Net.Core.Entities.PhotoCount) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.SetItem(System.Int32, Flickr.Net.Core.Entities.PhotoCount) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.PhotoCount>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoCount>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoCountCollection : Collection<PhotoCount>, IList<PhotoCount>, ICollection<PhotoCount>, IReadOnlyList<PhotoCount>, IReadOnlyCollection<PhotoCount>, IEnumerable<PhotoCount>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PhotoFavoriteCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PhotoFavoriteCollection.html",
    "title": "Class PhotoFavoriteCollection | Flickr.Net",
    "keywords": "Class PhotoFavoriteCollection The collection of favourites for a photo. Inheritance System.Object System.Collections.ObjectModel.Collection < PhotoFavorite > PhotoFavoriteCollection Implements System.Collections.Generic.IList < PhotoFavorite > System.Collections.Generic.ICollection < PhotoFavorite > System.Collections.Generic.IReadOnlyList < PhotoFavorite > System.Collections.Generic.IReadOnlyCollection < PhotoFavorite > System.Collections.Generic.IEnumerable < PhotoFavorite > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.Add(Flickr.Net.Core.Entities.PhotoFavorite) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.Contains(Flickr.Net.Core.Entities.PhotoFavorite) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.CopyTo(Flickr.Net.Core.Entities.PhotoFavorite[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.IndexOf(Flickr.Net.Core.Entities.PhotoFavorite) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.Insert(System.Int32, Flickr.Net.Core.Entities.PhotoFavorite) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.InsertItem(System.Int32, Flickr.Net.Core.Entities.PhotoFavorite) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.Remove(Flickr.Net.Core.Entities.PhotoFavorite) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.SetItem(System.Int32, Flickr.Net.Core.Entities.PhotoFavorite) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.PhotoFavorite>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoFavorite>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoFavoriteCollection : Collection<PhotoFavorite>, IList<PhotoFavorite>, ICollection<PhotoFavorite>, IReadOnlyList<PhotoFavorite>, IReadOnlyCollection<PhotoFavorite>, IEnumerable<PhotoFavorite>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Page The page of favourites that has been returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of favourites that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of favourites returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PhotoId The ID of the photo. Declaration public string PhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Total The total number of favourites for this photo. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PhotoPersonCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PhotoPersonCollection.html",
    "title": "Class PhotoPersonCollection | Flickr.Net",
    "keywords": "Class PhotoPersonCollection A list of PhotoPerson instances. Inheritance System.Object System.Collections.ObjectModel.Collection < PhotoPerson > PhotoPersonCollection Implements System.Collections.Generic.IList < PhotoPerson > System.Collections.Generic.ICollection < PhotoPerson > System.Collections.Generic.IReadOnlyList < PhotoPerson > System.Collections.Generic.IReadOnlyCollection < PhotoPerson > System.Collections.Generic.IEnumerable < PhotoPerson > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.Add(Flickr.Net.Core.Entities.PhotoPerson) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.Contains(Flickr.Net.Core.Entities.PhotoPerson) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.CopyTo(Flickr.Net.Core.Entities.PhotoPerson[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.IndexOf(Flickr.Net.Core.Entities.PhotoPerson) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.Insert(System.Int32, Flickr.Net.Core.Entities.PhotoPerson) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.InsertItem(System.Int32, Flickr.Net.Core.Entities.PhotoPerson) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.Remove(Flickr.Net.Core.Entities.PhotoPerson) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.SetItem(System.Int32, Flickr.Net.Core.Entities.PhotoPerson) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.PhotoPerson>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoPerson>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoPersonCollection : Collection<PhotoPerson>, IList<PhotoPerson>, ICollection<PhotoPerson>, IReadOnlyList<PhotoPerson>, IReadOnlyCollection<PhotoPerson>, IEnumerable<PhotoPerson>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source PhotoHeight The height of the photo used for positioning the people. Declaration public int PhotoHeight { get; set; } Property Value Type Description System.Int32 Remarks This will usually be the medium or the medium-640 image. | Improve this Doc View Source PhotoWidth The width of the photo used for positioning the people. Declaration public int PhotoWidth { get; set; } Property Value Type Description System.Int32 Remarks This will usually be the medium or the medium-640 image. | Improve this Doc View Source Total The total number of PhotoPerson instances returned. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PhotosetCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PhotosetCollection.html",
    "title": "Class PhotosetCollection | Flickr.Net",
    "keywords": "Class PhotosetCollection Collection containing a users photosets. Inheritance System.Object System.Collections.ObjectModel.Collection < Photoset > PhotosetCollection Implements System.Collections.Generic.IList < Photoset > System.Collections.Generic.ICollection < Photoset > System.Collections.Generic.IReadOnlyList < Photoset > System.Collections.Generic.IReadOnlyCollection < Photoset > System.Collections.Generic.IEnumerable < Photoset > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.Add(Flickr.Net.Core.Entities.Photoset) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.Contains(Flickr.Net.Core.Entities.Photoset) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.CopyTo(Flickr.Net.Core.Entities.Photoset[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.IndexOf(Flickr.Net.Core.Entities.Photoset) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.Insert(System.Int32, Flickr.Net.Core.Entities.Photoset) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Photoset) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.Remove(Flickr.Net.Core.Entities.Photoset) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.SetItem(System.Int32, Flickr.Net.Core.Entities.Photoset) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Photoset>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photoset>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotosetCollection : Collection<Photoset>, IList<Photoset>, ICollection<Photoset>, IReadOnlyList<Photoset>, IReadOnlyCollection<Photoset>, IEnumerable<Photoset>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source CanCreate Can the user create more photosets. Declaration public bool CanCreate { get; set; } Property Value Type Description System.Boolean Remarks 1 meants yes, 0 means no. | Improve this Doc View Source Page The current page of the results. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The total number of pages of results available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The maximum number of photosets returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of photosets available. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PhotosetCommentCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PhotosetCommentCollection.html",
    "title": "Class PhotosetCommentCollection | Flickr.Net",
    "keywords": "Class PhotosetCommentCollection A list of PhotoComment items. Inheritance System.Object System.Collections.ObjectModel.Collection < PhotoComment > PhotosetCommentCollection Implements System.Collections.Generic.IList < PhotoComment > System.Collections.Generic.ICollection < PhotoComment > System.Collections.Generic.IReadOnlyList < PhotoComment > System.Collections.Generic.IReadOnlyCollection < PhotoComment > System.Collections.Generic.IEnumerable < PhotoComment > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Add(Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Contains(Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.CopyTo(Flickr.Net.Core.Entities.PhotoComment[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.IndexOf(Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Insert(System.Int32, Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.InsertItem(System.Int32, Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Remove(Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.SetItem(System.Int32, Flickr.Net.Core.Entities.PhotoComment) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.PhotoComment>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PhotoComment>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotosetCommentCollection : Collection<PhotoComment>, IList<PhotoComment>, ICollection<PhotoComment>, IReadOnlyList<PhotoComment>, IReadOnlyCollection<PhotoComment>, IEnumerable<PhotoComment>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source PhotosetId The ID of the photoset for this comment. Declaration public string PhotosetId { get; set; } Property Value Type Description System.String Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PhotosetPhotoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PhotosetPhotoCollection.html",
    "title": "Class PhotosetPhotoCollection | Flickr.Net",
    "keywords": "Class PhotosetPhotoCollection A list of photos contained within a photoset. Inheritance System.Object System.Collections.ObjectModel.Collection < Photo > PagedPhotoCollection PhotosetPhotoCollection Implements System.Collections.Generic.IList < Photo > System.Collections.Generic.ICollection < Photo > System.Collections.Generic.IReadOnlyList < Photo > System.Collections.Generic.IReadOnlyCollection < Photo > System.Collections.Generic.IEnumerable < Photo > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members PagedPhotoCollection.Page PagedPhotoCollection.Pages PagedPhotoCollection.PerPage PagedPhotoCollection.Total System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Add(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Contains(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.CopyTo(Flickr.Net.Core.Entities.Photo[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.IndexOf(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Insert(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Remove(Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.SetItem(System.Int32, Flickr.Net.Core.Entities.Photo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Photo>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Photo>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotosetPhotoCollection : PagedPhotoCollection, IList<Photo>, ICollection<Photo>, IReadOnlyList<Photo>, IReadOnlyCollection<Photo>, IEnumerable<Photo>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source OwnerId The NSID of the owner of this photoset. Declaration public string OwnerId { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerName The real name of the owner of this photoset. Declaration public string OwnerName { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotosetId The id for the photoset. Declaration public string PhotosetId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PrimaryPhotoId The ID of the primary photo for this photoset. May be contained within the list. Declaration public string PrimaryPhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Title The title of the photoset. Declaration public string Title { get; set; } Property Value Type Description System.String Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PlaceCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PlaceCollection.html",
    "title": "Class PlaceCollection | Flickr.Net",
    "keywords": "Class PlaceCollection A list of Place items. Inheritance System.Object System.Collections.ObjectModel.Collection < Place > PlaceCollection Implements System.Collections.Generic.IList < Place > System.Collections.Generic.ICollection < Place > System.Collections.Generic.IReadOnlyList < Place > System.Collections.Generic.IReadOnlyCollection < Place > System.Collections.Generic.IEnumerable < Place > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.Add(Flickr.Net.Core.Entities.Place) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.Contains(Flickr.Net.Core.Entities.Place) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.CopyTo(Flickr.Net.Core.Entities.Place[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.IndexOf(Flickr.Net.Core.Entities.Place) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.Insert(System.Int32, Flickr.Net.Core.Entities.Place) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Place) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.Remove(Flickr.Net.Core.Entities.Place) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.SetItem(System.Int32, Flickr.Net.Core.Entities.Place) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Place>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Place>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PlaceCollection : Collection<Place>, IList<Place>, ICollection<Place>, IReadOnlyList<Place>, IReadOnlyCollection<Place>, IEnumerable<Place>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PlaceTypeInfoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PlaceTypeInfoCollection.html",
    "title": "Class PlaceTypeInfoCollection | Flickr.Net",
    "keywords": "Class PlaceTypeInfoCollection Collection containing information about the types of 'places' available from the Flickr API. Inheritance System.Object System.Collections.ObjectModel.Collection < PlaceTypeInfo > PlaceTypeInfoCollection Implements System.Collections.Generic.IList < PlaceTypeInfo > System.Collections.Generic.ICollection < PlaceTypeInfo > System.Collections.Generic.IReadOnlyList < PlaceTypeInfo > System.Collections.Generic.IReadOnlyCollection < PlaceTypeInfo > System.Collections.Generic.IEnumerable < PlaceTypeInfo > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.Add(Flickr.Net.Core.Entities.PlaceTypeInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.Contains(Flickr.Net.Core.Entities.PlaceTypeInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.CopyTo(Flickr.Net.Core.Entities.PlaceTypeInfo[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.IndexOf(Flickr.Net.Core.Entities.PlaceTypeInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.Insert(System.Int32, Flickr.Net.Core.Entities.PlaceTypeInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.InsertItem(System.Int32, Flickr.Net.Core.Entities.PlaceTypeInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.Remove(Flickr.Net.Core.Entities.PlaceTypeInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.SetItem(System.Int32, Flickr.Net.Core.Entities.PlaceTypeInfo) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.PlaceTypeInfo>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PlaceTypeInfo>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PlaceTypeInfoCollection : Collection<PlaceTypeInfo>, IList<PlaceTypeInfo>, ICollection<PlaceTypeInfo>, IReadOnlyList<PlaceTypeInfo>, IReadOnlyCollection<PlaceTypeInfo>, IEnumerable<PlaceTypeInfo>, IList, ICollection, IEnumerable Remarks Use the PlaceInfo enumeration were possible. Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PopularPhotoCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PopularPhotoCollection.html",
    "title": "Class PopularPhotoCollection | Flickr.Net",
    "keywords": "Class PopularPhotoCollection A list of popular photos as returned by GetPopularPhotosAsync(DateTime, PopularitySort, Int32, Int32, CancellationToken) Inheritance System.Object System.Collections.ObjectModel.Collection < PopularPhoto > PopularPhotoCollection Implements System.Collections.Generic.IList < PopularPhoto > System.Collections.Generic.ICollection < PopularPhoto > System.Collections.Generic.IReadOnlyList < PopularPhoto > System.Collections.Generic.IReadOnlyCollection < PopularPhoto > System.Collections.Generic.IEnumerable < PopularPhoto > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.Add(Flickr.Net.Core.Entities.PopularPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.Contains(Flickr.Net.Core.Entities.PopularPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.CopyTo(Flickr.Net.Core.Entities.PopularPhoto[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.IndexOf(Flickr.Net.Core.Entities.PopularPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.Insert(System.Int32, Flickr.Net.Core.Entities.PopularPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.InsertItem(System.Int32, Flickr.Net.Core.Entities.PopularPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.Remove(Flickr.Net.Core.Entities.PopularPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.SetItem(System.Int32, Flickr.Net.Core.Entities.PopularPhoto) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.PopularPhoto>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.PopularPhoto>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PopularPhotoCollection : Collection<PopularPhoto>, IList<PopularPhoto>, ICollection<PopularPhoto>, IReadOnlyList<PopularPhoto>, IReadOnlyCollection<PopularPhoto>, IEnumerable<PopularPhoto>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Page The page of the results returned. Will be 1 even if no results are returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of photos returned. Will likely be 1 if no photos are returned. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of photos returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of photos that match the query. Call the method again to retrieve each page of results if Total > PerPage. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.PredicateCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.PredicateCollection.html",
    "title": "Class PredicateCollection | Flickr.Net",
    "keywords": "Class PredicateCollection A collection of Predicate instances. Inheritance System.Object PredicateCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class PredicateCollection : Collection<Predicate> Properties | Improve this Doc View Source Page The page of the result set that has been returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of namespaces that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of namespaces returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of namespaces that match the calling query. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.ShapeDataCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.ShapeDataCollection.html",
    "title": "Class ShapeDataCollection | Flickr.Net",
    "keywords": "Class ShapeDataCollection A collection of ShapeData instances. Inheritance System.Object ShapeDataCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class ShapeDataCollection : Collection<ShapeData> Properties | Improve this Doc View Source Page The page of the result set that has been returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of shapes that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of shapes returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PlaceId The Flickr place ID for these shapes. Declaration public string PlaceId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PlaceType The type for this place. Declaration public PlaceType PlaceType { get; set; } Property Value Type Description PlaceType | Improve this Doc View Source Total The total number of shapes that match the calling query. Declaration public int Total { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source WoeId The WOE (Where On Earth) ID for these shapes. Declaration public string WoeId { get; set; } Property Value Type Description System.String Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.SizeCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.SizeCollection.html",
    "title": "Class SizeCollection | Flickr.Net",
    "keywords": "Class SizeCollection Collection of Size items for a given photograph. Inheritance System.Object System.Collections.ObjectModel.Collection < Size > SizeCollection Implements System.Collections.Generic.IList < Size > System.Collections.Generic.ICollection < Size > System.Collections.Generic.IReadOnlyList < Size > System.Collections.Generic.IReadOnlyCollection < Size > System.Collections.Generic.IEnumerable < Size > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.Add(Flickr.Net.Core.Entities.Size) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.Contains(Flickr.Net.Core.Entities.Size) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.CopyTo(Flickr.Net.Core.Entities.Size[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.IndexOf(Flickr.Net.Core.Entities.Size) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.Insert(System.Int32, Flickr.Net.Core.Entities.Size) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Size) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.Remove(Flickr.Net.Core.Entities.Size) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.SetItem(System.Int32, Flickr.Net.Core.Entities.Size) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Size>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Size>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class SizeCollection : Collection<Size>, IList<Size>, ICollection<Size>, IReadOnlyList<Size>, IReadOnlyCollection<Size>, IEnumerable<Size>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.StatDomainCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.StatDomainCollection.html",
    "title": "Class StatDomainCollection | Flickr.Net",
    "keywords": "Class StatDomainCollection A list of referring domains. Inheritance System.Object System.Collections.ObjectModel.Collection < StatDomain > StatDomainCollection Implements System.Collections.Generic.IList < StatDomain > System.Collections.Generic.ICollection < StatDomain > System.Collections.Generic.IReadOnlyList < StatDomain > System.Collections.Generic.IReadOnlyCollection < StatDomain > System.Collections.Generic.IEnumerable < StatDomain > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.Add(Flickr.Net.Core.Entities.StatDomain) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.Contains(Flickr.Net.Core.Entities.StatDomain) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.CopyTo(Flickr.Net.Core.Entities.StatDomain[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.IndexOf(Flickr.Net.Core.Entities.StatDomain) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.Insert(System.Int32, Flickr.Net.Core.Entities.StatDomain) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.InsertItem(System.Int32, Flickr.Net.Core.Entities.StatDomain) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.Remove(Flickr.Net.Core.Entities.StatDomain) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.SetItem(System.Int32, Flickr.Net.Core.Entities.StatDomain) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.StatDomain>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatDomain>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class StatDomainCollection : Collection<StatDomain>, IList<StatDomain>, ICollection<StatDomain>, IReadOnlyList<StatDomain>, IReadOnlyCollection<StatDomain>, IEnumerable<StatDomain>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source Page The page of this set of results. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of results that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of referrers per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of referrers that are available for this result set. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.StatReferrerCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.StatReferrerCollection.html",
    "title": "Class StatReferrerCollection | Flickr.Net",
    "keywords": "Class StatReferrerCollection A list of referrers. Inheritance System.Object System.Collections.ObjectModel.Collection < StatReferrer > StatReferrerCollection Implements System.Collections.Generic.IList < StatReferrer > System.Collections.Generic.ICollection < StatReferrer > System.Collections.Generic.IReadOnlyList < StatReferrer > System.Collections.Generic.IReadOnlyCollection < StatReferrer > System.Collections.Generic.IEnumerable < StatReferrer > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.Add(Flickr.Net.Core.Entities.StatReferrer) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.Contains(Flickr.Net.Core.Entities.StatReferrer) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.CopyTo(Flickr.Net.Core.Entities.StatReferrer[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.IndexOf(Flickr.Net.Core.Entities.StatReferrer) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.Insert(System.Int32, Flickr.Net.Core.Entities.StatReferrer) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.InsertItem(System.Int32, Flickr.Net.Core.Entities.StatReferrer) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.Remove(Flickr.Net.Core.Entities.StatReferrer) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.SetItem(System.Int32, Flickr.Net.Core.Entities.StatReferrer) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.StatReferrer>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.StatReferrer>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class StatReferrerCollection : Collection<StatReferrer>, IList<StatReferrer>, ICollection<StatReferrer>, IReadOnlyList<StatReferrer>, IReadOnlyCollection<StatReferrer>, IEnumerable<StatReferrer>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source DomainName The domain name for this set of referrers. Declaration public string DomainName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Page The page of this set of results. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of results that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of referrers per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of referrers that are available for this result set. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.SubscriptionCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.SubscriptionCollection.html",
    "title": "Class SubscriptionCollection | Flickr.Net",
    "keywords": "Class SubscriptionCollection A collection of Subscription instances for the calling user. Inheritance System.Object SubscriptionCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class SubscriptionCollection : Collection<Subscription> Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.SuggestionCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.SuggestionCollection.html",
    "title": "Class SuggestionCollection | Flickr.Net",
    "keywords": "Class SuggestionCollection The collection of location suggestions returned by GetListAsync(String, SuggestionStatus, CancellationToken) . Inheritance System.Object SuggestionCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class SuggestionCollection : Collection<Suggestion> Properties | Improve this Doc View Source Page The current page of suggestions returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The total number of pages of suggestions available. Declaration public int Pages { get; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of suggestions per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Total The total number of suggestions available. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.TagCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.TagCollection.html",
    "title": "Class TagCollection | Flickr.Net",
    "keywords": "Class TagCollection List containing Tag items. Inheritance System.Object System.Collections.ObjectModel.Collection < Tag > TagCollection Implements System.Collections.Generic.IList < Tag > System.Collections.Generic.ICollection < Tag > System.Collections.Generic.IReadOnlyList < Tag > System.Collections.Generic.IReadOnlyCollection < Tag > System.Collections.Generic.IEnumerable < Tag > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.Add(Flickr.Net.Core.Entities.Tag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.Contains(Flickr.Net.Core.Entities.Tag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.CopyTo(Flickr.Net.Core.Entities.Tag[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.IndexOf(Flickr.Net.Core.Entities.Tag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.Insert(System.Int32, Flickr.Net.Core.Entities.Tag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Tag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.Remove(Flickr.Net.Core.Entities.Tag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.SetItem(System.Int32, Flickr.Net.Core.Entities.Tag) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Tag>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Tag>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class TagCollection : Collection<Tag>, IList<Tag>, ICollection<Tag>, IReadOnlyList<Tag>, IReadOnlyCollection<Tag>, IEnumerable<Tag>, IList, ICollection, IEnumerable Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.TicketCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.TicketCollection.html",
    "title": "Class TicketCollection | Flickr.Net",
    "keywords": "Class TicketCollection A collection of Ticket instances. Inheritance System.Object TicketCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class TicketCollection : Collection<Ticket> Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.TopicCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.TopicCollection.html",
    "title": "Class TopicCollection | Flickr.Net",
    "keywords": "Class TopicCollection A collection of topics for a particular group. Inheritance System.Object System.Collections.ObjectModel.Collection < Topic > TopicCollection Implements System.Collections.Generic.IList < Topic > System.Collections.Generic.ICollection < Topic > System.Collections.Generic.IReadOnlyList < Topic > System.Collections.Generic.IReadOnlyCollection < Topic > System.Collections.Generic.IEnumerable < Topic > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.Add(Flickr.Net.Core.Entities.Topic) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.Contains(Flickr.Net.Core.Entities.Topic) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.CopyTo(Flickr.Net.Core.Entities.Topic[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.IndexOf(Flickr.Net.Core.Entities.Topic) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.Insert(System.Int32, Flickr.Net.Core.Entities.Topic) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.InsertItem(System.Int32, Flickr.Net.Core.Entities.Topic) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.Remove(Flickr.Net.Core.Entities.Topic) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.SetItem(System.Int32, Flickr.Net.Core.Entities.Topic) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.Topic>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.Topic>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public class TopicCollection : Collection<Topic>, IList<Topic>, ICollection<Topic>, IReadOnlyList<Topic>, IReadOnlyCollection<Topic>, IEnumerable<Topic>, IList, ICollection, IEnumerable Properties | Improve this Doc View Source GroupIconFarm The farm for the group's icon. Declaration public string GroupIconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupIconServer The server for the group's icon. Declaration public string GroupIconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupIconUrl The URL for the group icon. Declaration public string GroupIconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source GroupId The id of the group the topics belong to. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupName The name of the group the topics belong to. Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsPoolModerated True is the pool is moderated. Declaration public bool IsPoolModerated { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Language The default language of this group. Declaration public string Language { get; set; } Property Value Type Description System.String | Improve this Doc View Source MemberCount The number of members in the group. Declaration public int MemberCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Page The page of topics that was returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The total number of pages of topics that are in this group. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PathAlias The path alias for the group's url. Declaration public string PathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source PerPage The number of topics per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Privacy The privacy setting for this group. Declaration public PoolPrivacy Privacy { get; set; } Property Value Type Description PoolPrivacy | Improve this Doc View Source Total The total number of topics in this group. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.TopicReplyCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.TopicReplyCollection.html",
    "title": "Class TopicReplyCollection | Flickr.Net",
    "keywords": "Class TopicReplyCollection The list of replies for a particular topic. Inheritance System.Object System.Collections.ObjectModel.Collection < TopicReply > TopicReplyCollection Implements System.Collections.Generic.IList < TopicReply > System.Collections.Generic.ICollection < TopicReply > System.Collections.Generic.IReadOnlyList < TopicReply > System.Collections.Generic.IReadOnlyCollection < TopicReply > System.Collections.Generic.IEnumerable < TopicReply > System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable Inherited Members System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.get_Item(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.set_Item(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.Add(Flickr.Net.Core.Entities.TopicReply) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.Clear() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.ClearItems() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.Contains(Flickr.Net.Core.Entities.TopicReply) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.CopyTo(Flickr.Net.Core.Entities.TopicReply[], System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.IndexOf(Flickr.Net.Core.Entities.TopicReply) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.Insert(System.Int32, Flickr.Net.Core.Entities.TopicReply) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.InsertItem(System.Int32, Flickr.Net.Core.Entities.TopicReply) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.Remove(Flickr.Net.Core.Entities.TopicReply) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.RemoveAt(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.RemoveItem(System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.SetItem(System.Int32, Flickr.Net.Core.Entities.TopicReply) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.ICollection.CopyTo(System.Array, System.Int32) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IEnumerable.GetEnumerator() System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.Add(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.Contains(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.IndexOf(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.Insert(System.Int32, System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.Remove(System.Object) System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.Count System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.Item[System.Int32] System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.Items System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.Generic.ICollection<Flickr.Net.Core.Entities.TopicReply>.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.ICollection.IsSynchronized System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.ICollection.SyncRoot System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.IsFixedSize System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.IsReadOnly System.Collections.ObjectModel.Collection<Flickr.Net.Core.Entities.TopicReply>.System.Collections.IList.Item[System.Int32] System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public class TopicReplyCollection : Collection<TopicReply>, IList<TopicReply>, ICollection<TopicReply>, IReadOnlyList<TopicReply>, IReadOnlyCollection<TopicReply>, IEnumerable<TopicReply>, IList, ICollection, IEnumerable Remarks Includes most of the properties of the topic as well, such as TopicId and Subject Properties | Improve this Doc View Source AuthorBuddyIcon The buddy icon of the topic author. Declaration public string AuthorBuddyIcon { get; } Property Value Type Description System.String | Improve this Doc View Source AuthorIconFarm The farm for the author's buddy icon. Declaration public string AuthorIconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorIconServer The server for the author's buddy icon. Declaration public string AuthorIconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorIsDeleted Has the author of this topic been deleted Declaration public bool? AuthorIsDeleted { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source AuthorIsPro True if the topic authos has a pro account. Declaration public bool AuthorIsPro { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AuthorName The topic author name. Declaration public string AuthorName { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorPathAlias The path alias of the author, if set. Declaration public string AuthorPathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorRole The role within the group of the topic author. Declaration public MemberTypes AuthorRole { get; set; } Property Value Type Description MemberTypes | Improve this Doc View Source AuthorUserId The topic authos user id. Declaration public string AuthorUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source CanDelete Can the current user delete this topic. Declaration public bool CanDelete { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanEdit Can the current user edit this topic. Declaration public bool CanEdit { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanReply Can the current user reply to this topic. Declaration public bool CanReply { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DateCreated Date the topic was created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateLastPost Date of the last post to this topic. Declaration public DateTime DateLastPost { get; set; } Property Value Type Description DateTime | Improve this Doc View Source GroupAlias The alias for the group url Declaration public string GroupAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupIconFarm The farm for the group icon. Declaration public string GroupIconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupIconServer The server for the group icon. Declaration public string GroupIconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupIconUrl The icon of the group for this topic. Declaration public string GroupIconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source GroupId The group id for the topic. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupName The name of the group for this topic. Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsLocked Is this topic locked. Declaration public bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSticky Is this topic sticky. Declaration public bool IsSticky { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LastEdit The last time the topic was edited, if at all. Declaration public DateTime? LastEdit { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source Message The message body for this topic. Declaration public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source Page The current page of replies included. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The total number of pages of replies available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of replies per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Subject The subject of the topic. Declaration public string Subject { get; set; } Property Value Type Description System.String | Improve this Doc View Source TopicId The id of the topic for which these replies are too. Declaration public string TopicId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Total The total number of replies to this topic. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements System.Collections.Generic.IList<T> System.Collections.Generic.ICollection<T> System.Collections.Generic.IReadOnlyList<T> System.Collections.Generic.IReadOnlyCollection<T> System.Collections.Generic.IEnumerable<T> System.Collections.IList System.Collections.ICollection System.Collections.IEnumerable IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Collections.ValueCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.Collections.ValueCollection.html",
    "title": "Class ValueCollection | Flickr.Net",
    "keywords": "Class ValueCollection A collection of Value instances. Inheritance System.Object ValueCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities.Collections Assembly : Flickr.Net.Core.dll Syntax public sealed class ValueCollection : Collection<Value> Properties | Improve this Doc View Source DateAddedSince The date the values where added since, if specified in the query. Declaration public DateTime? DateAddedSince { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source NamespaceName The namespace that was searched for, if any. Declaration public string NamespaceName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Page The page of the result set that has been returned. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pages The number of pages of namespaces that are available. Declaration public int Pages { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage The number of namespaces returned per page. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PredicateName The name of the predicate searched for, if any. Declaration public string PredicateName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Total The total number of namespaces that match the calling query. Declaration public int Total { get; set; } Property Value Type Description System.Int32 Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.CollectionSet.html": {
    "href": "api/Flickr.Net.Core.Entities.CollectionSet.html",
    "title": "Class CollectionSet | Flickr.Net",
    "keywords": "Class CollectionSet Inheritance System.Object CollectionSet Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class CollectionSet : IFlickrParsable Properties | Improve this Doc View Source Description Gets or sets the description. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source SetId Gets or sets the set id. Declaration public string SetId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Title Gets or sets the title. Declaration public string Title { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Contact.html": {
    "href": "api/Flickr.Net.Core.Entities.Contact.html",
    "title": "Class Contact | Flickr.Net",
    "keywords": "Class Contact Contains details of a contact for a particular user. Inheritance System.Object Contact Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Contact : IFlickrParsable Properties | Improve this Doc View Source BuddyIconUrl The buddy icon for this contact. Declaration public string BuddyIconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source IconFarm The icon farm for this contacts buddy icon. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer The icon server for this contacts buddy icon. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsFamily Is this user marked a family contact? Declaration public bool? IsFamily { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsFriend Is this contact marked as a friend contact? Declaration public bool? IsFriend { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsIgnored Unsure how to even set this! Declaration public bool? IsIgnored { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsPro Is the contact a Pro user. Declaration public bool? IsPro { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Location The location of the contact. Only returned for authenticated calls to GetListAsync(ContactType, Int32, Int32, CancellationToken) . Declaration public string Location { get; set; } Property Value Type Description System.String | Improve this Doc View Source PathAlias The URL path alias for the contact. Only returned for authenticated calls to GetListAsync(ContactType, Int32, Int32, CancellationToken) . Declaration public string PathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotosUploaded The number of photos uploaded. Only returned by GetListRecentlyUploadedAsync(ContactSearch, Nullable<DateTime>, CancellationToken) Declaration public int? PhotosUploaded { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source RealName The users real name. Only returned for authenticated calls to GetListAsync(ContactType, Int32, Int32, CancellationToken) . Declaration public string RealName { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserId The user id of the contact. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserName The username (or screen name) of the contact. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Context.html": {
    "href": "api/Flickr.Net.Core.Entities.Context.html",
    "title": "Class Context | Flickr.Net",
    "keywords": "Class Context The context of the current photo, as returned by GetContextAsync(String, CancellationToken) , GetContextAsync(String, String, CancellationToken) and GetContextAsync(String, String, CancellationToken) methods. Inheritance System.Object Context Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Context : IFlickrParsable Properties | Improve this Doc View Source Count The number of photos in the current context, e.g. Group, Set or photostream. Declaration public int Count { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NextPhoto The next photo in the context. Declaration public ContextPhoto NextPhoto { get; set; } Property Value Type Description ContextPhoto | Improve this Doc View Source PreviousPhoto The previous photo in the context. Declaration public ContextPhoto PreviousPhoto { get; set; } Property Value Type Description ContextPhoto"
  },
  "api/Flickr.Net.Core.Entities.ContextGroup.html": {
    "href": "api/Flickr.Net.Core.Entities.ContextGroup.html",
    "title": "Class ContextGroup | Flickr.Net",
    "keywords": "Class ContextGroup A group context got a photo. Inheritance System.Object ContextGroup Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class ContextGroup Properties | Improve this Doc View Source GroupId The Group ID for the group that the selected photo is in. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Title The title of the group that then selected photo is in. Declaration public string Title { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.ContextPhoto.html": {
    "href": "api/Flickr.Net.Core.Entities.ContextPhoto.html",
    "title": "Class ContextPhoto | Flickr.Net",
    "keywords": "Class ContextPhoto The next (or previous) photo in the current context. Inheritance System.Object ContextPhoto Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class ContextPhoto : IFlickrParsable Properties | Improve this Doc View Source Farm The web server farm for this photos images. Declaration public string Farm { get; set; } Property Value Type Description System.String | Improve this Doc View Source MediaType The media type of this item. Declaration public MediaType MediaType { get; set; } Property Value Type Description MediaType | Improve this Doc View Source PhotoId The id of the next photo. Will be \"0\" if this photo is the last. Declaration public string PhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Secret The secret for the photo. Declaration public string Secret { get; set; } Property Value Type Description System.String | Improve this Doc View Source Server The server for this photo. Declaration public string Server { get; set; } Property Value Type Description System.String | Improve this Doc View Source ThumbnailUrl The URL for the thumbnail of the photo. Declaration public string ThumbnailUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source Title The title of the next photo in context. Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source Url The URL, in the given context, for the next or previous photo. Declaration public string Url { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.ContextSet.html": {
    "href": "api/Flickr.Net.Core.Entities.ContextSet.html",
    "title": "Class ContextSet | Flickr.Net",
    "keywords": "Class ContextSet A set context for a photo. Inheritance System.Object ContextSet Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class ContextSet Properties | Improve this Doc View Source PhotosetId The Photoset ID of the set the selected photo is in. Declaration public string PhotosetId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Title The title of the set the selected photo is in. Declaration public string Title { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.CsvFile.html": {
    "href": "api/Flickr.Net.Core.Entities.CsvFile.html",
    "title": "Class CsvFile | Flickr.Net",
    "keywords": "Class CsvFile The details of a CSV files containing archived stats available for download from Flickr. Inheritance System.Object CsvFile Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class CsvFile : IFlickrParsable Remarks Only available till the 1st June 2010. Properties | Improve this Doc View Source Date The date the file was created for. Declaration public DateTime Date { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Href The web reference for the file. Declaration public string Href { get; set; } Property Value Type Description System.String | Improve this Doc View Source Type The type of file archive (either \"m\" for Month or \"d\" for day). Declaration public string Type { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.ExifTag.html": {
    "href": "api/Flickr.Net.Core.Entities.ExifTag.html",
    "title": "Class ExifTag | Flickr.Net",
    "keywords": "Class ExifTag Details of an individual EXIF tag. Inheritance System.Object ExifTag Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class ExifTag : IFlickrParsable Properties | Improve this Doc View Source Clean An optional clean version of the Raw property. May be null if the Raw property is in a suitable format already. Declaration public string Clean { get; set; } Property Value Type Description System.String | Improve this Doc View Source CleanOrRaw Get the value of the Clean property, or the value of Raw if Clean is empty or null. Declaration public string CleanOrRaw { get; } Property Value Type Description System.String | Improve this Doc View Source Label The label, or description for the tag, such as Aperture or Manufacturer Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source Raw The raw EXIF data. Declaration public string Raw { get; set; } Property Value Type Description System.String | Improve this Doc View Source Tag The tag number. Declaration public string Tag { get; set; } Property Value Type Description System.String | Improve this Doc View Source TagSpace The type of EXIF data, e.g. EXIF, TIFF, GPS etc. Declaration public string TagSpace { get; set; } Property Value Type Description System.String | Improve this Doc View Source TagSpaceId An id number for the type of tag space. Declaration public int TagSpaceId { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.FavoriteContext.html": {
    "href": "api/Flickr.Net.Core.Entities.FavoriteContext.html",
    "title": "Class FavoriteContext | Flickr.Net",
    "keywords": "Class FavoriteContext The total number of favorites for a user, along with the next and previous favorite photos. Inheritance System.Object FavoriteContext Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class FavoriteContext : IFlickrParsable Constructors | Improve this Doc View Source FavoriteContext() Default constructor for FavoriteContext Declaration public FavoriteContext() Properties | Improve this Doc View Source Count The number of favorites the user has. Declaration public int Count { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NextPhotos The list of next photos for this favorite. Defaults to just a single photo. Declaration public Collection<FavoriteContextPhoto> NextPhotos { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < FavoriteContextPhoto > | Improve this Doc View Source PreviousPhotos The list of previous photos for this favorite. Defaults to just a single photo. Declaration public Collection<FavoriteContextPhoto> PreviousPhotos { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < FavoriteContextPhoto >"
  },
  "api/Flickr.Net.Core.Entities.FavoriteContextPhoto.html": {
    "href": "api/Flickr.Net.Core.Entities.FavoriteContextPhoto.html",
    "title": "Class FavoriteContextPhoto | Flickr.Net",
    "keywords": "Class FavoriteContextPhoto A photo in the context of a favorite. Returned as part of a call to GetContextAsync(String, String, CancellationToken) . Inheritance System.Object Photo FavoriteContextPhoto Implements IFlickrParsable Inherited Members Photo.Tags Photo.PhotoId Photo.UserId Photo.Secret Photo.Server Photo.Farm Photo.Title Photo.IsPublic Photo.IsFriend Photo.IsFamily Photo.License Photo.OriginalWidth Photo.OriginalHeight Photo.DateUploaded Photo.LastUpdated Photo.DateTaken Photo.DateTakenUnknown Photo.DateAddedToGroup Photo.DateFavorited Photo.OwnerName Photo.IconServer Photo.IconFarm Photo.OriginalFormat Photo.OriginalSecret Photo.MachineTags Photo.WebUrl Photo.SquareThumbnailUrl Photo.SquareThumbnailWidth Photo.SquareThumbnailHeight Photo.LargeSquareThumbnailUrl Photo.LargeSquareThumbnailWidth Photo.LargeSquareThumbnailHeight Photo.ThumbnailUrl Photo.ThumbnailWidth Photo.ThumbnailHeight Photo.SmallUrl Photo.SmallWidth Photo.SmallHeight Photo.Small320Url Photo.Small320Width Photo.Small320Height Photo.Medium640Url Photo.Medium640Width Photo.Medium640Height Photo.Medium800Url Photo.Medium800Width Photo.Medium800Height Photo.Large1600Url Photo.Large1600Width Photo.Large1600Height Photo.Large2048Url Photo.Large2048Width Photo.Large2048Height Photo.MediumUrl Photo.MediumWidth Photo.MediumHeight Photo.LargeUrl Photo.LargeWidth Photo.LargeHeight Photo.OriginalUrl Photo.Latitude Photo.Longitude Photo.PlaceId Photo.WoeId Photo.Accuracy Photo.GeoContext Photo.CanComment Photo.CanPrint Photo.CanDownload Photo.CanAddMeta Photo.CanBlog Photo.CanShare Photo.Views Photo.Media Photo.PathAlias Photo.MediaStatus Photo.Description Photo.GeoPermissions Photo.Rotation Photo.CountFaves Photo.CountComments Photo.DoesLargeExist Photo.DoesMediumExist Photo.Load(XmlReader, Boolean) Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class FavoriteContextPhoto : Photo Properties | Improve this Doc View Source FavoriteThumbnailUrl The thumbnail url for the image. Will be the same as ThumbnailUrl if that is also set. Declaration public string FavoriteThumbnailUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source FavoriteUrl The URL for the favorite, with the context of the user as well. Declaration public string FavoriteUrl { get; set; } Property Value Type Description System.String Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.FoundUser.html": {
    "href": "api/Flickr.Net.Core.Entities.FoundUser.html",
    "title": "Class FoundUser | Flickr.Net",
    "keywords": "Class FoundUser Contains details of a user Inheritance System.Object FoundUser Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class FoundUser : IFlickrParsable Properties | Improve this Doc View Source FullName The full name of the user. Only returned by GetAccessTokenAsync(OAuthRequestToken, String, CancellationToken) . Declaration public string FullName { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserId The ID of the found user. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserName The username of the found user. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Gallery.html": {
    "href": "api/Flickr.Net.Core.Entities.Gallery.html",
    "title": "Class Gallery | Flickr.Net",
    "keywords": "Class Gallery A user created gallery of other peoples photos. Inheritance System.Object Gallery Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Gallery : IFlickrParsable Properties | Improve this Doc View Source CommentCount The number of comments on the gallery. Declaration public int CommentCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DateCreated The date the gallery was first created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateLastUpdated The date the gallery was last updated. Declaration public DateTime DateLastUpdated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Description The description of this gallery. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source GalleryId The ID for the gallery. Declaration public string GalleryId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GalleryUrl The URL to the gallery on the web. Declaration public string GalleryUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerBuddyIcon Gallery owner's buddy icon url. Declaration public string OwnerBuddyIcon { get; } Property Value Type Description System.String | Improve this Doc View Source OwnerFarm Farm for the gallery ownsers buddy icon. See OwnerBuddyIcon for full url. Declaration public string OwnerFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerId The user ID of the gallery owner. Declaration public string OwnerId { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerServer Server for the gallery ownsers buddy icon. See OwnerBuddyIcon for full url. Declaration public string OwnerServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotosCount The number of photos in this gallery. Declaration public int PhotosCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PrimaryPhotoFarm The web farm for the primary photo for the gallery. Declaration public string PrimaryPhotoFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source PrimaryPhotoId The photo id of the primary photo for the gallery. Declaration public string PrimaryPhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PrimaryPhotoMediumUrl The URL of the medium image for the primary image for this gallery. For large sizes call GetSizesAsync(String, CancellationToken) Declaration public string PrimaryPhotoMediumUrl { get; } Property Value Type Description System.String | Improve this Doc View Source PrimaryPhotoSecret The saecret for the primary photo for the gallery. Declaration public string PrimaryPhotoSecret { get; set; } Property Value Type Description System.String | Improve this Doc View Source PrimaryPhotoServer The server for the primary photo for the gallery. Declaration public string PrimaryPhotoServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source PrimaryPhotoSmallUrl The URL of the small image for the primary image for this gallery. Declaration public string PrimaryPhotoSmallUrl { get; } Property Value Type Description System.String | Improve this Doc View Source PrimaryPhotoSquareThumbnailUrl The URL of the squrea thumbnail for the primary image for this gallery. Declaration public string PrimaryPhotoSquareThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source PrimaryPhotoThumbnailUrl The URL of the thumbnail for the primary image for this gallery. Declaration public string PrimaryPhotoThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Title The title of this gallery. Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source Username The username (screen name) of the gallery owner. Declaration public string Username { get; set; } Property Value Type Description System.String | Improve this Doc View Source VideosCount The number of videos in this gallery. Declaration public int VideosCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ViewCount The number of views for this gallery. Declaration public int ViewCount { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.GalleryPhoto.html": {
    "href": "api/Flickr.Net.Core.Entities.GalleryPhoto.html",
    "title": "Class GalleryPhoto | Flickr.Net",
    "keywords": "Class GalleryPhoto An instance of a photo returned by GetPhotosAsync(String, PhotoSearchExtras, CancellationToken) . Inheritance System.Object Photo GalleryPhoto Implements IFlickrParsable Inherited Members Photo.Tags Photo.PhotoId Photo.UserId Photo.Secret Photo.Server Photo.Farm Photo.Title Photo.IsPublic Photo.IsFriend Photo.IsFamily Photo.License Photo.OriginalWidth Photo.OriginalHeight Photo.DateUploaded Photo.LastUpdated Photo.DateTaken Photo.DateTakenUnknown Photo.DateAddedToGroup Photo.DateFavorited Photo.OwnerName Photo.IconServer Photo.IconFarm Photo.OriginalFormat Photo.OriginalSecret Photo.MachineTags Photo.WebUrl Photo.SquareThumbnailUrl Photo.SquareThumbnailWidth Photo.SquareThumbnailHeight Photo.LargeSquareThumbnailUrl Photo.LargeSquareThumbnailWidth Photo.LargeSquareThumbnailHeight Photo.ThumbnailUrl Photo.ThumbnailWidth Photo.ThumbnailHeight Photo.SmallUrl Photo.SmallWidth Photo.SmallHeight Photo.Small320Url Photo.Small320Width Photo.Small320Height Photo.Medium640Url Photo.Medium640Width Photo.Medium640Height Photo.Medium800Url Photo.Medium800Width Photo.Medium800Height Photo.Large1600Url Photo.Large1600Width Photo.Large1600Height Photo.Large2048Url Photo.Large2048Width Photo.Large2048Height Photo.MediumUrl Photo.MediumWidth Photo.MediumHeight Photo.LargeUrl Photo.LargeWidth Photo.LargeHeight Photo.OriginalUrl Photo.Latitude Photo.Longitude Photo.PlaceId Photo.WoeId Photo.Accuracy Photo.GeoContext Photo.CanComment Photo.CanPrint Photo.CanDownload Photo.CanAddMeta Photo.CanBlog Photo.CanShare Photo.Views Photo.Media Photo.PathAlias Photo.MediaStatus Photo.Description Photo.GeoPermissions Photo.Rotation Photo.CountFaves Photo.CountComments Photo.DoesLargeExist Photo.DoesMediumExist Photo.Load(XmlReader, Boolean) Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class GalleryPhoto : Photo Properties | Improve this Doc View Source Comment The comment added to this photo in the gallery, if any. Declaration public string Comment { get; set; } Property Value Type Description System.String Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.GeoPermissions.html": {
    "href": "api/Flickr.Net.Core.Entities.GeoPermissions.html",
    "title": "Class GeoPermissions | Flickr.Net",
    "keywords": "Class GeoPermissions Permissions for the selected photo. Inheritance System.Object GeoPermissions Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class GeoPermissions : IFlickrParsable Properties | Improve this Doc View Source IsContact Are contacts allowed to see the Geo Location information for this photo. Declaration public bool IsContact { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFamily Are family allowed to see the Geo Location information for this photo. Declaration public bool IsFamily { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFriend Are friends allowed to see the Geo Location information for this photo. Declaration public bool IsFriend { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPublic Are the general unwashed (public) allowed to see the Geo Location information for this photo. Declaration public bool IsPublic { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PhotoId The ID for the photo whose permissions these are. Declaration public string PhotoId { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Group.html": {
    "href": "api/Flickr.Net.Core.Entities.Group.html",
    "title": "Class Group | Flickr.Net",
    "keywords": "Class Group Provides details of a particular group. Inheritance System.Object Group Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class Group Properties | Improve this Doc View Source GroupId The id of the group. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupName The name of the group Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Members The number of memebers of the group. Declaration public int Members { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.GroupCategory.html": {
    "href": "api/Flickr.Net.Core.Entities.GroupCategory.html",
    "title": "Class GroupCategory | Flickr.Net",
    "keywords": "Class GroupCategory Contains details of a category, including groups belonging to the category and sub categories. Inheritance System.Object GroupCategory Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class GroupCategory : IFlickrParsable Constructors | Improve this Doc View Source GroupCategory() Default constructor. Declaration public GroupCategory() Properties | Improve this Doc View Source CategoryName The name for the category. Declaration public string CategoryName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Groups An array of Group items, listing the groups within this category. Declaration public Collection<Group> Groups { get; set; } Property Value Type Description System.Collections.ObjectModel.Collection < Group > | Improve this Doc View Source Path A forward slash delimited list of the parents of the current group. Declaration public string Path { get; set; } Property Value Type Description System.String Remarks Can be matched against the list of PathIds to jump directly to a parent group. Examples Group Id 91, Romance will return \"/Life/Romance\" as the Path and \"/90/91\" as its PathIds | Improve this Doc View Source PathIds A forward slash delimited list of the ids of the parents of the current group. Declaration public string PathIds { get; set; } Property Value Type Description System.String Remarks Can be matched against the Path to jump directly to a parent group. Examples Group Id 91, Romance will return \"/Life/Romance\" as the Path and \"/90/91\" as its PathIds | Improve this Doc View Source Subcategories An array of SubCategory items. Declaration public Collection<SubCategory> Subcategories { get; set; } Property Value Type Description System.Collections.ObjectModel.Collection < SubCategory >"
  },
  "api/Flickr.Net.Core.Entities.GroupFullInfo.html": {
    "href": "api/Flickr.Net.Core.Entities.GroupFullInfo.html",
    "title": "Class GroupFullInfo | Flickr.Net",
    "keywords": "Class GroupFullInfo Provides details of a particular group. Inheritance System.Object GroupFullInfo Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class GroupFullInfo : IFlickrParsable Remarks Used by the Url methods and GetInfoAsync(String, CancellationToken) method. The reason for a Group and GroupFullInfo are due to xml serialization incompatabilities. Properties | Improve this Doc View Source AdminRoleName The role name assigned to admins of this group. Declaration public string AdminRoleName { get; set; } Property Value Type Description System.String | Improve this Doc View Source BlastDateAdded The date the group's 'Blast' (the banner seen on the group home page) was last updated. Declaration public DateTime? BlastDateAdded { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source BlastHtml The HTML for the group's 'Blast' (the banner seen on the group home page). Declaration public string BlastHtml { get; set; } Property Value Type Description System.String | Improve this Doc View Source BlastUserId The User ID for the user who last set the group's 'Blast' (the banner seen on the group home page). Declaration public string BlastUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Description Gets or sets the description. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupIconUrl The url for the group's icon. Declaration public string GroupIconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source GroupId Gets or sets the group id. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupName Gets or sets the group name. Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconFarm The server farm for the group icon. If zero then the group uses the default icon. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer The server number used for the groups icon. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsPoolModerated Is this group's pool moderated. Declaration public bool IsPoolModerated { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Language The language that the group information has been returned in. Declaration public string Language { get; set; } Property Value Type Description System.String | Improve this Doc View Source MemberRoleName The role name assigned to members of this group. Declaration public string MemberRoleName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Members Gets or sets the members. Declaration public int Members { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ModeratorRoleName The role name assigned to moderators of this group. Declaration public string ModeratorRoleName { get; set; } Property Value Type Description System.String | Improve this Doc View Source PathAlias The Path alias for the group icon Declaration public string PathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source PoolCount The number of photos in this groups pool. Declaration public int PoolCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Privacy Gets or sets the privacy. Declaration public PoolPrivacy Privacy { get; set; } Property Value Type Description PoolPrivacy | Improve this Doc View Source Restrictions The restrictions that apply to new items added to this group's pool. Declaration public GroupInfoRestrictions Restrictions { get; set; } Property Value Type Description GroupInfoRestrictions | Improve this Doc View Source Rules Any rules that the group has for new members. Declaration public string Rules { get; set; } Property Value Type Description System.String | Improve this Doc View Source ThrottleInfo Gets or sets the throttle info. Declaration public GroupThrottleInfo ThrottleInfo { get; set; } Property Value Type Description GroupThrottleInfo | Improve this Doc View Source TopicCount The number of topics in this groups discussion list. Declaration public int TopicCount { get; set; } Property Value Type Description System.Int32 Methods | Improve this Doc View Source ToGroup() Converts the current GroupFullInfo into an instance of the Group class. Declaration public Group ToGroup() Returns Type Description Group A Group instance. Operators | Improve this Doc View Source Implicit(GroupFullInfo to Group) Methods for automatically converting a GroupFullInfo object into and instance of a Group object. Declaration public static implicit operator Group(GroupFullInfo groupInfo) Parameters Type Name Description GroupFullInfo groupInfo The incoming object. Returns Type Description Group The Group instance."
  },
  "api/Flickr.Net.Core.Entities.GroupInfo.html": {
    "href": "api/Flickr.Net.Core.Entities.GroupInfo.html",
    "title": "Class GroupInfo | Flickr.Net",
    "keywords": "Class GroupInfo Information about public groups for a user. Inheritance System.Object GroupInfo Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class GroupInfo : IFlickrParsable Properties | Improve this Doc View Source EighteenPlus Will contain 1 if the group is restricted to people who are 18 years old or over, 0 if it is not. Declaration public bool EighteenPlus { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source GroupIconUrl Group buddy icon. Declaration public string GroupIconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source GroupId Property which returns the group id for the group. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupName The group name. Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupUrl The URL for the group web page. Declaration public string GroupUrl { get; } Property Value Type Description System.String | Improve this Doc View Source IconFarm Server farm for the group buddy icon. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer Server for the group buddy icon. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source InvitationOnly Whether the group is invitation only. Declaration public bool InvitationOnly { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsAdmin True if the user is the admin for the group, false if they are not. Declaration public bool IsAdmin { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMember Is the authenticated user a member of the group. Declaration public bool? IsMember { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsModerator Is the authenticated user a moderator of the group. Declaration public bool? IsModerator { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Members The number of members in a group. Declaration public int Members { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PoolCount The total number of photos in the group. Declaration public long PoolCount { get; set; } Property Value Type Description System.Int64"
  },
  "api/Flickr.Net.Core.Entities.GroupInfoRestrictions.html": {
    "href": "api/Flickr.Net.Core.Entities.GroupInfoRestrictions.html",
    "title": "Class GroupInfoRestrictions | Flickr.Net",
    "keywords": "Class GroupInfoRestrictions The restrictions that apply to a group's pool. Inheritance System.Object GroupInfoRestrictions Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class GroupInfoRestrictions : IFlickrParsable Properties | Improve this Doc View Source ArtIllustrationsAccepted Are Illustrations/Art/Animation/CGI allowed to be added to this pool. Declaration public bool ArtIllustrationsAccepted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source GeoInfoRequired Must the item have geo information. Declaration public bool GeoInfoRequired { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ImagesAccepted Are Photo/Video images allowed to be added to this pool. Declaration public bool ImagesAccepted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ModeratedItemsAccepted Are moderated items allowed to be added to this pool. Declaration public bool ModeratedItemsAccepted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PhotosAccepted Are photos allowed to be added to this pool. Declaration public bool PhotosAccepted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RestrictedItemsAccepted Are restricted items allowed to be added to this pool. Declaration public bool RestrictedItemsAccepted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source SafeItemsAccepted Are safe items allowed to be added to this pool. Declaration public bool SafeItemsAccepted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source ScreenshotsAccepted Are Screenshots/Screencasts allowed to be added to this pool. Declaration public bool ScreenshotsAccepted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source VideosAccepted Are videos allowed to be added to this pool. Declaration public bool VideosAccepted { get; set; } Property Value Type Description System.Boolean"
  },
  "api/Flickr.Net.Core.Entities.GroupSearchResult.html": {
    "href": "api/Flickr.Net.Core.Entities.GroupSearchResult.html",
    "title": "Class GroupSearchResult | Flickr.Net",
    "keywords": "Class GroupSearchResult A class which encapsulates a single group search result. Inheritance System.Object GroupSearchResult Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class GroupSearchResult : IFlickrParsable Properties | Improve this Doc View Source EighteenPlus True if the group is an over eighteen (adult) group only. Declaration public bool EighteenPlus { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source GroupIconUrl The url for the group's icon. Declaration public string GroupIconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source GroupId The group id for the result. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupName The group name for the result. Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconFarm Group icon farm. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer Group icon server. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source Members Number of members in the group. Declaration public int Members { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PoolCount The number of photos in this groups pool. Declaration public int PoolCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Privacy THe privacy setting for this groups photo pool. Declaration public PoolPrivacy Privacy { get; set; } Property Value Type Description PoolPrivacy | Improve this Doc View Source TopicCount The number of topics in this groups discussion list. Declaration public int TopicCount { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.GroupThrottleInfo.html": {
    "href": "api/Flickr.Net.Core.Entities.GroupThrottleInfo.html",
    "title": "Class GroupThrottleInfo | Flickr.Net",
    "keywords": "Class GroupThrottleInfo Throttle information about a group (i.e. posting limit) Inheritance System.Object GroupThrottleInfo Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class GroupThrottleInfo : IFlickrParsable Properties | Improve this Doc View Source Count The number of posts in each period allowed to this group. Declaration public int Count { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Mode The posting limit mode for a group. Declaration public GroupThrottleMode Mode { get; set; } Property Value Type Description GroupThrottleMode | Improve this Doc View Source Remaining The number of remainging posts allowed by this user. If unauthenticated then this will be zero. Declaration public int Remaining { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.HotTag.html": {
    "href": "api/Flickr.Net.Core.Entities.HotTag.html",
    "title": "Class HotTag | Flickr.Net",
    "keywords": "Class HotTag A hot tag. Returned by GetHotListAsync(String, Nullable<Int32>, CancellationToken) . Inheritance System.Object HotTag Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class HotTag : IFlickrParsable Properties | Improve this Doc View Source Score The score for the tag. Declaration public int Score { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Tag The tag that is hot. Declaration public string Tag { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.html": {
    "href": "api/Flickr.Net.Core.Entities.html",
    "title": "Namespace Flickr.Net.Core.Entities | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Entities Classes ActivityEvent A user event on a photo, e.g. Comment or Favourite etc. ActivityItem Activity class used for UserPhotosAsync(Int32, TimeType, Int32, Int32, CancellationToken) and UserCommentsAsync(Int32, Int32, CancellationToken) . AllContexts All contexts that a photo is in. Auth Successful authentication returns a Auth object. Blog Provides details of a specific blog, as configured by the user. BlogService Details of the blog services supported by Flickr. e.g. Twitter, Blogger etc. Brand A particular camera brand. Camera The details of a particular camera model. Cluster A tag cluster (a tag and a group of common sibling tags). Collection The collection. CollectionInfo Summary description for CollectionInfo. CollectionSet Contact Contains details of a contact for a particular user. Context The context of the current photo, as returned by GetContextAsync(String, CancellationToken) , GetContextAsync(String, String, CancellationToken) and GetContextAsync(String, String, CancellationToken) methods. ContextGroup A group context got a photo. ContextPhoto The next (or previous) photo in the current context. ContextSet A set context for a photo. CsvFile The details of a CSV files containing archived stats available for download from Flickr. ExifTag Details of an individual EXIF tag. FavoriteContext The total number of favorites for a user, along with the next and previous favorite photos. FavoriteContextPhoto A photo in the context of a favorite. Returned as part of a call to GetContextAsync(String, String, CancellationToken) . FoundUser Contains details of a user Gallery A user created gallery of other peoples photos. GalleryPhoto An instance of a photo returned by GetPhotosAsync(String, PhotoSearchExtras, CancellationToken) . GeoPermissions Permissions for the selected photo. Group Provides details of a particular group. GroupCategory Contains details of a category, including groups belonging to the category and sub categories. GroupFullInfo Provides details of a particular group. GroupInfo Information about public groups for a user. GroupInfoRestrictions The restrictions that apply to a group's pool. GroupSearchResult A class which encapsulates a single group search result. GroupThrottleInfo Throttle information about a group (i.e. posting limit) HotTag A hot tag. Returned by GetHotListAsync(String, Nullable<Int32>, CancellationToken) . Institution A Flickr Commons institution. License Details of a particular license available from Flickr. Member Details for a Flickr member, as returned by the GetListAsync(String, MemberTypes, Int32, Int32, CancellationToken) method. MemberGroupInfo Information about a group the authenticated user is a member of. Method A method supported by the Flickr API. MethodArgument An argument for a method. MethodError A possible error that a method can return. Namespace A machine tag namespace. \"namespace:predicate=value\". NoResponse Used by the FlickrNet library when Flickr does not return anything in the body of a response, e.g. for update methods. OAuthAccessToken The access authentication token return by Flickr after a successful authentication. Pair A machine tag pair made up of a namespace and predicate. \"namespace:predicate=value\". Person The Person class contains details returned by the GetInfoAsync(String, CancellationToken) method. PersonLimits The limits for a person returned by GetLimitsAsync(CancellationToken) . PersonPhotosSummary A summary of a users photos. Photo The photo. PhotoComment Contains the details of a comment made on a photo. returned by the GetListAsync(String, CancellationToken) method. PhotoCount The specifics of a particular count. PhotoFavorite Details of the favourites for a photo. PhotoInfo Detailed information returned by GetInfoAsync(String, String, CancellationToken) or GetInfoAsync(String, String, CancellationToken) methods. PhotoInfoNote A class containing information about a note on a photo. PhotoInfoTag The details of a tag of a photo. PhotoInfoUrl The details of a tag of a photo. PhotoPermissions Permissions for the selected photo. PhotoPerson The PhotoPerson class contains details returned by the GetListAsync(String, CancellationToken) method. Photoset A set of properties for the photoset. Place Summary description for Place. PlaceInfo Detailed information about a place. Returned by GetInfoAsync(PlaceId, CancellationToken) or GetInfoAsync(WoeId, CancellationToken) . PlaceTypeInfo Information about the types of 'places' available from the Flickr API. PopularPhoto Details about a popular photo, including the statistics for its views, comments and favourites for the date. Predicate A machine tag predicate. \"namespace:predicate=value\". Profile A user's profile RawTag Raw tags, as returned by the GetListUserRawAsync(String, CancellationToken) method. RawTagCollection List containing RawTag items. ShapeData The shape data supplied by GetInfoAsync(PlaceId, CancellationToken) or GetInfoAsync(WoeId, CancellationToken) . Size Contains details about all the sizes available for a given photograph. StatDomain The details of a referring domain. Used in the Flickr Stats API. StatReferrer The referrer details returned by GetCollectionReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) , GetPhotoReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) , GetPhotosetReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) and GetPhotostreamReferrersAsync(DateTime, String, Int32, Int32, CancellationToken) . Stats The stats returned by GetPhotoStatsAsync(DateTime, String, CancellationToken) , GetPhotostreamStatsAsync(DateTime, CancellationToken) , GetPhotosetStatsAsync(DateTime, String, CancellationToken) and GetCollectionStatsAsync(DateTime, String, CancellationToken) StatViews The number of views of each type that a users account has had for a given date (or overall if no date specified). SubCategory Holds details of a sub category, including its id, name and the number of groups in it. Subscription Details of a push subscription. Suggestion A suggestion for the correct location for a particular photo. Tag A simple tag class, containing a tag name and optional count (for GetListUserPopularAsync(String, Nullable<Int32>, CancellationToken) ) Ticket The status of an upload ticket. Topic Details of a topic TopicReply A reply to a topic. UnknownResponse Contains the raw response from Flickr when an unknown method has been called. Used by EchoAsync(Dictionary<String, String>, CancellationToken) . UserGeoPermissions The default privacy level for geographic information attached to the user's photos and whether or not the user has chosen to use geo-related EXIF information to automatically geotag their photos. UserStatus The upload status of the user, as returned by GetUploadStatusAsync(CancellationToken) . Value A machine tag value and its usage. VideoInfo Information about a video, as returned by VideoInfo . Structs PlaceId PointD A point structure for holding double-floating points precision data. WoeId"
  },
  "api/Flickr.Net.Core.Entities.Institution.html": {
    "href": "api/Flickr.Net.Core.Entities.Institution.html",
    "title": "Class Institution | Flickr.Net",
    "keywords": "Class Institution A Flickr Commons institution. Inheritance System.Object Institution Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Institution : IFlickrParsable Properties | Improve this Doc View Source DateLaunched The date this commons collection was launched. Declaration public DateTime DateLaunched { get; set; } Property Value Type Description DateTime | Improve this Doc View Source FlickrUrl The URL to the institution's page on Flickr. Declaration public string FlickrUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source InstitutionId The ID of the institution. Acts like a user ID for most method calls. Declaration public string InstitutionId { get; set; } Property Value Type Description System.String | Improve this Doc View Source InstitutionName The name of this commons institution. Declaration public string InstitutionName { get; set; } Property Value Type Description System.String | Improve this Doc View Source LicenseUrl The URL to the institution's copyright/license page. Declaration public string LicenseUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source SiteUrl The URL to the institution's main site. Declaration public string SiteUrl { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Interfaces.html": {
    "href": "api/Flickr.Net.Core.Entities.Interfaces.html",
    "title": "Namespace Flickr.Net.Core.Entities.Interfaces | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Entities.Interfaces Interfaces IFlickrParsable An interface that the classes that are returned by the Flickr API use to enable them to self-deserialize."
  },
  "api/Flickr.Net.Core.Entities.Interfaces.IFlickrParsable.html": {
    "href": "api/Flickr.Net.Core.Entities.Interfaces.IFlickrParsable.html",
    "title": "Interface IFlickrParsable | Flickr.Net",
    "keywords": "Interface IFlickrParsable An interface that the classes that are returned by the Flickr API use to enable them to self-deserialize. Namespace : Flickr.Net.Core.Entities.Interfaces Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrParsable Remarks This enables more than one class to handle the same XML element names when returned by different methods. Methods | Improve this Doc View Source Load(XmlReader) Allows each class that implements this interface to be loaded via an System.Xml.XmlReader . Declaration void Load(XmlReader reader) Parameters Type Name Description System.Xml.XmlReader reader"
  },
  "api/Flickr.Net.Core.Entities.License.html": {
    "href": "api/Flickr.Net.Core.Entities.License.html",
    "title": "Class License | Flickr.Net",
    "keywords": "Class License Details of a particular license available from Flickr. Inheritance System.Object License Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class License : IFlickrParsable Properties | Improve this Doc View Source LicenseId The ID of the license. Used by GetInfoAsync(String, String, CancellationToken) and GetInfoAsync(String, String, CancellationToken) . Declaration public LicenseType LicenseId { get; set; } Property Value Type Description LicenseType | Improve this Doc View Source LicenseName The name of the license. Declaration public string LicenseName { get; set; } Property Value Type Description System.String | Improve this Doc View Source LicenseUrl The URL for the license text. Declaration public string LicenseUrl { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Member.html": {
    "href": "api/Flickr.Net.Core.Entities.Member.html",
    "title": "Class Member | Flickr.Net",
    "keywords": "Class Member Details for a Flickr member, as returned by the GetListAsync(String, MemberTypes, Int32, Int32, CancellationToken) method. Inheritance System.Object Member Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Member : IFlickrParsable Properties | Improve this Doc View Source IconFarm The icon farm for the users buddy icon. See IconUrl for the complete URL. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer The icon server for the users buddy icon. See IconUrl for the complete URL. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconUrl The icon URL for the users buddy icon. Calculated from the IconFarm and IconServer . Declaration public string IconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source MemberId The user id for the member. Declaration public string MemberId { get; set; } Property Value Type Description System.String | Improve this Doc View Source MemberType The type of the member (basic, moderator or administrator). Declaration public MemberTypes MemberType { get; set; } Property Value Type Description MemberTypes | Improve this Doc View Source UserName The members name. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.MemberGroupInfo.html": {
    "href": "api/Flickr.Net.Core.Entities.MemberGroupInfo.html",
    "title": "Class MemberGroupInfo | Flickr.Net",
    "keywords": "Class MemberGroupInfo Information about a group the authenticated user is a member of. Inheritance System.Object MemberGroupInfo Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class MemberGroupInfo : IFlickrParsable Properties | Improve this Doc View Source GroupIconUrl The URL for the group icon. Declaration public string GroupIconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source GroupId Property which returns the group id for the group. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupName The group name. Declaration public string GroupName { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupUrl The URL for the group web page. Declaration public string GroupUrl { get; } Property Value Type Description System.String | Improve this Doc View Source IconFarm The web farm ID for the group icon. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer The server number for the group icon. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsAdmin True if the user is the admin for the group, false if they are not. Declaration public bool IsAdmin { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsMember Is the current authenticated user a member of this group. Null if the call is not authenticated. Declaration public bool? IsMember { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsModerator Is the current authenticated user a moderator of this group. Null if the call is not authenticated. Declaration public bool? IsModerator { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source MemberCount Number of members of this group. Declaration public int MemberCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Photos The number of photos currently in this group. Declaration public long Photos { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source Privacy The privacy of the pool (see ). Declaration public PoolPrivacy Privacy { get; set; } Property Value Type Description PoolPrivacy | Improve this Doc View Source TopicCount The number of discussion topics in this group. Declaration public int TopicCount { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.Method.html": {
    "href": "api/Flickr.Net.Core.Entities.Method.html",
    "title": "Class Method | Flickr.Net",
    "keywords": "Class Method A method supported by the Flickr API. Inheritance System.Object Method Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Method : IFlickrParsable Remarks See Flickr API Documentation for a complete list of methods. Constructors | Improve this Doc View Source Method() Default constructor. Declaration public Method() Properties | Improve this Doc View Source Arguments The arguments of the method. Declaration public Collection<MethodArgument> Arguments { get; set; } Property Value Type Description System.Collections.ObjectModel.Collection < MethodArgument > | Improve this Doc View Source Description The description of the method. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Errors The possible errors that could be returned by the method. Declaration public Collection<MethodError> Errors { get; set; } Property Value Type Description System.Collections.ObjectModel.Collection < MethodError > | Improve this Doc View Source Explanation An explanation of the example response for the method. Declaration public string Explanation { get; set; } Property Value Type Description System.String | Improve this Doc View Source Name The name of the method. Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source NeedsLogin Does the method require the call to be authenticated. Declaration public bool NeedsLogin { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source NeedsSigning Does the method request the call to be signed. Declaration public bool NeedsSigning { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source RequiredPermissions The minimum level of permissions required for this method call. Declaration public MethodPermission RequiredPermissions { get; set; } Property Value Type Description MethodPermission | Improve this Doc View Source Response An example response for the method. Declaration public string Response { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.MethodArgument.html": {
    "href": "api/Flickr.Net.Core.Entities.MethodArgument.html",
    "title": "Class MethodArgument | Flickr.Net",
    "keywords": "Class MethodArgument An argument for a method. Inheritance System.Object MethodArgument Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class MethodArgument : IFlickrParsable Properties | Improve this Doc View Source Description The description of the argument. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsOptional Is the argument optional or not. Declaration public bool IsOptional { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Name The name of the argument. Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.MethodError.html": {
    "href": "api/Flickr.Net.Core.Entities.MethodError.html",
    "title": "Class MethodError | Flickr.Net",
    "keywords": "Class MethodError A possible error that a method can return. Inheritance System.Object MethodError Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class MethodError : IFlickrParsable Properties | Improve this Doc View Source Code The code for the error. Declaration public int Code { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Description The description of a method error. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Message The message for a method error. Declaration public string Message { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Namespace.html": {
    "href": "api/Flickr.Net.Core.Entities.Namespace.html",
    "title": "Class Namespace | Flickr.Net",
    "keywords": "Class Namespace A machine tag namespace. \"namespace:predicate=value\". Inheritance System.Object Namespace Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Namespace : IFlickrParsable Properties | Improve this Doc View Source NamespaceName The name of the namespace. Declaration public string NamespaceName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Predicates The number of unique predicates within this namespace. Declaration public int Predicates { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Usage The usage of the namespace. Declaration public int Usage { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.NoResponse.html": {
    "href": "api/Flickr.Net.Core.Entities.NoResponse.html",
    "title": "Class NoResponse | Flickr.Net",
    "keywords": "Class NoResponse Used by the FlickrNet library when Flickr does not return anything in the body of a response, e.g. for update methods. Inheritance System.Object NoResponse Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class NoResponse : IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.OAuthAccessToken.html": {
    "href": "api/Flickr.Net.Core.Entities.OAuthAccessToken.html",
    "title": "Class OAuthAccessToken | Flickr.Net",
    "keywords": "Class OAuthAccessToken The access authentication token return by Flickr after a successful authentication. Inheritance System.Object OAuthAccessToken Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class OAuthAccessToken : IFlickrParsable Properties | Improve this Doc View Source FullName The full name of the authenticated user. Declaration public string FullName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Token The access token string. Declaration public string Token { get; set; } Property Value Type Description System.String | Improve this Doc View Source TokenSecret The access token secret. Declaration public string TokenSecret { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserId The user id of the authenticated user. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Username The username (screenname) of the authenticated user. Declaration public string Username { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Pair.html": {
    "href": "api/Flickr.Net.Core.Entities.Pair.html",
    "title": "Class Pair | Flickr.Net",
    "keywords": "Class Pair A machine tag pair made up of a namespace and predicate. \"namespace:predicate=value\". Inheritance System.Object Pair Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Pair : IFlickrParsable Properties | Improve this Doc View Source NamespaceName The namespace part of this pair. Declaration public string NamespaceName { get; set; } Property Value Type Description System.String | Improve this Doc View Source PairName The name of the pair. Declaration public string PairName { get; set; } Property Value Type Description System.String | Improve this Doc View Source PredicateName The predicate part of this pair. Declaration public string PredicateName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Usage The usage of the namespace. Declaration public int Usage { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.Person.html": {
    "href": "api/Flickr.Net.Core.Entities.Person.html",
    "title": "Class Person | Flickr.Net",
    "keywords": "Class Person The Person class contains details returned by the GetInfoAsync(String, CancellationToken) method. Inheritance System.Object Person Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Person : IFlickrParsable Properties | Improve this Doc View Source BuddyIconUrl Returns the for the users Buddy Icon. Declaration public string BuddyIconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source CanBuyPro Not sure? Declaration public bool? CanBuyPro { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Description The description of the user, as taken from the users profil page. Declaration public string Description { get; set; } Property Value Type Description System.String Remarks Will likely contain HTML. | Improve this Doc View Source Gender The gender of the user on Flickr. May be null, or X for unspecified. Declaration public string Gender { get; set; } Property Value Type Description System.String | Improve this Doc View Source HasStats Not sure? Declaration public bool? HasStats { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IconFarm The server farm that will serve up the users Buddy Icon. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer The server that will serve up the users Buddy Icon. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsContact Is the person a contact of the calling user. Will be null if not an authenticated call. Declaration public bool? IsContact { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsFamily Is the person family of the calling user. Will be null if not an authenticated call. Declaration public bool? IsFamily { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsFriend Is the person a friend of the calling user. Will be null if not an authenticated call. Declaration public bool? IsFriend { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsIgnored Is the person ignored by the calling user. Will be null if not an authenticated call. Declaration public bool? IsIgnored { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsPro Does the user posses a pro account. 0 = free acouunt, 1 = pro account holder. Declaration public bool IsPro { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsReverseContact Has the person marked the calling user as a contact. Will be null if not an authenticated call. Declaration public bool? IsReverseContact { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsReverseFamily Has the person marked the calling user as family. Will be null if not an authenticated call. Declaration public bool? IsReverseFamily { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source IsReverseFriend Has the person marked the calling user as a friend. Will be null if not an authenticated call. Declaration public bool? IsReverseFriend { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source Location Consists of your current location followed by country. Declaration public string Location { get; set; } Property Value Type Description System.String Examples e.g. Newcastle, UK. | Improve this Doc View Source MailboxSha1Hash The SHA1 hash of the users email address - used for FOAF networking. Declaration public string MailboxSha1Hash { get; set; } Property Value Type Description System.String | Improve this Doc View Source MobileUrl The users profile location on Flickr https://m.flickr.com/photostream.gne?id=ID Declaration public string MobileUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source PathAlias The users URL alias, if any. Declaration public string PathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotosSummary Sub element containing a summary of the users photo information. Declaration public PersonPhotosSummary PhotosSummary { get; set; } Property Value Type Description PersonPhotosSummary | Improve this Doc View Source PhotosUrl The users photo location on Flickr https://www.flickr.com/photos/username/ Declaration public string PhotosUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source ProfileUrl The users profile location on Flickr https://www.flickr.com/people/username/ Declaration public string ProfileUrl { get; set; } Property Value Type Description System.String | Improve this Doc View Source RealName The users real name, as entered in their profile. Declaration public string RealName { get; set; } Property Value Type Description System.String | Improve this Doc View Source TimeZoneLabel Description of the timezone of this user. Declaration public string TimeZoneLabel { get; set; } Property Value Type Description System.String | Improve this Doc View Source TimeZoneOffset Offset for the timezome for this user, e.g. \"+01:00\". Declaration public string TimeZoneOffset { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserId The user id of the user. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserName The users username, also known as their screenname. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PersonLimits.html": {
    "href": "api/Flickr.Net.Core.Entities.PersonLimits.html",
    "title": "Class PersonLimits | Flickr.Net",
    "keywords": "Class PersonLimits The limits for a person returned by GetLimitsAsync(CancellationToken) . Inheritance System.Object PersonLimits Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class PersonLimits : IFlickrParsable Remarks For more details on limits see help here: https://www.flickr.com/help/limits/ Properties | Improve this Doc View Source MaximumDisplayPixels Maximum size in pixels for photos displayed on the site (0 means that no limit is in place). No limit is placed on the dimension of photos uploaded Declaration public int MaximumDisplayPixels { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaximumPhotoUpload Maximum file size in bytes for photo uploads. Declaration public long MaximumPhotoUpload { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source MaximumVideoDuration Maximum duration in seconds of a video. Declaration public int MaximumVideoDuration { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source MaximumVideoUpload Maximum file size in bytes for video uploads. Declaration public long MaximumVideoUpload { get; set; } Property Value Type Description System.Int64"
  },
  "api/Flickr.Net.Core.Entities.PersonPhotosSummary.html": {
    "href": "api/Flickr.Net.Core.Entities.PersonPhotosSummary.html",
    "title": "Class PersonPhotosSummary | Flickr.Net",
    "keywords": "Class PersonPhotosSummary A summary of a users photos. Inheritance System.Object PersonPhotosSummary Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PersonPhotosSummary : IFlickrParsable Properties | Improve this Doc View Source FirstDate The first date the user uploaded a picture, converted into format. Declaration public DateTime FirstDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source FirstTakenDate The first date the user took a picture, converted into format. Declaration public DateTime FirstTakenDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source PhotoCount The total number of photos for the user. Declaration public int PhotoCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Views The total number of photos for the user. Declaration public int Views { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.Photo.html": {
    "href": "api/Flickr.Net.Core.Entities.Photo.html",
    "title": "Class Photo | Flickr.Net",
    "keywords": "Class Photo The photo. Inheritance System.Object Photo FavoriteContextPhoto GalleryPhoto PopularPhoto Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class Photo : IFlickrParsable Constructors | Improve this Doc View Source Photo() Initializes a new instance of the Photo class. Declaration public Photo() Properties | Improve this Doc View Source Accuracy Geo-location accuracy. A value of None means that the information was not returned. Declaration public GeoAccuracy Accuracy { get; set; } Property Value Type Description GeoAccuracy | Improve this Doc View Source CanAddMeta Can the current user (or unauthenticated user if no authentication token provided) add 'meta' to this photo (notes, tags etc). Declaration public bool? CanAddMeta { get; set; } Property Value Type Description System.Nullable < System.Boolean > Remarks Will always be false for unauthenticated calls. | Improve this Doc View Source CanBlog Can the current user (or unauthenticated user if no authentication token provided) blog this photo. Declaration public bool? CanBlog { get; set; } Property Value Type Description System.Nullable < System.Boolean > Remarks Will always be false for unauthenticated calls. | Improve this Doc View Source CanComment Can the current user (or unauthenticated user if no authentication token provided) comment on this photo. Declaration public bool? CanComment { get; set; } Property Value Type Description System.Nullable < System.Boolean > Remarks Will always be false for unauthenticated calls. | Improve this Doc View Source CanDownload Can the current user (or unauthenticated user if no authentication token provided) download this photo. Declaration public bool? CanDownload { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source CanPrint Can the current user (or unauthenticated user if no authentication token provided) print this photo. Declaration public bool? CanPrint { get; set; } Property Value Type Description System.Nullable < System.Boolean > Remarks Will always be false for unauthenticated calls. | Improve this Doc View Source CanShare Can the current user (or unauthenticated user if no authentication token provided) share on this photo. Declaration public bool? CanShare { get; set; } Property Value Type Description System.Nullable < System.Boolean > Remarks Will always be false for unauthenticated calls. | Improve this Doc View Source CountComments The number of comments for this photo. Declaration public int? CountComments { get; set; } Property Value Type Description System.Nullable < System.Int32 > Remarks Only returned if you specify the property. | Improve this Doc View Source CountFaves The number of favorites for this photo. Declaration public int? CountFaves { get; set; } Property Value Type Description System.Nullable < System.Int32 > Remarks Only returned if you specify the property. | Improve this Doc View Source DateAddedToGroup The date the photo was added to the group. Only returned by GetPhotosAsync(String, String, String, PhotoSearchExtras, Int32, Int32, CancellationToken) . Declaration public DateTime? DateAddedToGroup { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source DateFavorited The date the photo was favourited. Only returned by GetPublicListAsync(String, Int32, Int32, CancellationToken) . Declaration public DateTime? DateFavorited { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source DateTaken Converts the raw datetaken field to a . Returns if the raw value was not returned. Declaration public DateTime DateTaken { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateTakenUnknown Is the date taken unknown? Declaration public bool DateTakenUnknown { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DateUploaded Converts the raw dateupload field to a . Declaration public DateTime DateUploaded { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Description The description for the photo. Only returned if is set. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source DoesLargeExist A helper method which tries to guess if a large image will be available for this photograph based on the original dimensions returned with the photo. Declaration public bool DoesLargeExist { get; } Property Value Type Description System.Boolean | Improve this Doc View Source DoesMediumExist A helper method which tries to guess if a medium image will be available for this photograph based on the original dimensions returned with the photo. Declaration public bool DoesMediumExist { get; } Property Value Type Description System.Boolean | Improve this Doc View Source Farm Gets or sets the farm. Declaration public string Farm { get; set; } Property Value Type Description System.String | Improve this Doc View Source GeoContext The GeoContext of the photo, if it has location information. Declaration public GeoContext? GeoContext { get; set; } Property Value Type Description System.Nullable < GeoContext > | Improve this Doc View Source GeoPermissions If Geolocation information is returned for this photo then this will contain the permissions for who can see those permissions. Declaration public GeoPermissions GeoPermissions { get; set; } Property Value Type Description GeoPermissions | Improve this Doc View Source IconFarm Gets or sets the icon farm. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer Gets or sets the icon server. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsFamily Gets or sets a value indicating whether is family. Declaration public bool IsFamily { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFriend Gets or sets a value indicating whether is friend. Declaration public bool IsFriend { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPublic Gets or sets a value indicating whether is public. Declaration public bool IsPublic { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Large1600Height Height of Large (1600 pixel) image. Declaration public int? Large1600Height { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Large1600Url Large (1600 pixel) image url, if it exists. Declaration public string Large1600Url { get; set; } Property Value Type Description System.String | Improve this Doc View Source Large1600Width Width of Large (1600 pixel) image. Declaration public int? Large1600Width { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Large2048Height Height of Large (2048 pixel) image. Declaration public int? Large2048Height { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Large2048Url Large (2048 pixel) image, if it exists. Declaration public string Large2048Url { get; set; } Property Value Type Description System.String | Improve this Doc View Source Large2048Width Width of Large (2048 pixel) image. Declaration public int? Large2048Width { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source LargeHeight The height of the large image, if one exists. Only returned if is specified and a large image exists. Declaration public int? LargeHeight { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source LargeSquareThumbnailHeight The height of the square thumbnail image. Only returned if is specified. Declaration public int? LargeSquareThumbnailHeight { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source LargeSquareThumbnailUrl The URL for the large (150x150) square thumbnail of a photo. Declaration public string LargeSquareThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source LargeSquareThumbnailWidth The width of the square thumbnail image. Only returned if is specified. Declaration public int? LargeSquareThumbnailWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source LargeUrl The URL for the large copy of a photo. Declaration public string LargeUrl { get; } Property Value Type Description System.String Remarks There is a chance that small images will not have a large copy. Use GetSizesAsync(String, CancellationToken) to get the available URLs for a photo. | Improve this Doc View Source LargeWidth The width of the large image, if one exists. Only returned if is specified and a large image exists. Declaration public int? LargeWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source LastUpdated Converts the raw lastupdate field to a . Returns if the raw value was not returned. Declaration public DateTime LastUpdated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Latitude Latitude. Will be 0 if Geo extras not specified. Declaration public double Latitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source License Gets or sets the license. Declaration public LicenseType License { get; set; } Property Value Type Description LicenseType | Improve this Doc View Source Longitude Longitude. Will be 0 if not specified. Declaration public double Longitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MachineTags Machine tags Declaration public string MachineTags { get; set; } Property Value Type Description System.String | Improve this Doc View Source Media The media format for this photo. Only returned if PhotoSearchExtras.Media is set. Declaration public string Media { get; set; } Property Value Type Description System.String | Improve this Doc View Source MediaStatus The status of the media for this photo. Only returned if PhotoSearchExtras.Media is set. Declaration public string MediaStatus { get; set; } Property Value Type Description System.String | Improve this Doc View Source Medium640Height The height of the medium image. Only returned if is specified. Declaration public int? Medium640Height { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Medium640Url The URL for the medium 640 copy of a photo. Declaration public string Medium640Url { get; } Property Value Type Description System.String Remarks There is a chance that extremely small images will not have a medium 640 copy. Use GetSizesAsync(String, CancellationToken) to get the available URLs for a photo. | Improve this Doc View Source Medium640Width The width of the medium image. Only returned if is specified. Declaration public int? Medium640Width { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Medium800Height The height of the medium image. Only returned if is specified. Declaration public int? Medium800Height { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Medium800Url The URL for the medium 640 copy of a photo. Declaration public string Medium800Url { get; } Property Value Type Description System.String Remarks There is a chance that extremely small images will not have a medium 640 copy. Use GetSizesAsync(String, CancellationToken) to get the available URLs for a photo. | Improve this Doc View Source Medium800Width The width of the medium image. Only returned if is specified. Declaration public int? Medium800Width { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source MediumHeight The height of the medium image. Only returned if is specified. Declaration public int? MediumHeight { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source MediumUrl The URL for the medium copy of a photo. Declaration public string MediumUrl { get; } Property Value Type Description System.String Remarks There is a chance that extremely small images will not have a medium copy. Use GetSizesAsync(String, CancellationToken) to get the available URLs for a photo. | Improve this Doc View Source MediumWidth The width of the medium image. Only returned if is specified. Declaration public int? MediumWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source OriginalFormat Optional extra field containing the original format (jpg, png etc) of the photo. Declaration public string OriginalFormat { get; set; } Property Value Type Description System.String | Improve this Doc View Source OriginalHeight The height of the original image. Only returned if is specified. Declaration public int OriginalHeight { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source OriginalSecret Optional extra field containing the original 'secret' of the photo used for forming the Url. Declaration public string OriginalSecret { get; set; } Property Value Type Description System.String | Improve this Doc View Source OriginalUrl If OriginalFormat was returned then this will contain the url of the original file. Declaration public string OriginalUrl { get; } Property Value Type Description System.String | Improve this Doc View Source OriginalWidth The width of the original image. Only returned if is specified. Declaration public int OriginalWidth { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source OwnerName Gets or sets the owner name. Declaration public string OwnerName { get; set; } Property Value Type Description System.String | Improve this Doc View Source PathAlias The url alias the user has picked, it applicable. Declaration public string PathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotoId Gets or sets the photo id. Declaration public string PhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PlaceId The Place ID. Will be null if is not specified in the search. Declaration public string PlaceId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Rotation If requested will contain the number of degrees the photo has been rotated since upload. Declaration public int? Rotation { get; set; } Property Value Type Description System.Nullable < System.Int32 > Remarks This might be due to the photo containing rotation information so done automatically, or by manually rotating the photo in Flickr. | Improve this Doc View Source Secret Gets or sets the secret. Declaration public string Secret { get; set; } Property Value Type Description System.String | Improve this Doc View Source Server Gets or sets the server. Declaration public string Server { get; set; } Property Value Type Description System.String | Improve this Doc View Source Small320Height The height of the small 320 image. Only returned if is specified. Declaration public int? Small320Height { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Small320Url The URL for the small (320 on longest side) copy of a photo. Declaration public string Small320Url { get; } Property Value Type Description System.String | Improve this Doc View Source Small320Width The width of the small 320 image. Only returned if is specified. Declaration public int? Small320Width { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SmallHeight The height of the small image. Only returned if is specified. Declaration public int? SmallHeight { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SmallUrl The URL for the small copy of a photo. Declaration public string SmallUrl { get; } Property Value Type Description System.String | Improve this Doc View Source SmallWidth The width of the small image. Only returned if is specified. Declaration public int? SmallWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SquareThumbnailHeight The height of the square thumbnail image. Only returned if is specified. Declaration public int? SquareThumbnailHeight { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SquareThumbnailUrl The URL for the square thumbnail of a photo. Declaration public string SquareThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source SquareThumbnailWidth The width of the square thumbnail image. Only returned if is specified. Declaration public int? SquareThumbnailWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Tags The list of clean tags for the photograph. Declaration public Collection<string> Tags { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < System.String > | Improve this Doc View Source ThumbnailHeight The height of the thumbnail image. Only returned if is specified. Declaration public int? ThumbnailHeight { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ThumbnailUrl The URL for the thumbnail of a photo. Declaration public string ThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source ThumbnailWidth The width of the thumbnail image. Only returned if is specified. Declaration public int? ThumbnailWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Title Gets or sets the title. Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserId Gets or sets the user id. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Views The number of views for this photo. Only returned if PhotoSearchExtras.Views is set. Declaration public int? Views { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source WebUrl The url to the web page for this photo. Uses the users userId, not their web alias, but will still work. Declaration public string WebUrl { get; } Property Value Type Description System.String | Improve this Doc View Source WoeId The WOE (Where On Earth) ID. Will be null if is not specified in the search. Declaration public string WoeId { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source Load(XmlReader, Boolean) Protected method that does the actual initialization of the Photo instance. Should be called by subclasses of the Photo class. Declaration protected void Load(XmlReader reader, bool allowExtraAttributes) Parameters Type Name Description XmlReader reader The reader containing the XML to be parsed. System.Boolean allowExtraAttributes Wheither to allow unknown extra attributes. In debug builds will throw an exception if this parameter is false and an unknown attribute is found."
  },
  "api/Flickr.Net.Core.Entities.PhotoComment.html": {
    "href": "api/Flickr.Net.Core.Entities.PhotoComment.html",
    "title": "Class PhotoComment | Flickr.Net",
    "keywords": "Class PhotoComment Contains the details of a comment made on a photo. returned by the GetListAsync(String, CancellationToken) method. Inheritance System.Object PhotoComment Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoComment : IFlickrParsable Properties | Improve this Doc View Source AuthorBuddyIcon The comment authors buddy icon. Declaration public string AuthorBuddyIcon { get; } Property Value Type Description System.String | Improve this Doc View Source AuthorIsDeleted The account of the author of this comment has been deleted. Declaration public bool AuthorIsDeleted { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AuthorPathAlias The path alias for the comment owner's page. Declaration public string AuthorPathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorRealName The real name of the comment author, if known. Declaration public string AuthorRealName { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorUserId The user id of the author of the comment. Declaration public string AuthorUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorUserName The username (screen name) of the author of the comment. Declaration public string AuthorUserName { get; set; } Property Value Type Description System.String | Improve this Doc View Source CommentHtml The comment text (can contain HTML). Declaration public string CommentHtml { get; set; } Property Value Type Description System.String | Improve this Doc View Source CommentId The comment id of this comment. Declaration public string CommentId { get; set; } Property Value Type Description System.String | Improve this Doc View Source DateCreated The date and time that the comment was created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source IconFarm The farm for the commenting users buddy icon. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer The server for the commenting users buddy icon. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source Permalink The permalink to the comment on the photos web page. Declaration public string Permalink { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PhotoCount.html": {
    "href": "api/Flickr.Net.Core.Entities.PhotoCount.html",
    "title": "Class PhotoCount | Flickr.Net",
    "keywords": "Class PhotoCount The specifics of a particular count. Inheritance System.Object PhotoCount Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoCount : IFlickrParsable Properties | Improve this Doc View Source Count Total number of photos between the FromDate and the ToDate. Declaration public int Count { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source FromDate The From date as a object. Declaration public DateTime FromDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source ToDate The To date as a object. Declaration public DateTime ToDate { get; set; } Property Value Type Description DateTime"
  },
  "api/Flickr.Net.Core.Entities.PhotoFavorite.html": {
    "href": "api/Flickr.Net.Core.Entities.PhotoFavorite.html",
    "title": "Class PhotoFavorite | Flickr.Net",
    "keywords": "Class PhotoFavorite Details of the favourites for a photo. Inheritance System.Object PhotoFavorite Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoFavorite : IFlickrParsable Properties | Improve this Doc View Source FavoriteDate The date the hoto was favourited. Declaration public DateTime FavoriteDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source UserId The Flickr User ID of the user who favourited the photo. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserName The user name of the user who favourited the photo. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PhotoInfo.html": {
    "href": "api/Flickr.Net.Core.Entities.PhotoInfo.html",
    "title": "Class PhotoInfo | Flickr.Net",
    "keywords": "Class PhotoInfo Detailed information returned by GetInfoAsync(String, String, CancellationToken) or GetInfoAsync(String, String, CancellationToken) methods. Inheritance System.Object PhotoInfo Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoInfo : IFlickrParsable Constructors | Improve this Doc View Source PhotoInfo() Default constructor. Declaration public PhotoInfo() Properties | Improve this Doc View Source CanAddMeta Can the authorized user add new meta data (tags and notes). Declaration public bool CanAddMeta { get; set; } Property Value Type Description System.Boolean Remarks \"1\" = true, \"0\" = false. | Improve this Doc View Source CanBlog Specifies if the user allows blogging of this photos. 1 = Yes, 0 = No. Declaration public bool CanBlog { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanComment Can the authorized user add new comments. Declaration public bool CanComment { get; set; } Property Value Type Description System.Boolean Remarks \"1\" = true, \"0\" = false. | Improve this Doc View Source CanDownload Specifies if the user allows downloading of this photos. 1 = Yes, 0 = No. Declaration public bool CanDownload { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanPrint Specifies if the user allows printing of this photos. 1 = Yes, 0 = No. Declaration public bool CanPrint { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanPublicAddMeta Can the public add new meta data (tags and notes). Declaration public bool CanPublicAddMeta { get; set; } Property Value Type Description System.Boolean Remarks \"1\" = true, \"0\" = false. | Improve this Doc View Source CanPublicComment Can the public add new comments. Declaration public bool CanPublicComment { get; set; } Property Value Type Description System.Boolean Remarks \"1\" = true, \"0\" = false. | Improve this Doc View Source CanShare Does the user allow sharing of this photo. Declaration public bool CanShare { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CommentsCount The number of comments the photo has. Declaration public int CommentsCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source DateLastUpdated The date the photo was last updated. Declaration public DateTime DateLastUpdated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DatePosted The date the photo was posted/uploaded. Declaration public DateTime DatePosted { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateTaken The date the photo was taken. Declaration public DateTime DateTaken { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateTakenGranularity The granularity of the date taken data. Declaration public DateGranularity DateTakenGranularity { get; set; } Property Value Type Description DateGranularity | Improve this Doc View Source DateTakenUnknown Is the date taken unknown? Declaration public bool DateTakenUnknown { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DateUploaded The date the photo was uploaded (or 'posted'). Declaration public DateTime DateUploaded { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Description The description of the photo. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Farm The server farm on which the photo resides. Declaration public string Farm { get; set; } Property Value Type Description System.String | Improve this Doc View Source GeoPermissions Who has permissions to see the geo-location data for this photo. Declaration public GeoPermissions GeoPermissions { get; set; } Property Value Type Description GeoPermissions | Improve this Doc View Source HasPeople Does this photo contain tagged people. Declaration public bool HasPeople { get; set; } Property Value Type Description System.Boolean Remarks Call GetListAsync(String, CancellationToken) to get the people found in this photo. | Improve this Doc View Source IsFamily Is the photo visible to contacts marked as family. Declaration public bool IsFamily { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFavorite Is the photo a favorite of the current authorised user. Will be 0 if the user is not authorised. Declaration public bool IsFavorite { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFriend Is the photo visible to contacts marked as friends. Declaration public bool IsFriend { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPublic Is the photo visible to the public. Declaration public bool IsPublic { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LargeSquareUrl The URL for the large square version of this photo. Declaration public string LargeSquareUrl { get; } Property Value Type Description System.String Remarks There is no guarentee that this size of the image actually exists. Use GetSizesAsync(String, CancellationToken) to get a list of existing photo URLs. | Improve this Doc View Source LargeUrl The URL for the large version of this photo. Declaration public string LargeUrl { get; } Property Value Type Description System.String Remarks There is no guarentee that this size of the image actually exists. Use GetSizesAsync(String, CancellationToken) to get a list of existing photo URLs. | Improve this Doc View Source License The license of the photo. Declaration public LicenseType License { get; set; } Property Value Type Description LicenseType | Improve this Doc View Source Location The location information of this photo, if available. Declaration public PlaceInfo Location { get; set; } Property Value Type Description PlaceInfo Remarks Will be null if the photo has no location information stored on Flickr. | Improve this Doc View Source Media The media type for this item. Declaration public MediaType Media { get; set; } Property Value Type Description MediaType | Improve this Doc View Source Medium640Url The URL for the medium 640 version of this photo. Declaration public string Medium640Url { get; } Property Value Type Description System.String Remarks There is no guarentee that this size of the image actually exists. Use GetSizesAsync(String, CancellationToken) to get a list of existing photo URLs. | Improve this Doc View Source Medium800Url The URL for the medium 800 version of this photo. Declaration public string Medium800Url { get; } Property Value Type Description System.String Remarks There is no guarentee that this size of the image actually exists. Use GetSizesAsync(String, CancellationToken) to get a list of existing photo URLs. | Improve this Doc View Source MediumUrl The URL for the medium version of this photo. Declaration public string MediumUrl { get; } Property Value Type Description System.String Remarks There is no guarentee that this size of the image actually exists. Use GetSizesAsync(String, CancellationToken) to get a list of existing photo URLs. | Improve this Doc View Source Notes The notes for the photo. Declaration public Collection<PhotoInfoNote> Notes { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < PhotoInfoNote > | Improve this Doc View Source OriginalFormat The original format of the image (e.g. jpg, png etc). Declaration public string OriginalFormat { get; set; } Property Value Type Description System.String | Improve this Doc View Source OriginalSecret Optional extra field containing the original 'secret' of the photo used for forming the Url. Declaration public string OriginalSecret { get; set; } Property Value Type Description System.String | Improve this Doc View Source OriginalUrl If OriginalFormat was returned then this will contain the url of the original file. Declaration public string OriginalUrl { get; } Property Value Type Description System.String | Improve this Doc View Source OwnerBuddyIcon The owners buddy icon, or the default buddy icon it no icon is set. Declaration public string OwnerBuddyIcon { get; } Property Value Type Description System.String | Improve this Doc View Source OwnerIconFarm The farm for the owners buddy icon. Declaration public string OwnerIconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerIconServer The server for the owners buddy icon. Declaration public string OwnerIconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerLocation The location of the owner of this photo. Declaration public string OwnerLocation { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerRealName The real name of the owner of this item. Declaration public string OwnerRealName { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerUserId The NSID of the owner of this item. Declaration public string OwnerUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerUserName The username of the owner of this item. Declaration public string OwnerUserName { get; set; } Property Value Type Description System.String | Improve this Doc View Source PathAlias The path alias for this user, if set. Declaration public string PathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source PermissionAddMeta Who has permissions to add meta data (tags and notes) to this photo. Declaration public PermissionAddMeta? PermissionAddMeta { get; set; } Property Value Type Description System.Nullable < PermissionAddMeta > | Improve this Doc View Source PermissionComment Who has permissions to add comments to this photo. Declaration public PermissionComment? PermissionComment { get; set; } Property Value Type Description System.Nullable < PermissionComment > | Improve this Doc View Source PhotoId The id of the photo. Declaration public string PhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Rotation The rotational information for this photo - in degrees. Declaration public int Rotation { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SafetyLevel The safety level of the photo (safe, moderated or restricted). Declaration public SafetyLevel SafetyLevel { get; set; } Property Value Type Description SafetyLevel | Improve this Doc View Source Secret The secret of the photo. Used to calculate the URL (amongst other things). Declaration public string Secret { get; set; } Property Value Type Description System.String | Improve this Doc View Source Server The server on which the photo resides. Declaration public string Server { get; set; } Property Value Type Description System.String | Improve this Doc View Source Small320Url The URL for the small 320 version of this photo. Declaration public string Small320Url { get; } Property Value Type Description System.String Remarks There is no guarentee that this size of the image actually exists. Use GetSizesAsync(String, CancellationToken) to get a list of existing photo URLs. | Improve this Doc View Source SmallUrl The URL for the small version of this photo. Declaration public string SmallUrl { get; } Property Value Type Description System.String | Improve this Doc View Source SquareThumbnailUrl The URL for the square thumbnail for the photo. Declaration public string SquareThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Tags The tags for the photo. Declaration public Collection<PhotoInfoTag> Tags { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < PhotoInfoTag > | Improve this Doc View Source ThumbnailUrl The URL for the thumbnail for the photo. Declaration public string ThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Title The title of the photo. Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source Urls The urls for this photo. Declaration public Collection<PhotoInfoUrl> Urls { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < PhotoInfoUrl > | Improve this Doc View Source VideoInfo If this item is a video this contains information such as if it is ready, its duration etc. Declaration public VideoInfo VideoInfo { get; set; } Property Value Type Description VideoInfo | Improve this Doc View Source ViewCount The number of views the photo has. Declaration public int ViewCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source WebUrl The Web url for flickr web page for this photo. Declaration public string WebUrl { get; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PhotoInfoNote.html": {
    "href": "api/Flickr.Net.Core.Entities.PhotoInfoNote.html",
    "title": "Class PhotoInfoNote | Flickr.Net",
    "keywords": "Class PhotoInfoNote A class containing information about a note on a photo. Inheritance System.Object PhotoInfoNote Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoInfoNote : IFlickrParsable Properties | Improve this Doc View Source AuthorId The User ID of the user who wrote the note. Declaration public string AuthorId { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorIsPro Is the author of this note a Pro Flickr user. Declaration public bool? AuthorIsPro { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source AuthorName The name of the user who wrote the note. Declaration public string AuthorName { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorRealName The real name of the user who wrote the note. Declaration public string AuthorRealName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Height The height of the note. Declaration public int Height { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Location The location of this note on the medium sized thumbnail of this photo. Derived from XPosition and YPosition . Declaration public Point Location { get; } Property Value Type Description System.Drawing.Point | Improve this Doc View Source NoteId The notes unique ID. Declaration public string NoteId { get; set; } Property Value Type Description System.String | Improve this Doc View Source NoteText The text of the note. Declaration public string NoteText { get; set; } Property Value Type Description System.String | Improve this Doc View Source Size The System.Drawing.Size of this note. Derived from Width and Height . Declaration public Size Size { get; } Property Value Type Description System.Drawing.Size | Improve this Doc View Source Width The width of the note. Declaration public int Width { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source XPosition The x (left) position of the top left corner of the note. Declaration public int XPosition { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source YPosition The y (top) position of the top left corner of the note. Declaration public int YPosition { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.PhotoInfoTag.html": {
    "href": "api/Flickr.Net.Core.Entities.PhotoInfoTag.html",
    "title": "Class PhotoInfoTag | Flickr.Net",
    "keywords": "Class PhotoInfoTag The details of a tag of a photo. Inheritance System.Object PhotoInfoTag Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoInfoTag : IFlickrParsable Properties | Improve this Doc View Source AuthorId The author id of the tag. Declaration public string AuthorId { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorName The real name of the author of the tag. Declaration public string AuthorName { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsMachineTag Is the tag a machine tag. Declaration public bool IsMachineTag { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Raw Raw copy of the tag, as the user entered it. Declaration public string Raw { get; set; } Property Value Type Description System.String | Improve this Doc View Source TagId The id of the tag. Declaration public string TagId { get; set; } Property Value Type Description System.String | Improve this Doc View Source TagText The actually tag. Declaration public string TagText { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PhotoInfoUrl.html": {
    "href": "api/Flickr.Net.Core.Entities.PhotoInfoUrl.html",
    "title": "Class PhotoInfoUrl | Flickr.Net",
    "keywords": "Class PhotoInfoUrl The details of a tag of a photo. Inheritance System.Object PhotoInfoUrl Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoInfoUrl : IFlickrParsable Properties | Improve this Doc View Source Url The url for the photoset. Declaration public string Url { get; set; } Property Value Type Description System.String | Improve this Doc View Source UrlType The type of the url. Declaration public string UrlType { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PhotoPermissions.html": {
    "href": "api/Flickr.Net.Core.Entities.PhotoPermissions.html",
    "title": "Class PhotoPermissions | Flickr.Net",
    "keywords": "Class PhotoPermissions Permissions for the selected photo. Inheritance System.Object PhotoPermissions Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoPermissions : IFlickrParsable Properties | Improve this Doc View Source IsFamily Gets or sets a value indicating whether is family. Declaration public bool IsFamily { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsFriend Gets or sets a value indicating whether is friend. Declaration public bool IsFriend { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsPublic Gets or sets a value indicating whether is public. Declaration public bool IsPublic { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PermissionAddMeta Gets or sets the permission add meta. Declaration public PermissionAddMeta PermissionAddMeta { get; set; } Property Value Type Description PermissionAddMeta | Improve this Doc View Source PermissionComment Gets or sets the permission comment. Declaration public PermissionComment PermissionComment { get; set; } Property Value Type Description PermissionComment | Improve this Doc View Source PhotoId Gets or sets the photo id. Declaration public string PhotoId { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PhotoPerson.html": {
    "href": "api/Flickr.Net.Core.Entities.PhotoPerson.html",
    "title": "Class PhotoPerson | Flickr.Net",
    "keywords": "Class PhotoPerson The PhotoPerson class contains details returned by the GetListAsync(String, CancellationToken) method. Inheritance System.Object PhotoPerson Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PhotoPerson : IFlickrParsable Properties | Improve this Doc View Source AddedByUserId The user ID of the person who added this person, to this photo. Declaration public string AddedByUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source BuddyIconUrl Returns the for the users Buddy Icon. Declaration public string BuddyIconUrl { get; } Property Value Type Description System.String | Improve this Doc View Source IconFarm The server farm that will serve up the users Buddy Icon. Declaration public string IconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source IconServer The server that will serve up the users Buddy Icon. Declaration public string IconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source PathAlias The path alias for the users photostream, if they have set it. Declaration public string PathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotostreamUrl The URL for the users Flickr home page. Declaration public string PhotostreamUrl { get; } Property Value Type Description System.String | Improve this Doc View Source PositionHeight The height of the persons bounding box, if any. Declaration public int? PositionHeight { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source PositionWidth The width of the persons bounding box, if any. Declaration public int? PositionWidth { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source PositionX The left most position of the persons bounding box, if any. Declaration public int? PositionX { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source PositionY The top most position of the persons bounding box, if any. Declaration public int? PositionY { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source RealName The users real name, as entered in their profile. Declaration public string RealName { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserId The user id of the user. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserName The users username, also known as their screenname. Declaration public string UserName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Photoset.html": {
    "href": "api/Flickr.Net.Core.Entities.Photoset.html",
    "title": "Class Photoset | Flickr.Net",
    "keywords": "Class Photoset A set of properties for the photoset. Inheritance System.Object Photoset Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Photoset : IFlickrParsable Properties | Improve this Doc View Source CanComment If the call was authenticated then can the current user comment on this photoset? Declaration public bool? CanComment { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source CommentCount The number of comments on this photoset. Declaration public int CommentCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source CoverPhotoFarm The farm for the cover photos for the owner of this photoset. Declaration public string CoverPhotoFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source CoverPhotoServer The server for the cover photos for the owner of this photoset. Declaration public string CoverPhotoServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source DateCreated Date the photoset was created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateUpdated Date the photoset was last updated. Declaration public DateTime DateUpdated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Description The description of the photoset. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Farm The server farm for the primary photo for the photoset. Declaration public string Farm { get; set; } Property Value Type Description System.String | Improve this Doc View Source NumberOfPhotos The number of photos in this photoset. Declaration public int NumberOfPhotos { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source NumberOfVideos The number of videos in this photoset. Declaration public int NumberOfVideos { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source OwnerId The ID of the owner of the photoset. Declaration public string OwnerId { get; set; } Property Value Type Description System.String | Improve this Doc View Source OwnerName The username of the owner of the photoset. Declaration public string OwnerName { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotosetId The ID of the photoset. Declaration public string PhotosetId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotosetSmallUrl The URL for the small copy of a photo. Declaration public string PhotosetSmallUrl { get; } Property Value Type Description System.String | Improve this Doc View Source PhotosetSquareThumbnailUrl The URL for the square thumbnail of a photo. Declaration public string PhotosetSquareThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source PhotosetThumbnailUrl The URL for the thumbnail of a photo. Declaration public string PhotosetThumbnailUrl { get; } Property Value Type Description System.String | Improve this Doc View Source PrimaryPhoto The full details of the primary photo, as well as any extras requested. Declaration public Photo PrimaryPhoto { get; set; } Property Value Type Description Photo | Improve this Doc View Source PrimaryPhotoId The photo ID of the primary photo of the photoset. Declaration public string PrimaryPhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Secret The secret for the primary photo for the photoset. Declaration public string Secret { get; set; } Property Value Type Description System.String | Improve this Doc View Source Server The server for the primary photo for the photoset. Declaration public string Server { get; set; } Property Value Type Description System.String | Improve this Doc View Source Title The title of the photoset. Declaration public string Title { get; set; } Property Value Type Description System.String | Improve this Doc View Source Url The URL of the photoset. Declaration public string Url { get; set; } Property Value Type Description System.String | Improve this Doc View Source ViewCount The number of times the photoset has been viewed. Declaration public int ViewCount { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.Place.html": {
    "href": "api/Flickr.Net.Core.Entities.Place.html",
    "title": "Class Place | Flickr.Net",
    "keywords": "Class Place Summary description for Place. Inheritance System.Object Place Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Place : IFlickrParsable Properties | Improve this Doc View Source Description The description of this place, where provided. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source Latitude The latitude of this place. Declaration public double Latitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Longitude The longitude of this place. Declaration public double Longitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source PhotoCount The number of photos the calling user has for this place. Declaration public int? PhotoCount { get; set; } Property Value Type Description System.Nullable < System.Int32 > Remarks Only returned for PlacesForUserAsync(PlaceType, String, String, Int32, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) . | Improve this Doc View Source PlaceId The unique id for this place. Declaration public string PlaceId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PlaceType The 'type' of this place, e.g. Region, Country etc. Declaration public PlaceType PlaceType { get; set; } Property Value Type Description PlaceType | Improve this Doc View Source PlaceUrl The web page URL that corresponds to this place. Declaration public string PlaceUrl { get; set; } Property Value Type Description System.String Remarks The 'URL' returned is only a sudo url such as '/Canada/Quebec/Montreal'. | Improve this Doc View Source TimeZone The timezone for the place. Declaration public string TimeZone { get; set; } Property Value Type Description System.String | Improve this Doc View Source WoeId The WOE id for the locality. Declaration public string WoeId { get; set; } Property Value Type Description System.String | Improve this Doc View Source WoeName The name of the WOE location. Declaration public string WoeName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PlaceId.html": {
    "href": "api/Flickr.Net.Core.Entities.PlaceId.html",
    "title": "Struct PlaceId | Flickr.Net",
    "keywords": "Struct PlaceId Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public readonly struct PlaceId Constructors | Improve this Doc View Source PlaceId(String) Declaration public PlaceId(string placeId) Parameters Type Name Description System.String placeId Methods | Improve this Doc View Source ToString() Declaration public override readonly string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Implicit(PlaceId to String) Declaration public static implicit operator string (PlaceId placeId) Parameters Type Name Description PlaceId placeId Returns Type Description System.String | Improve this Doc View Source Implicit(String to PlaceId) Declaration public static implicit operator PlaceId(string placeId) Parameters Type Name Description System.String placeId Returns Type Description PlaceId"
  },
  "api/Flickr.Net.Core.Entities.PlaceInfo.html": {
    "href": "api/Flickr.Net.Core.Entities.PlaceInfo.html",
    "title": "Class PlaceInfo | Flickr.Net",
    "keywords": "Class PlaceInfo Detailed information about a place. Returned by GetInfoAsync(PlaceId, CancellationToken) or GetInfoAsync(WoeId, CancellationToken) . Inheritance System.Object PlaceInfo Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PlaceInfo : IFlickrParsable Properties | Improve this Doc View Source Accuracy The accuracy of the location information, if this information is about a photo. Declaration public GeoAccuracy? Accuracy { get; set; } Property Value Type Description System.Nullable < GeoAccuracy > | Improve this Doc View Source Context The context of the location, if this information is about a photo. Declaration public GeoContext? Context { get; set; } Property Value Type Description System.Nullable < GeoContext > | Improve this Doc View Source Country Details of the place's country. May be null. Declaration public Place Country { get; set; } Property Value Type Description Place | Improve this Doc View Source County Details of the place's county. May be null. Declaration public Place County { get; set; } Property Value Type Description Place | Improve this Doc View Source Description The description of this place, where provided. Declaration public string Description { get; set; } Property Value Type Description System.String | Improve this Doc View Source HasShapeData Does this place have shape data for it. Declaration public bool HasShapeData { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Latitude The latitude of this place. Declaration public double Latitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Locality Details about the place's locality. May be null. Declaration public Place Locality { get; set; } Property Value Type Description Place | Improve this Doc View Source Longitude The longitude of this place. Declaration public double Longitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Neighbourhood The neighbourhood for this location. May be null. Declaration public Place Neighbourhood { get; set; } Property Value Type Description Place | Improve this Doc View Source PlaceFlickrUrl The URL to the place web page on Flickr. Declaration public string PlaceFlickrUrl { get; } Property Value Type Description System.String | Improve this Doc View Source PlaceId The unique id for this place. Declaration public string PlaceId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PlaceType The 'type' of this place, e.g. Region, Country etc. Declaration public PlaceType PlaceType { get; set; } Property Value Type Description PlaceType | Improve this Doc View Source PlaceUrl The web page URL that corresponds to this place. Declaration public string PlaceUrl { get; set; } Property Value Type Description System.String Remarks The 'URL' returned is only a sudo url such as '/Canada/Quebec/Montreal'. | Improve this Doc View Source Region Details of the place's region. May be null. Declaration public Place Region { get; set; } Property Value Type Description Place | Improve this Doc View Source ShapeData The shape data for this place. Only available for some places (see HasShapeData ). Declaration public ShapeData ShapeData { get; set; } Property Value Type Description ShapeData | Improve this Doc View Source TimeZone The timezone for the place. Declaration public string TimeZone { get; set; } Property Value Type Description System.String | Improve this Doc View Source WoeId The WOE id for the locality. Declaration public string WoeId { get; set; } Property Value Type Description System.String | Improve this Doc View Source WoeName The name of the WOE location. Declaration public string WoeName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PlaceTypeInfo.html": {
    "href": "api/Flickr.Net.Core.Entities.PlaceTypeInfo.html",
    "title": "Class PlaceTypeInfo | Flickr.Net",
    "keywords": "Class PlaceTypeInfo Information about the types of 'places' available from the Flickr API. Inheritance System.Object PlaceTypeInfo Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class PlaceTypeInfo : IFlickrParsable Remarks Use the PlaceInfo enumeration were possible. Properties | Improve this Doc View Source Id The unique ID for the blog service supported by Flickr. Declaration public int Id { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Name The name of the blog service supported by Flickr. Declaration public string Name { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.PointD.html": {
    "href": "api/Flickr.Net.Core.Entities.PointD.html",
    "title": "Struct PointD | Flickr.Net",
    "keywords": "Struct PointD A point structure for holding double-floating points precision data. Inherited Members System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public struct PointD Constructors | Improve this Doc View Source PointD(Double, Double) Default constructor. Declaration public PointD(double x, double y) Parameters Type Name Description System.Double x System.Double y Properties | Improve this Doc View Source X The X position of the point. Declaration public readonly double X { get; } Property Value Type Description System.Double | Improve this Doc View Source Y The Y position of the point. Declaration public readonly double Y { get; } Property Value Type Description System.Double Methods | Improve this Doc View Source Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description System.Object obj Returns Type Description System.Boolean Overrides System.ValueType.Equals(System.Object) | Improve this Doc View Source GetHashCode() Declaration public override int GetHashCode() Returns Type Description System.Int32 Overrides System.ValueType.GetHashCode() | Improve this Doc View Source ToString() Declaration public override string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Equality(PointD, PointD) For predefined value types, the equality operator (==) returns true if the values of its operands are equal, false otherwise. Declaration public static bool operator ==(PointD point1, PointD point2) Parameters Type Name Description PointD point1 PointD point2 Returns Type Description System.Boolean | Improve this Doc View Source Inequality(PointD, PointD) For predefined value types, the equality operator (!=) returns false if the values of its operands are equal, true otherwise. Declaration public static bool operator !=(PointD point1, PointD point2) Parameters Type Name Description PointD point1 PointD point2 Returns Type Description System.Boolean"
  },
  "api/Flickr.Net.Core.Entities.PopularPhoto.html": {
    "href": "api/Flickr.Net.Core.Entities.PopularPhoto.html",
    "title": "Class PopularPhoto | Flickr.Net",
    "keywords": "Class PopularPhoto Details about a popular photo, including the statistics for its views, comments and favourites for the date. Inheritance System.Object Photo PopularPhoto Implements IFlickrParsable Inherited Members Photo.Tags Photo.PhotoId Photo.UserId Photo.Secret Photo.Server Photo.Farm Photo.Title Photo.IsPublic Photo.IsFriend Photo.IsFamily Photo.License Photo.OriginalWidth Photo.OriginalHeight Photo.DateUploaded Photo.LastUpdated Photo.DateTaken Photo.DateTakenUnknown Photo.DateAddedToGroup Photo.DateFavorited Photo.OwnerName Photo.IconServer Photo.IconFarm Photo.OriginalFormat Photo.OriginalSecret Photo.MachineTags Photo.WebUrl Photo.SquareThumbnailUrl Photo.SquareThumbnailWidth Photo.SquareThumbnailHeight Photo.LargeSquareThumbnailUrl Photo.LargeSquareThumbnailWidth Photo.LargeSquareThumbnailHeight Photo.ThumbnailUrl Photo.ThumbnailWidth Photo.ThumbnailHeight Photo.SmallUrl Photo.SmallWidth Photo.SmallHeight Photo.Small320Url Photo.Small320Width Photo.Small320Height Photo.Medium640Url Photo.Medium640Width Photo.Medium640Height Photo.Medium800Url Photo.Medium800Width Photo.Medium800Height Photo.Large1600Url Photo.Large1600Width Photo.Large1600Height Photo.Large2048Url Photo.Large2048Width Photo.Large2048Height Photo.MediumUrl Photo.MediumWidth Photo.MediumHeight Photo.LargeUrl Photo.LargeWidth Photo.LargeHeight Photo.OriginalUrl Photo.Latitude Photo.Longitude Photo.PlaceId Photo.WoeId Photo.Accuracy Photo.GeoContext Photo.CanComment Photo.CanPrint Photo.CanDownload Photo.CanAddMeta Photo.CanBlog Photo.CanShare Photo.Views Photo.Media Photo.PathAlias Photo.MediaStatus Photo.Description Photo.GeoPermissions Photo.Rotation Photo.CountFaves Photo.CountComments Photo.DoesLargeExist Photo.DoesMediumExist Photo.Load(XmlReader, Boolean) Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class PopularPhoto : Photo Properties | Improve this Doc View Source StatComments The number of comments this photo has received in the context of the calling time period. Declaration public int StatComments { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StatFavorites The number of favorites this photo has received in the context of the calling time period. Declaration public int StatFavorites { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source StatViews The number of views this photo has received in the context of the calling time period. Declaration public int StatViews { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalComments The number of comments this photo has received in total. Declaration public int TotalComments { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalFavorites The number of favorites this photo has received in total. Declaration public int TotalFavorites { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalViews The number of views this photo has received in total. Declaration public int TotalViews { get; set; } Property Value Type Description System.Int32 Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.Predicate.html": {
    "href": "api/Flickr.Net.Core.Entities.Predicate.html",
    "title": "Class Predicate | Flickr.Net",
    "keywords": "Class Predicate A machine tag predicate. \"namespace:predicate=value\". Inheritance System.Object Predicate Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Predicate : IFlickrParsable Properties | Improve this Doc View Source Namespaces The number of distinct namespaces the predicate applies to. Declaration public int Namespaces { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PredicateName The name the predicate Declaration public string PredicateName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Usage The usage of the predicate. Declaration public int Usage { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.Profile.html": {
    "href": "api/Flickr.Net.Core.Entities.Profile.html",
    "title": "Class Profile | Flickr.Net",
    "keywords": "Class Profile A user's profile Inheritance System.Object Profile Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class Profile : IFlickrParsable Properties | Improve this Doc View Source City The city where the user lives, if set. Declaration public string City { get; } Property Value Type Description System.String | Improve this Doc View Source Country The country where the user lives, if set. Declaration public string Country { get; } Property Value Type Description System.String | Improve this Doc View Source Facebook Facebook username/url. Declaration public string Facebook { get; } Property Value Type Description System.String | Improve this Doc View Source FirstName The first name of this user. Declaration public string FirstName { get; } Property Value Type Description System.String | Improve this Doc View Source HomeTown Hometown of user, if set and visible. Declaration public string HomeTown { get; } Property Value Type Description System.String | Improve this Doc View Source Instagram Instagram url. Declaration public string Instagram { get; } Property Value Type Description System.String | Improve this Doc View Source JoinDate Date the user joined Flickr. Declaration public DateTime? JoinDate { get; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source LastName The last name of this user. Declaration public string LastName { get; } Property Value Type Description System.String | Improve this Doc View Source Occupation Occupation of user, if set. Declaration public string Occupation { get; } Property Value Type Description System.String | Improve this Doc View Source Pinterest PInterest url. Declaration public string Pinterest { get; } Property Value Type Description System.String | Improve this Doc View Source ProfileDescription The verbose text of this users profile description. Declaration public string ProfileDescription { get; } Property Value Type Description System.String | Improve this Doc View Source ShowcaseSet The photoset id of the showcase set for this user. Declaration public string ShowcaseSet { get; } Property Value Type Description System.String | Improve this Doc View Source ShowcaseSetTitle The title of the showcase set for this user. Declaration public string ShowcaseSetTitle { get; } Property Value Type Description System.String | Improve this Doc View Source Tumblr Tumblr url. Declaration public string Tumblr { get; } Property Value Type Description System.String | Improve this Doc View Source Twitter Twitter url. Declaration public string Twitter { get; } Property Value Type Description System.String | Improve this Doc View Source UserId The ID of the user. Declaration public string UserId { get; } Property Value Type Description System.String | Improve this Doc View Source WebSite The web site for this user, if set. Declaration public string WebSite { get; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.RawTag.html": {
    "href": "api/Flickr.Net.Core.Entities.RawTag.html",
    "title": "Class RawTag | Flickr.Net",
    "keywords": "Class RawTag Raw tags, as returned by the GetListUserRawAsync(String, CancellationToken) method. Inheritance System.Object RawTag Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class RawTag : IFlickrParsable Constructors | Improve this Doc View Source RawTag() Default constructor. Declaration public RawTag() Properties | Improve this Doc View Source CleanTag The clean tag. Declaration public string CleanTag { get; set; } Property Value Type Description System.String | Improve this Doc View Source RawTags An array of strings containing the raw tags returned by the method. Declaration public Collection<string> RawTags { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < System.String >"
  },
  "api/Flickr.Net.Core.Entities.RawTagCollection.html": {
    "href": "api/Flickr.Net.Core.Entities.RawTagCollection.html",
    "title": "Class RawTagCollection | Flickr.Net",
    "keywords": "Class RawTagCollection List containing RawTag items. Inheritance System.Object RawTagCollection Implements IFlickrParsable Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class RawTagCollection : Collection<RawTag> Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Entities.ShapeData.html": {
    "href": "api/Flickr.Net.Core.Entities.ShapeData.html",
    "title": "Class ShapeData | Flickr.Net",
    "keywords": "Class ShapeData The shape data supplied by GetInfoAsync(PlaceId, CancellationToken) or GetInfoAsync(WoeId, CancellationToken) . Inheritance System.Object ShapeData Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class ShapeData : IFlickrParsable Remarks See http://code.flickr.com/blog/2008/10/30/the-shape-of-alpha/ for more details. Constructors | Improve this Doc View Source ShapeData() Default constructor. Declaration public ShapeData() Properties | Improve this Doc View Source Alpha The alpha for the shape data. Declaration public double Alpha { get; set; } Property Value Type Description System.Double | Improve this Doc View Source DateCreated The date the shapedata was created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source EdgeCount The number of edge in the shapefile. Declaration public int EdgeCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source HasDonutHole Does the shape have a donut hole. Declaration public bool HasDonutHole { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsDonutHole Is the shape a donut hole. Declaration public bool IsDonutHole { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PointCount The number of points in the shapefile. Declaration public int PointCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PolyLines A list of polylines making up the shape. Each polyline is itself a list of points. Declaration public Collection<Collection<PointD>> PolyLines { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < Flickr.Net.Core.Entities.Collection < PointD >> | Improve this Doc View Source Urls A list of urls for the shapefiles. Declaration public Collection<string> Urls { get; set; } Property Value Type Description Flickr.Net.Core.Entities.Collection < System.String >"
  },
  "api/Flickr.Net.Core.Entities.Size.html": {
    "href": "api/Flickr.Net.Core.Entities.Size.html",
    "title": "Class Size | Flickr.Net",
    "keywords": "Class Size Contains details about all the sizes available for a given photograph. Inheritance System.Object Size Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Size : IFlickrParsable Properties | Improve this Doc View Source Height The height of the resulting image, in pixels Declaration public int Height { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Label The label for the size, such as \"Thumbnail\", \"Small\", \"Medium\", \"Large\" and \"Original\". Declaration public string Label { get; set; } Property Value Type Description System.String | Improve this Doc View Source MediaType The media type of this size. Declaration public MediaType MediaType { get; set; } Property Value Type Description MediaType | Improve this Doc View Source Source The source url of the image. Declaration public string Source { get; set; } Property Value Type Description System.String | Improve this Doc View Source Url The url to the photographs web page for this particular size. Declaration public string Url { get; set; } Property Value Type Description System.String | Improve this Doc View Source Width The width of the resulting image, in pixels Declaration public int Width { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.StatDomain.html": {
    "href": "api/Flickr.Net.Core.Entities.StatDomain.html",
    "title": "Class StatDomain | Flickr.Net",
    "keywords": "Class StatDomain The details of a referring domain. Used in the Flickr Stats API. Inheritance System.Object StatDomain Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class StatDomain : IFlickrParsable Properties | Improve this Doc View Source Name The name of the referring domain. Declaration public string Name { get; set; } Property Value Type Description System.String | Improve this Doc View Source Views The number of views from this domain. Declaration public int Views { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.StatReferrer.html": {
    "href": "api/Flickr.Net.Core.Entities.StatReferrer.html",
    "title": "Class StatReferrer | Flickr.Net",
    "keywords": "Class StatReferrer The referrer details returned by GetCollectionReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) , GetPhotoReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) , GetPhotosetReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) and GetPhotostreamReferrersAsync(DateTime, String, Int32, Int32, CancellationToken) . Inheritance System.Object StatReferrer Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class StatReferrer : IFlickrParsable Properties | Improve this Doc View Source SearchTerm Then the referrer is a search engine this will contain the search term used. Declaration public string SearchTerm { get; set; } Property Value Type Description System.String | Improve this Doc View Source Url The url that the referrer referred from. Declaration public string Url { get; set; } Property Value Type Description System.String | Improve this Doc View Source Views The number of times that URL was referred from. Declaration public int Views { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.Stats.html": {
    "href": "api/Flickr.Net.Core.Entities.Stats.html",
    "title": "Class Stats | Flickr.Net",
    "keywords": "Class Stats The stats returned by GetPhotoStatsAsync(DateTime, String, CancellationToken) , GetPhotostreamStatsAsync(DateTime, CancellationToken) , GetPhotosetStatsAsync(DateTime, String, CancellationToken) and GetCollectionStatsAsync(DateTime, String, CancellationToken) Inheritance System.Object Stats Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Stats : IFlickrParsable Properties | Improve this Doc View Source Comments The number of comments the object in question has had (either Photo or Photoset). Declaration public int Comments { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Favorites The number of favorites the object in question has had (Photo only). Declaration public int Favorites { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Views The number of views the object in question has had (either Photostream, Collection, Photo or Photoset). Declaration public int Views { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.StatViews.html": {
    "href": "api/Flickr.Net.Core.Entities.StatViews.html",
    "title": "Class StatViews | Flickr.Net",
    "keywords": "Class StatViews The number of views of each type that a users account has had for a given date (or overall if no date specified). Inheritance System.Object StatViews Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class StatViews : IFlickrParsable Remarks Used by GetTotalViewsAsync(DateTime, CancellationToken) . Properties | Improve this Doc View Source CollectionViews The number of collection views. Declaration public int CollectionViews { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source GalleryViews The number of gallery views. Declaration public int GalleryViews { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PhotosetViews The number of photoset views. Declaration public int PhotosetViews { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PhotostreamViews The number of photostream views. Declaration public int PhotostreamViews { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PhotoViews The number of individual photo views. Declaration public int PhotoViews { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TotalViews The total number of views for this account. Declaration public int TotalViews { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.SubCategory.html": {
    "href": "api/Flickr.Net.Core.Entities.SubCategory.html",
    "title": "Class SubCategory | Flickr.Net",
    "keywords": "Class SubCategory Holds details of a sub category, including its id, name and the number of groups in it. Inheritance System.Object SubCategory Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class SubCategory : IFlickrParsable Properties | Improve this Doc View Source GroupCount The number of groups found within the category. Declaration public int GroupCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source SubcategoryId The id of the category. Declaration public string SubcategoryId { get; set; } Property Value Type Description System.String | Improve this Doc View Source SubcategoryName The name of the category. Declaration public string SubcategoryName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Subscription.html": {
    "href": "api/Flickr.Net.Core.Entities.Subscription.html",
    "title": "Class Subscription | Flickr.Net",
    "keywords": "Class Subscription Details of a push subscription. Inheritance System.Object Subscription Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Subscription : IFlickrParsable Properties | Improve this Doc View Source Callback The callback URL that the subscription is sending to. Declaration public string Callback { get; set; } Property Value Type Description System.String | Improve this Doc View Source DateCreated The date the subscription was created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Expiry The date the subscription will expire. Declaration public DateTime Expiry { get; set; } Property Value Type Description DateTime | Improve this Doc View Source IsPending True if the subscription has not yet been verified. Declaration public bool IsPending { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LeaseSeconds The number of seconds the subscription is valid for. Declaration public int LeaseSeconds { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Topic The topic the subscription is listening to. Declaration public string Topic { get; set; } Property Value Type Description System.String | Improve this Doc View Source VerifyAttempts If pending and async then the number of times that verification has been attempted. Declaration public int VerifyAttempts { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.Suggestion.html": {
    "href": "api/Flickr.Net.Core.Entities.Suggestion.html",
    "title": "Class Suggestion | Flickr.Net",
    "keywords": "Class Suggestion A suggestion for the correct location for a particular photo. Inheritance System.Object Suggestion Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Suggestion : IFlickrParsable Remarks There is currently no UI support for this feature in Flickr. Properties | Improve this Doc View Source Accuracy The geo accuracy of the location suggestion. Declaration public GeoAccuracy Accuracy { get; set; } Property Value Type Description GeoAccuracy | Improve this Doc View Source DateSuggested The date the location was suggested. Declaration public DateTime DateSuggested { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Latitude The latitude of the location suggestion. Declaration public double Latitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Longitude The longitude of the location suggestion. Declaration public double Longitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source Note The note (if any) that the user added to the suggestion. Declaration public string Note { get; set; } Property Value Type Description System.String | Improve this Doc View Source PhotoId The id for the photo this suggestion applies to. Declaration public string PhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PlaceId The place id for the location, if any. Declaration public string PlaceId { get; set; } Property Value Type Description System.String | Improve this Doc View Source SuggestedByUserId The user id of the user who suggested the location. Declaration public string SuggestedByUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source SuggestedByUserName The name of the user who suggested the location. Declaration public string SuggestedByUserName { get; set; } Property Value Type Description System.String | Improve this Doc View Source SuggestionId The id for the suggestion. Declaration public string SuggestionId { get; set; } Property Value Type Description System.String | Improve this Doc View Source WoeId The WOE id for the location, if any. Declaration public string WoeId { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Tag.html": {
    "href": "api/Flickr.Net.Core.Entities.Tag.html",
    "title": "Class Tag | Flickr.Net",
    "keywords": "Class Tag A simple tag class, containing a tag name and optional count (for GetListUserPopularAsync(String, Nullable<Int32>, CancellationToken) ) Inheritance System.Object Tag Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Tag : IFlickrParsable Properties | Improve this Doc View Source Count The poularity of the tag. Will be 0 if not returned via GetListUserPopularAsync(String, Nullable<Int32>, CancellationToken) Declaration public int Count { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source TagName The name of the tag. Declaration public string TagName { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Ticket.html": {
    "href": "api/Flickr.Net.Core.Entities.Ticket.html",
    "title": "Class Ticket | Flickr.Net",
    "keywords": "Class Ticket The status of an upload ticket. Inheritance System.Object Ticket Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Ticket : IFlickrParsable Properties | Improve this Doc View Source CompleteStatus The status of a valid ticket. 0 = Incomplete, 1 = Complete, 2 = Error processing the image/video. Declaration public int CompleteStatus { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source InvalidTicketId Is the ticket ID supplied a valid ticket. True if it is invalid. Declaration public bool InvalidTicketId { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PhotoId If the ticket is complete then this contains the photo ID of the uploaded photo. Declaration public string PhotoId { get; set; } Property Value Type Description System.String | Improve this Doc View Source TicketId The ID of the ticket asked for. Declaration public string TicketId { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.Topic.html": {
    "href": "api/Flickr.Net.Core.Entities.Topic.html",
    "title": "Class Topic | Flickr.Net",
    "keywords": "Class Topic Details of a topic Inheritance System.Object Topic Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class Topic : IFlickrParsable Properties | Improve this Doc View Source AuthorBuddyIcon The url for the buddy icon for the author of this topic. Declaration public string AuthorBuddyIcon { get; } Property Value Type Description System.String | Improve this Doc View Source AuthorIconFarm The farm for the author's buddy icon. Declaration public string AuthorIconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorIconServer The server for the author's buddy icon. Declaration public string AuthorIconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorIsDeleted Has the author of this post been deleted? Declaration public bool? AuthorIsDeleted { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source AuthorIsPro True if the author of the topic has a pro account. Declaration public bool AuthorIsPro { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AuthorName The user name of the author of the topic. Declaration public string AuthorName { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorPathAlias The path alias for the author of this topic. Declaration public string AuthorPathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorRole The role within the group of the author of the topic. Declaration public MemberTypes AuthorRole { get; set; } Property Value Type Description MemberTypes | Improve this Doc View Source AuthorUserId The user id of the author of the topic. Declaration public string AuthorUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source CanDelete Can the calling user delete this topic. Declaration public bool CanDelete { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanEdit Can the calling user edit this topic. Declaration public bool CanEdit { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanReply Can the calling user reply to this topic. Flickr currently returns False in all instances, so do not rely on this issue. Declaration public bool CanReply { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DateCreated Date the topic was created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateLastEdited What was the last edit date of this post (if null then it has not been edited) Declaration public DateTime? DateLastEdited { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source DateLastPost Date the last reply was made to this property. Declaration public DateTime DateLastPost { get; set; } Property Value Type Description DateTime | Improve this Doc View Source GroupId The id of the group this topic belongs to. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source IsLocked Is the topic marked as locked. Declaration public bool IsLocked { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsSticky Is the topic marked as sticky. Declaration public bool IsSticky { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source LastReplyId The id of the last reply to this topic. Declaration public string LastReplyId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Message The message content of this topic. Declaration public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source RepliesCount The number of replies for this topic. Declaration public int RepliesCount { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Subject The subject line of the topic. Declaration public string Subject { get; set; } Property Value Type Description System.String | Improve this Doc View Source TopicId The ID for the topic Declaration public string TopicId { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.TopicReply.html": {
    "href": "api/Flickr.Net.Core.Entities.TopicReply.html",
    "title": "Class TopicReply | Flickr.Net",
    "keywords": "Class TopicReply A reply to a topic. Inheritance System.Object TopicReply Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public class TopicReply : IFlickrParsable Properties | Improve this Doc View Source AuthorBuddyIcon The buddy icon for the author of the reply. Declaration public string AuthorBuddyIcon { get; } Property Value Type Description System.String | Improve this Doc View Source AuthorIconFarm The farm for the reply author's buddy icon. Declaration public string AuthorIconFarm { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorIconServer The server for the reply author's buddy icon. Declaration public string AuthorIconServer { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorIsDeleted Has the author of this topic been deleted Declaration public bool? AuthorIsDeleted { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source AuthorIsPro True if the author of the reply has a pro account. Declaration public bool AuthorIsPro { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source AuthorName The username of the author of the reply. Declaration public string AuthorName { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorPathAlias THe path alias for the author, if set. Declaration public string AuthorPathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source AuthorRole The role within the group of the reply author. Declaration public MemberTypes AuthorRole { get; set; } Property Value Type Description MemberTypes | Improve this Doc View Source AuthorUserId The id of the author of the reply. Declaration public string AuthorUserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source CanDelete Can the calling user delete the reply. Declaration public bool CanDelete { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source CanEdit Can the calling user edit the reply. Declaration public bool CanEdit { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source DateCreated The date the reply was created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime | Improve this Doc View Source DateLastEdited The date the reply was last edited. Declaration public DateTime DateLastEdited { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Message The message contents of the reply. Declaration public string Message { get; set; } Property Value Type Description System.String | Improve this Doc View Source ReplyId The id of the reply. Declaration public string ReplyId { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.UnknownResponse.html": {
    "href": "api/Flickr.Net.Core.Entities.UnknownResponse.html",
    "title": "Class UnknownResponse | Flickr.Net",
    "keywords": "Class UnknownResponse Contains the raw response from Flickr when an unknown method has been called. Used by EchoAsync(Dictionary<String, String>, CancellationToken) . Inheritance System.Object UnknownResponse Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class UnknownResponse : IFlickrParsable Properties | Improve this Doc View Source ResponseXml The response from Flickr. Declaration public string ResponseXml { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source GetAttributeValue(String, String) Gets an attribute value from the given response. Declaration public string GetAttributeValue(string element, string attribute) Parameters Type Name Description System.String element The element name to find. System.String attribute The attribute of the element to return. Returns Type Description System.String The string value of the given attribute, if found. | Improve this Doc View Source GetElementArray(String) Gets an array of text values of an element from the given response. Declaration public string[] GetElementArray(string elementName) Parameters Type Name Description System.String elementName The element name to find. Returns Type Description System.String [] An array of string values. | Improve this Doc View Source GetElementArray(String, String) Gets an array of text values of an element's attribute from the given response. Declaration public string[] GetElementArray(string elementName, string attributeName) Parameters Type Name Description System.String elementName The element name to find. System.String attributeName The attribute name to find on the matching element. Returns Type Description System.String [] An array of string values. | Improve this Doc View Source GetElementValue(String) Gets an text value of an element from the given response. Declaration public string GetElementValue(string element) Parameters Type Name Description System.String element The element name to find. Returns Type Description System.String The string value of the given element, if found. | Improve this Doc View Source GetXmlDocument() Gets a containing the response XML. Declaration public XmlDocument GetXmlDocument() Returns Type Description XmlDocument"
  },
  "api/Flickr.Net.Core.Entities.UserGeoPermissions.html": {
    "href": "api/Flickr.Net.Core.Entities.UserGeoPermissions.html",
    "title": "Class UserGeoPermissions | Flickr.Net",
    "keywords": "Class UserGeoPermissions The default privacy level for geographic information attached to the user's photos and whether or not the user has chosen to use geo-related EXIF information to automatically geotag their photos. Inheritance System.Object UserGeoPermissions Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class UserGeoPermissions : IFlickrParsable Properties | Improve this Doc View Source GeoPermissions The default privacy level for geographic information attached to the user's photos. Declaration public GeoPermissionType GeoPermissions { get; set; } Property Value Type Description GeoPermissionType | Improve this Doc View Source ImportGeoExif Whether or not the user has chosen to use geo-related EXIF information to automatically geotag their photos. Declaration public bool ImportGeoExif { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source UserId The ID of the user. Declaration public string UserId { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.UserStatus.html": {
    "href": "api/Flickr.Net.Core.Entities.UserStatus.html",
    "title": "Class UserStatus | Flickr.Net",
    "keywords": "Class UserStatus The upload status of the user, as returned by GetUploadStatusAsync(CancellationToken) . Inheritance System.Object UserStatus Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class UserStatus : IFlickrParsable Properties | Improve this Doc View Source BandwidthMax The maximum bandwidth (in bytes) that the user can use each month. Declaration public long BandwidthMax { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source BandwidthMaxKB The maximum bandwidth (in kilobytes) that the user can use each month. Declaration public long BandwidthMaxKB { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source BandwidthRemaining The remaining bandwidth (in bytes) that the user can use this month. Declaration public long BandwidthRemaining { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source BandwidthRemainingKB The remaining bandwidth (in kilobytes) that the user can use this month. Declaration public long BandwidthRemainingKB { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source BandwidthUsed The number of bytes of the current months bandwidth that the user has used. Declaration public long BandwidthUsed { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source BandwidthUsedKB The number of kilobytes of the current months bandwidth that the user has used. Declaration public long BandwidthUsedKB { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source FileSizeMax The maximum filesize (in bytes) that the user is allowed to upload. Declaration public long FileSizeMax { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source FileSizeMaxKB The maximum filesize (in kilobytes) that the user is allowed to upload. Declaration public long FileSizeMaxKB { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source FileSizeMaxMB The maximum filesize (in MB) that the user is allowed to upload. Declaration public long FileSizeMaxMB { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source IsPro Is the current user a Pro account. Declaration public bool IsPro { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsUnlimited Is the upload bandwidth unlimited (i.e. a Pro user). Declaration public bool IsUnlimited { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source PercentageUsed System.Double representing the percentage bandwidth used so far. Will range from 0 to 1. Declaration public double PercentageUsed { get; } Property Value Type Description System.Double | Improve this Doc View Source SetsCreated The number of sets the user has created. Will be null for Pro users. Declaration public int? SetsCreated { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source SetsRemaining The number of sets the user can still created. Will be null for Pro users. Declaration public int? SetsRemaining { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source UserId The id of the user object. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserName The Username of the selected user. Declaration public string UserName { get; set; } Property Value Type Description System.String | Improve this Doc View Source VideoSizeMax The maximum filesize (in bytes) that the user is allowed to upload. Declaration public long VideoSizeMax { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source VideoSizeMaxKB The maximum filesize (in kilobytes) that the user is allowed to upload. Declaration public long VideoSizeMaxKB { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source VideoSizeMaxMB The maximum filesize (in MB) that the user is allowed to upload. Declaration public long VideoSizeMaxMB { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source VideosRemaining The number of videos the user can upload. Will be null for Pro users. Declaration public int? VideosRemaining { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source VideosUploaded The number of videos the user has uploaded. Will be null or zero for Pro users. Declaration public int? VideosUploaded { get; set; } Property Value Type Description System.Nullable < System.Int32 >"
  },
  "api/Flickr.Net.Core.Entities.Value.html": {
    "href": "api/Flickr.Net.Core.Entities.Value.html",
    "title": "Class Value | Flickr.Net",
    "keywords": "Class Value A machine tag value and its usage. Inheritance System.Object Value Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class Value : IFlickrParsable Properties | Improve this Doc View Source DateFirstAdded The date this machine tag was first used. Declaration public DateTime? DateFirstAdded { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source DateLastUsed The date this machine tag was last added. Declaration public DateTime? DateLastUsed { get; set; } Property Value Type Description System.Nullable < DateTime > | Improve this Doc View Source MachineTag The full machine tag for this value. Declaration public string MachineTag { get; } Property Value Type Description System.String | Improve this Doc View Source NamespaceName The namespace for this value. Declaration public string NamespaceName { get; set; } Property Value Type Description System.String | Improve this Doc View Source PredicateName The predicate name for this value. Declaration public string PredicateName { get; set; } Property Value Type Description System.String | Improve this Doc View Source Usage The usage of this machine tag value. Declaration public int Usage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ValueText The text of this value. Declaration public string ValueText { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Entities.VideoInfo.html": {
    "href": "api/Flickr.Net.Core.Entities.VideoInfo.html",
    "title": "Class VideoInfo | Flickr.Net",
    "keywords": "Class VideoInfo Information about a video, as returned by VideoInfo . Inheritance System.Object VideoInfo Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public sealed class VideoInfo : IFlickrParsable Properties | Improve this Doc View Source Duration The duration of the video, in seconds. Declaration public int Duration { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Failed True or false depending on if processing of the video succeeded or not. Declaration public bool Failed { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Height The height of the video. Declaration public int Height { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Pending True or false depending on if the processing of the video is pending or not. Declaration public bool Pending { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Ready True or false if the video is ready to be displayed. Declaration public bool Ready { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Width The width of the video. Declaration public int Width { get; set; } Property Value Type Description System.Int32"
  },
  "api/Flickr.Net.Core.Entities.WoeId.html": {
    "href": "api/Flickr.Net.Core.Entities.WoeId.html",
    "title": "Struct WoeId | Flickr.Net",
    "keywords": "Struct WoeId Inherited Members System.ValueType.Equals(System.Object) System.ValueType.GetHashCode() System.Object.Equals(System.Object, System.Object) System.Object.GetType() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Flickr.Net.Core.Entities Assembly : Flickr.Net.Core.dll Syntax public readonly struct WoeId Constructors | Improve this Doc View Source WoeId(String) Declaration public WoeId(string woeId) Parameters Type Name Description System.String woeId Methods | Improve this Doc View Source ToString() Declaration public override readonly string ToString() Returns Type Description System.String Overrides System.ValueType.ToString() Operators | Improve this Doc View Source Implicit(WoeId to String) Declaration public static implicit operator string (WoeId woeId) Parameters Type Name Description WoeId woeId Returns Type Description System.String | Improve this Doc View Source Implicit(String to WoeId) Declaration public static implicit operator WoeId(string woeId) Parameters Type Name Description System.String woeId Returns Type Description WoeId"
  },
  "api/Flickr.Net.Core.Enums.ActivityEventType.html": {
    "href": "api/Flickr.Net.Core.Enums.ActivityEventType.html",
    "title": "Enum ActivityEventType | Flickr.Net",
    "keywords": "Enum ActivityEventType The type of the . Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum ActivityEventType Fields Name Description Comment The event was a comment. Favorite The event is a favourite. Gallery The event is for a gallery. GroupInvite The event is a group invite. Note The event was a note. Tag The event is a tag being added to a item. Unknown The event type was not specified, or was a new unsupported type."
  },
  "api/Flickr.Net.Core.Enums.ActivityItemType.html": {
    "href": "api/Flickr.Net.Core.Enums.ActivityItemType.html",
    "title": "Enum ActivityItemType | Flickr.Net",
    "keywords": "Enum ActivityItemType The type of the . Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum ActivityItemType Fields Name Description Gallery The activity item is on a gallery. Photo The activitiy item is on a photo. Photoset The activity item is on a photoset. Unknown The type is unknown, either not set of a new unsupported type."
  },
  "api/Flickr.Net.Core.Enums.AuthLevel.html": {
    "href": "api/Flickr.Net.Core.Enums.AuthLevel.html",
    "title": "Enum AuthLevel | Flickr.Net",
    "keywords": "Enum AuthLevel Used to specify the authentication levels needed for the Auth methods. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum AuthLevel Fields Name Description Delete Read, write and delete access is required by your application. Deleting does not mean just the ability to delete photos, but also other meta data such as tags. None No access required - do not use this value! Read Read only access is required by your application. Write Read and write access is required by your application."
  },
  "api/Flickr.Net.Core.Enums.ContactSearch.html": {
    "href": "api/Flickr.Net.Core.Enums.ContactSearch.html",
    "title": "Enum ContactSearch | Flickr.Net",
    "keywords": "Enum ContactSearch Allows you to perform a search on a users contacts. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum ContactSearch Fields Name Description AllContacts Perform a search on all a users contacts. FriendsAndFamilyOnly Perform a search on only a users friends and family contacts. None Do not perform a contact search."
  },
  "api/Flickr.Net.Core.Enums.ContactType.html": {
    "href": "api/Flickr.Net.Core.Enums.ContactType.html",
    "title": "Enum ContactType | Flickr.Net",
    "keywords": "Enum ContactType The contact type. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum ContactType Fields Name Description Both TBD Famliy TBD Friends TBD Neither TBD None TBD"
  },
  "api/Flickr.Net.Core.Enums.ContentType.html": {
    "href": "api/Flickr.Net.Core.Enums.ContentType.html",
    "title": "Enum ContentType | Flickr.Net",
    "keywords": "Enum ContentType What type of content is the upload representing. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum ContentType Fields Name Description None No content type specified. Other For other uploads, such as artwork. Photo For normal photographs. Screenshot For screenshots."
  },
  "api/Flickr.Net.Core.Enums.ContentTypeSearch.html": {
    "href": "api/Flickr.Net.Core.Enums.ContentTypeSearch.html",
    "title": "Enum ContentTypeSearch | Flickr.Net",
    "keywords": "Enum ContentTypeSearch The values for a content type search. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum ContentTypeSearch Fields Name Description All Search for anything (default) None No content type specified. OtherOnly For other uploads, such as artwork. PhotosAndOthers Search for photos and other things PhotosAndScreenshots Search for photos and screenshots PhotosOnly For normal photographs. ScreenshotsAndOthers Search for screenshots and others ScreenshotsOnly For screenshots."
  },
  "api/Flickr.Net.Core.Enums.DateGranularity.html": {
    "href": "api/Flickr.Net.Core.Enums.DateGranularity.html",
    "title": "Enum DateGranularity | Flickr.Net",
    "keywords": "Enum DateGranularity DateGranularity, used for setting taken date in . Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum DateGranularity Fields Name Description Circa The date is an approximation only and only the year is likely to be supplied. FullDate The date specified is the exact date the photograph was taken. YearMonthOnly The date specified is the year and month the photograph was taken. YearOnly The date specified is the year the photograph was taken."
  },
  "api/Flickr.Net.Core.Enums.GeoAccuracy.html": {
    "href": "api/Flickr.Net.Core.Enums.GeoAccuracy.html",
    "title": "Enum GeoAccuracy | Flickr.Net",
    "keywords": "Enum GeoAccuracy Geo-taggin accuracy. Used in Accuracy and . Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum GeoAccuracy Remarks Level descriptions are only approximate. Fields Name Description City Level 11 - approximately City level Country Level 3 - approximately Country level. Level10 Level 10 Level12 Level 12 Level13 Level 13 Level14 Level 14 Level15 Level 15 Level2 Level 2 Level4 Level 4 Level5 Level 5 Level7 Level 7 Level8 Level 8 Level9 Level 9 None No accuracy level specified. Region Level 6 - approximately Region level Street Street level (16) - the most accurate level and the default. World World level, level 1."
  },
  "api/Flickr.Net.Core.Enums.GeoContext.html": {
    "href": "api/Flickr.Net.Core.Enums.GeoContext.html",
    "title": "Enum GeoContext | Flickr.Net",
    "keywords": "Enum GeoContext The context to set a geotagged photo as. Used by . Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum GeoContext Fields Name Description Indoors The photo was taken indoors. NotDefined The photo has no defined context. Outdoors The photo was taken outdoors."
  },
  "api/Flickr.Net.Core.Enums.GeoPermissionType.html": {
    "href": "api/Flickr.Net.Core.Enums.GeoPermissionType.html",
    "title": "Enum GeoPermissionType | Flickr.Net",
    "keywords": "Enum GeoPermissionType The default privacy level for geographic information attached to the user's photos. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum GeoPermissionType Fields Name Description ContactsOnly Only contacts can see the geographic information. FamilyOnly Only Family can see the geographic information. FriendsAndFamilyOnly Only Friends and Family can see the geographic information. FriendsOnly Only Friends can see the geographic information. None No default set. Private Only you can see the geographic information. Public Anyone can see the geographic information."
  },
  "api/Flickr.Net.Core.Enums.GroupThrottleMode.html": {
    "href": "api/Flickr.Net.Core.Enums.GroupThrottleMode.html",
    "title": "Enum GroupThrottleMode | Flickr.Net",
    "keywords": "Enum GroupThrottleMode The posting limit most for a group. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum GroupThrottleMode Fields Name Description Disabled Posting is disabled to this group. Ever Posting limit is total number of photos in the group. NoLimit No posting limit. PerDay Per day posting limit. PerMonth Per month posting limit. PerWeek Per week posting limit."
  },
  "api/Flickr.Net.Core.Enums.HiddenFromSearch.html": {
    "href": "api/Flickr.Net.Core.Enums.HiddenFromSearch.html",
    "title": "Enum HiddenFromSearch | Flickr.Net",
    "keywords": "Enum HiddenFromSearch Determines weither the photo is visible in public searches. The default is 1, Visible. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum HiddenFromSearch Fields Name Description Hidden photo is hidden from public searches. None No preference specified, defaults to your preferences on Flickr. Visible Photo is visible to public searches."
  },
  "api/Flickr.Net.Core.Enums.html": {
    "href": "api/Flickr.Net.Core.Enums.html",
    "title": "Namespace Flickr.Net.Core.Enums | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Enums Enums ActivityEventType The type of the . ActivityItemType The type of the . AuthLevel Used to specify the authentication levels needed for the Auth methods. ContactSearch Allows you to perform a search on a users contacts. ContactType The contact type. ContentType What type of content is the upload representing. ContentTypeSearch The values for a content type search. DateGranularity DateGranularity, used for setting taken date in . GeoAccuracy Geo-taggin accuracy. Used in Accuracy and . GeoContext The context to set a geotagged photo as. Used by . GeoPermissionType The default privacy level for geographic information attached to the user's photos. GroupThrottleMode The posting limit most for a group. HiddenFromSearch Determines weither the photo is visible in public searches. The default is 1, Visible. LicenseType A enumeration containing the list of current license types. MachineTagMode Used to specify where all tags must be matched or any tag to be matched. MediaType An enumeration of different media types tto search for. MemberTypes The type of a member. Passed as a parameter to and returned for each Member as well. MethodPermission An enumeration listing the permission levels required for calling the Flickr API methods. PermissionAddMeta An enumeration defining who can add meta data (tags and notes). PermissionComment An enumeration defining who can add comments. PhotoSearchExtras Which photo search extras to be included. Can be combined to include more than one value. PhotoSearchSortOrder The sort order for the SearchAsync(PhotoSearchOptions, CancellationToken) , GetWithGeoDataAsync(PartialSearchOptions, CancellationToken) , GetWithoutGeoDataAsync(PartialSearchOptions, CancellationToken) methods. PlaceType Used by . PoolPrivacy The various pricay settings for a group. PopularitySort Sorting used for PopularSorting The popular sorting. PrivacyFilter When searching for photos you can filter on the privacy of the photos. RadiusUnit The units of a radius search SafetyLevel Safety level of the photographic image. Style An enumeration of photo styles. SuggestionStatus The status of a location suggestion. SupportedService A list of service the Flickr.Net API Supports. TagMode Used to specify where all tags must be matched or any tag to be matched. TimeType The time type."
  },
  "api/Flickr.Net.Core.Enums.LicenseType.html": {
    "href": "api/Flickr.Net.Core.Enums.LicenseType.html",
    "title": "Enum LicenseType | Flickr.Net",
    "keywords": "Enum LicenseType A enumeration containing the list of current license types. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum LicenseType Fields Name Description AllRightsReserved All Rights Reserved. AttributionCC Creative Commons: Attribution License. AttributionNoDerivativesCC Creative Commons: Attribution No Derivatives License. AttributionNoncommercialCC Creative Commons: Attribution Non-Commercial License. AttributionNoncommercialNoDerivativesCC Creative Commons: Attribution Non-Commercial, No Derivatives License. AttributionNoncommercialShareAlikeCC Creative Commons: Attribution Non-Commercial, Share-alike License. AttributionShareAlikeCC Creative Commons: Attribution Share-alike License. NoKnownCopyrightRestrictions No Known Copyright Resitrctions (Flickr Commons). PublicDomainDedicationCC0 Public Domain Dedication, CC0 PublicDomainMark Public Domain Mark UnitedStatesGovernmentWork United States Government Work"
  },
  "api/Flickr.Net.Core.Enums.MachineTagMode.html": {
    "href": "api/Flickr.Net.Core.Enums.MachineTagMode.html",
    "title": "Enum MachineTagMode | Flickr.Net",
    "keywords": "Enum MachineTagMode Used to specify where all tags must be matched or any tag to be matched. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum MachineTagMode Fields Name Description AllTags All tags must be found. AnyTag Any tag must match, but not all. None No tag mode specified."
  },
  "api/Flickr.Net.Core.Enums.MediaType.html": {
    "href": "api/Flickr.Net.Core.Enums.MediaType.html",
    "title": "Enum MediaType | Flickr.Net",
    "keywords": "Enum MediaType An enumeration of different media types tto search for. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum MediaType Fields Name Description All All media types will be return. None Default MediaType. Does not correspond to a value that is sent to Flickr. Photos Only photos will be returned. Videos Only videos will be returned."
  },
  "api/Flickr.Net.Core.Enums.MemberTypes.html": {
    "href": "api/Flickr.Net.Core.Enums.MemberTypes.html",
    "title": "Enum MemberTypes | Flickr.Net",
    "keywords": "Enum MemberTypes The type of a member. Passed as a parameter to and returned for each Member as well. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum MemberTypes Fields Name Description Admin A group adminstrator. Member A basic member. Moderator A group moderator. Narwhal Some strange kind of super-admin. Unsupported by the API. None No member type has been specified (all should be returned)."
  },
  "api/Flickr.Net.Core.Enums.MethodPermission.html": {
    "href": "api/Flickr.Net.Core.Enums.MethodPermission.html",
    "title": "Enum MethodPermission | Flickr.Net",
    "keywords": "Enum MethodPermission An enumeration listing the permission levels required for calling the Flickr API methods. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum MethodPermission Fields Name Description None No permissions required. Read A minimum of 'read' permissions required. Write A minimum of 'write' permissions required."
  },
  "api/Flickr.Net.Core.Enums.PermissionAddMeta.html": {
    "href": "api/Flickr.Net.Core.Enums.PermissionAddMeta.html",
    "title": "Enum PermissionAddMeta | Flickr.Net",
    "keywords": "Enum PermissionAddMeta An enumeration defining who can add meta data (tags and notes). Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum PermissionAddMeta Fields Name Description Contacts All contacts. Everybody All Flickr users. FriendsAndFamily Friends and family only. Owner The owner of the photo only."
  },
  "api/Flickr.Net.Core.Enums.PermissionComment.html": {
    "href": "api/Flickr.Net.Core.Enums.PermissionComment.html",
    "title": "Enum PermissionComment | Flickr.Net",
    "keywords": "Enum PermissionComment An enumeration defining who can add comments. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum PermissionComment Fields Name Description ContactsOnly Contacts only. Everybody All Flickr users. FriendsAndFamily Friends and family only. Nobody Nobody."
  },
  "api/Flickr.Net.Core.Enums.PhotoSearchExtras.html": {
    "href": "api/Flickr.Net.Core.Enums.PhotoSearchExtras.html",
    "title": "Enum PhotoSearchExtras | Flickr.Net",
    "keywords": "Enum PhotoSearchExtras Which photo search extras to be included. Can be combined to include more than one value. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum PhotoSearchExtras : long Examples The following code sets options to return both the license and owner name along with the other search results. PhotoSearchOptions options = new PhotoSearchOptions(); options.Extras = PhotoSearchExtras.License & PhotoSearchExtras.OwnerName Fields Name Description All Returns all the above information. AllUrls Returns the URL for all the images, as well as the image sizes. CountComments THe number of comments for this image. CountFaves The number of favorites for this image. DateTaken Returned the date the photo was taken. DateUploaded Returned the date the photos was uploaded. Description Returns the description for the image. Geo Geo-location information IconServer Returns the server for the buddy icon for this user. Large1600Url Large (1600 on largest size) image url. Large2048Url Large (2048 on largest size) image url. LargeSquareUrl Large (150x150) square image. LargeUrl Returns the URL for the large image, as well as the image size. LastUpdated Returns the date the photo was last updated. License Returns a license. MachineTags Machine encoded tags Media Returns the media type of the photo, currently either 'photo' or 'video'. Medium640Url Returns the URL for the medium 640 image, as well as the image size. Medium800Url Medium (800 on largest size) image url. MediumUrl Returns the URL for the medium image, as well as the image size. None No extras selected. OriginalDimensions Return the Dimensions of the Original Image. OriginalFormat Returns the extension for the original format of this photo. OriginalUrl Returns the URL for the original image, as well as the image size. OwnerName Returns the name of the owner of the photo. PathAlias The path alias, if defined by the user (replaces the users NSID in the flickr URL for their photostream). Rotation Returns information on rotation of images compared to original Small320Url Small (320 on longest side) image. SmallUrl Returns the URL for the small image, as well as the image size. SquareUrl Returns the URL for the square image, as well as the image size. Tags Returns Tags attribute ThumbnailUrl Returns the URL for the thumbnail image, as well as the image size. Usage Returns the details of CanBlog, CanDownload etc. Views Returns the number of views for a photo. Visibility Returns the details for IsPublic, IsFamily and IsFriend."
  },
  "api/Flickr.Net.Core.Enums.PhotoSearchSortOrder.html": {
    "href": "api/Flickr.Net.Core.Enums.PhotoSearchSortOrder.html",
    "title": "Enum PhotoSearchSortOrder | Flickr.Net",
    "keywords": "Enum PhotoSearchSortOrder The sort order for the SearchAsync(PhotoSearchOptions, CancellationToken) , GetWithGeoDataAsync(PartialSearchOptions, CancellationToken) , GetWithoutGeoDataAsync(PartialSearchOptions, CancellationToken) methods. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum PhotoSearchSortOrder Fields Name Description DatePostedAscending Sort by date uploaded (posted). DatePostedDescending Sort by date uploaded (posted) in descending order. DateTakenAscending Sort by date taken. DateTakenDescending Sort by date taken in descending order. InterestingnessAscending Sort by interestingness (least interesting first) InterestingnessDescending Sort by interestingness in descending order (i.e. most interesting first) None No sort order. Relevance Sort by relevance (only applicable to text searches)"
  },
  "api/Flickr.Net.Core.Enums.PlaceType.html": {
    "href": "api/Flickr.Net.Core.Enums.PlaceType.html",
    "title": "Enum PlaceType | Flickr.Net",
    "keywords": "Enum PlaceType Used by . Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum PlaceType Fields Name Description Continent Continent. Country Country. County County. Locality Locality. Neighbourhood Neighbourhood. None No place type selected. Not used by the Flickr API. Region Region."
  },
  "api/Flickr.Net.Core.Enums.PoolPrivacy.html": {
    "href": "api/Flickr.Net.Core.Enums.PoolPrivacy.html",
    "title": "Enum PoolPrivacy | Flickr.Net",
    "keywords": "Enum PoolPrivacy The various pricay settings for a group. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum PoolPrivacy Fields Name Description InviteOnlyPublic A public group where you can see posts and photos in the group. The group is however invite only. None No privacy setting specified. OpenPublic A public group. Private The group is a private group. You cannot view pictures or posts until you are a member. The group is also invite only."
  },
  "api/Flickr.Net.Core.Enums.PopularitySort.html": {
    "href": "api/Flickr.Net.Core.Enums.PopularitySort.html",
    "title": "Enum PopularitySort | Flickr.Net",
    "keywords": "Enum PopularitySort Sorting used for Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum PopularitySort Fields Name Description Comments Sort by number of comments. Favorites Sort by number of favorites. None No sorting performed. Views Sort by number of views."
  },
  "api/Flickr.Net.Core.Enums.PopularSorting.html": {
    "href": "api/Flickr.Net.Core.Enums.PopularSorting.html",
    "title": "Enum PopularSorting | Flickr.Net",
    "keywords": "Enum PopularSorting The popular sorting. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum PopularSorting Fields Name Description Comments Faves Interesting None Views"
  },
  "api/Flickr.Net.Core.Enums.PrivacyFilter.html": {
    "href": "api/Flickr.Net.Core.Enums.PrivacyFilter.html",
    "title": "Enum PrivacyFilter | Flickr.Net",
    "keywords": "Enum PrivacyFilter When searching for photos you can filter on the privacy of the photos. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum PrivacyFilter Fields Name Description CompletelyPrivate Show photos which are marked as completely private. None Do not filter. PrivateVisibleToFamily Show photos which are marked as private but viewable by family contacts. PrivateVisibleToFriends Show photos which are marked as private but viewable by friends. PrivateVisibleToFriendsFamily Show photos which are marked as private but viewable by friends and family contacts. PublicPhotos Show only public photos."
  },
  "api/Flickr.Net.Core.Enums.RadiusUnit.html": {
    "href": "api/Flickr.Net.Core.Enums.RadiusUnit.html",
    "title": "Enum RadiusUnit | Flickr.Net",
    "keywords": "Enum RadiusUnit The units of a radius search Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum RadiusUnit Fields Name Description Kilometers The radius is in Kilometers. Miles The radius is in Miles. None The radius units are unspecified."
  },
  "api/Flickr.Net.Core.Enums.SafetyLevel.html": {
    "href": "api/Flickr.Net.Core.Enums.SafetyLevel.html",
    "title": "Enum SafetyLevel | Flickr.Net",
    "keywords": "Enum SafetyLevel Safety level of the photographic image. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum SafetyLevel Fields Name Description Moderate Moderate (the odd articstic nude is ok, but thats the limit). None No safety level specified. Restricted Restricted (suitable for over 18s only). Safe Very safe (suitable for a global family audience)."
  },
  "api/Flickr.Net.Core.Enums.Style.html": {
    "href": "api/Flickr.Net.Core.Enums.Style.html",
    "title": "Enum Style | Flickr.Net",
    "keywords": "Enum Style An enumeration of photo styles. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum Style Fields Name Description BlackAndWhite Black and white. DepthOfField Shallow depth of field. Minimalism Minimalist. Pattern Patterns."
  },
  "api/Flickr.Net.Core.Enums.SuggestionStatus.html": {
    "href": "api/Flickr.Net.Core.Enums.SuggestionStatus.html",
    "title": "Enum SuggestionStatus | Flickr.Net",
    "keywords": "Enum SuggestionStatus The status of a location suggestion. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum SuggestionStatus Fields Name Description Approved The suggestion has been approved. Pending The suggestion is in a pending state. Rejected The suggestion has been rejected."
  },
  "api/Flickr.Net.Core.Enums.SupportedService.html": {
    "href": "api/Flickr.Net.Core.Enums.SupportedService.html",
    "title": "Enum SupportedService | Flickr.Net",
    "keywords": "Enum SupportedService A list of service the Flickr.Net API Supports. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum SupportedService Remarks Not all methods are supported by all service. Behaviour of the library may be unpredictable if not using Flickr as your service. Fields Name Description Flickr Flickr - http://www.flickr.com/services/api TwentyThreeHQ 23HQ = http://www.23hq.com/doc/api/ Zooomr Zooomr - http://blog.zooomr.com/2006/03/27/attention-developers/"
  },
  "api/Flickr.Net.Core.Enums.TagMode.html": {
    "href": "api/Flickr.Net.Core.Enums.TagMode.html",
    "title": "Enum TagMode | Flickr.Net",
    "keywords": "Enum TagMode Used to specify where all tags must be matched or any tag to be matched. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum TagMode Fields Name Description AllTags All tags must be found. AnyTag Any tag must match, but not all. Boolean Uncodumented and unsupported tag mode where boolean operators are supported. None No tag mode specified."
  },
  "api/Flickr.Net.Core.Enums.TimeType.html": {
    "href": "api/Flickr.Net.Core.Enums.TimeType.html",
    "title": "Enum TimeType | Flickr.Net",
    "keywords": "Enum TimeType The time type. Namespace : Flickr.Net.Core.Enums Assembly : Flickr.Net.Core.dll Syntax public enum TimeType Fields Name Description Days Hours"
  },
  "api/Flickr.Net.Core.Exceptions.ApiKeyRequiredException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.ApiKeyRequiredException.html",
    "title": "Class ApiKeyRequiredException | Flickr.Net",
    "keywords": "Class ApiKeyRequiredException Exception thrown is no API key is supplied. Inheritance System.Object FlickrException ApiKeyRequiredException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class ApiKeyRequiredException : FlickrException Constructors | Improve this Doc View Source ApiKeyRequiredException() Initializes a new instance of the ApiKeyRequiredException class. Declaration public ApiKeyRequiredException() | Improve this Doc View Source ApiKeyRequiredException(String) Initializes a new instance of the ApiKeyRequiredException class with a specified error message. Declaration public ApiKeyRequiredException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source ApiKeyRequiredException(String, Exception) Initializes a new instance of the ApiKeyRequiredException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public ApiKeyRequiredException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException"
  },
  "api/Flickr.Net.Core.Exceptions.AuthenticationRequiredException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.AuthenticationRequiredException.html",
    "title": "Class AuthenticationRequiredException | Flickr.Net",
    "keywords": "Class AuthenticationRequiredException Exception thrown when method requires authentication but no authentication token is supplied. Inheritance System.Object FlickrException AuthenticationRequiredException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class AuthenticationRequiredException : FlickrException Constructors | Improve this Doc View Source AuthenticationRequiredException() Initializes a new instance of the AuthenticationRequiredException class. Declaration public AuthenticationRequiredException() | Improve this Doc View Source AuthenticationRequiredException(String) Initializes a new instance of the AuthenticationRequiredException class with a specified error message. Declaration public AuthenticationRequiredException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source AuthenticationRequiredException(String, Exception) Initializes a new instance of the AuthenticationRequiredException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public AuthenticationRequiredException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException"
  },
  "api/Flickr.Net.Core.Exceptions.BadUrlFoundException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.BadUrlFoundException.html",
    "title": "Class BadUrlFoundException | Flickr.Net",
    "keywords": "Class BadUrlFoundException A user was included in a description or comment which Flickr rejected. Inheritance System.Object FlickrException FlickrApiException BadUrlFoundException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public sealed class BadUrlFoundException : FlickrApiException"
  },
  "api/Flickr.Net.Core.Exceptions.CacheException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.CacheException.html",
    "title": "Class CacheException | Flickr.Net",
    "keywords": "Class CacheException An internal class used for catching caching exceptions. Inheritance System.Object CacheException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class CacheException : Exception Constructors | Improve this Doc View Source CacheException() Initializes a new instance of the CacheException class. Declaration public CacheException() | Improve this Doc View Source CacheException(String) Initializes a new instance of the CacheException class with a specified error message. Declaration public CacheException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source CacheException(String, Exception) Initializes a new instance of the CacheException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public CacheException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException"
  },
  "api/Flickr.Net.Core.Exceptions.FlickrApiException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.FlickrApiException.html",
    "title": "Class FlickrApiException | Flickr.Net",
    "keywords": "Class FlickrApiException Exception thrown when the Flickr API returned a specifi error code. Inheritance System.Object FlickrException FlickrApiException BadUrlFoundException FormatNotFoundException InvalidApiKeyException InvalidSignatureException LoginFailedInvalidTokenException MethodNotFoundException MissingSignatureException PermissionDeniedException PhotoNotFoundException PhotosetNotFoundException ServiceUnavailableException UserNotFoundException UserNotLoggedInInsufficientPermissionsException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class FlickrApiException : FlickrException Constructors | Improve this Doc View Source FlickrApiException() Initializes a new instance of the FlickrApiException class. Declaration public FlickrApiException() | Improve this Doc View Source FlickrApiException(Int32, String) Initializes a new instance of the FlickrApiException class with a specific code and message. Declaration public FlickrApiException(int code, string message) Parameters Type Name Description System.Int32 code The error code supplied by Flickr. System.String message The error message supplied by Flickr. Remarks The code and message returned from Flickr are used to generate the exceptions message. | Improve this Doc View Source FlickrApiException(String) Initializes a new instance of the FlickrApiException class with a specified error message. Declaration public FlickrApiException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source FlickrApiException(String, Exception) Initializes a new instance of the FlickrApiException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public FlickrApiException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException Properties | Improve this Doc View Source Code Get the code of the Flickr error. Declaration public int Code { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source Message Overrides the message to return custom error message. Declaration public override string Message { get; } Property Value Type Description System.String | Improve this Doc View Source OriginalMessage Gets the orignal message returned by Flickr. Declaration public string OriginalMessage { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Exceptions.FlickrException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.FlickrException.html",
    "title": "Class FlickrException | Flickr.Net",
    "keywords": "Class FlickrException Generic Flickr.Net Exception. Inheritance System.Object FlickrException ApiKeyRequiredException AuthenticationRequiredException FlickrApiException FlickrWebException ParsingException ResponseXmlException SignatureRequiredException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class FlickrException : Exception Constructors | Improve this Doc View Source FlickrException() Initializes a new instance of the FlickrException class. Declaration public FlickrException() | Improve this Doc View Source FlickrException(String) Initializes a new instance of the FlickrException class with a specified error message. Declaration public FlickrException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source FlickrException(String, Exception) Initializes a new instance of the FlickrException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public FlickrException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException"
  },
  "api/Flickr.Net.Core.Exceptions.FlickrWebException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.FlickrWebException.html",
    "title": "Class FlickrWebException | Flickr.Net",
    "keywords": "Class FlickrWebException Exception thrown when a communication error occurs with a web call. Inheritance System.Object FlickrException FlickrWebException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class FlickrWebException : FlickrException Constructors | Improve this Doc View Source FlickrWebException() Initializes a new instance of the FlickrWebException class. Declaration public FlickrWebException() | Improve this Doc View Source FlickrWebException(String) Initializes a new instance of the FlickrWebException class with a specified error message. Declaration public FlickrWebException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source FlickrWebException(String, Exception) Initializes a new instance of the FlickrWebException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public FlickrWebException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException"
  },
  "api/Flickr.Net.Core.Exceptions.FormatNotFoundException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.FormatNotFoundException.html",
    "title": "Class FormatNotFoundException | Flickr.Net",
    "keywords": "Class FormatNotFoundException The specified format (e.g. json) was not found. Inheritance System.Object FlickrException FlickrApiException FormatNotFoundException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public sealed class FormatNotFoundException : FlickrApiException Remarks The FlickrNet library only uses one format, so you should not experience this error."
  },
  "api/Flickr.Net.Core.Exceptions.Handlers.ExceptionHandler.html": {
    "href": "api/Flickr.Net.Core.Exceptions.Handlers.ExceptionHandler.html",
    "title": "Class ExceptionHandler | Flickr.Net",
    "keywords": "Class ExceptionHandler A handler that is used to generate an exception from the response sent back by Flickr. Inheritance System.Object ExceptionHandler Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Exceptions.Handlers Assembly : Flickr.Net.Core.dll Syntax public static class ExceptionHandler Methods | Improve this Doc View Source CreateResponseException(XmlReader) Creates a FlickrApiException from the response sent back from Flickr. Declaration public static Exception CreateResponseException(XmlReader reader) Parameters Type Name Description System.Xml.XmlReader reader The System.Xml.XmlReader containing the response from Flickr. Returns Type Description Exception The FlickrApiException created from the information returned by Flickr."
  },
  "api/Flickr.Net.Core.Exceptions.Handlers.html": {
    "href": "api/Flickr.Net.Core.Exceptions.Handlers.html",
    "title": "Namespace Flickr.Net.Core.Exceptions.Handlers | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Exceptions.Handlers Classes ExceptionHandler A handler that is used to generate an exception from the response sent back by Flickr."
  },
  "api/Flickr.Net.Core.Exceptions.html": {
    "href": "api/Flickr.Net.Core.Exceptions.html",
    "title": "Namespace Flickr.Net.Core.Exceptions | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Exceptions Classes ApiKeyRequiredException Exception thrown is no API key is supplied. AuthenticationRequiredException Exception thrown when method requires authentication but no authentication token is supplied. BadUrlFoundException A user was included in a description or comment which Flickr rejected. CacheException An internal class used for catching caching exceptions. FlickrApiException Exception thrown when the Flickr API returned a specifi error code. FlickrException Generic Flickr.Net Exception. FlickrWebException Exception thrown when a communication error occurs with a web call. FormatNotFoundException The specified format (e.g. json) was not found. InvalidApiKeyException Error: 100: Invalid API Key InvalidSignatureException Error: 96: Invalid signature LoginFailedInvalidTokenException Error: 98: Login failed / Invalid auth token MethodNotFoundException The method name supplied was not recognised by Flickr. MissingSignatureException Error 97: Missing signature exception. OAuthException An OAuth error occurred when calling one of the OAuth authentication flow methods. ParsingException The exception thrown when an error occurred while trying to parse the response from Flickr. PermissionDeniedException Error: Permission Denied. PhotoNotFoundException No photo with the photo ID supplied to the method could be found. PhotosetNotFoundException No photoset with the photoset ID supplied to the method could be found. ResponseXmlException Exception thrown when an error parsing the returned XML. ServiceUnavailableException Error: 105: Service currently unavailable SignatureRequiredException Thrown when a method requires a valid signature but no shared secret has been supplied. UserNotFoundException No user with the user ID supplied to the method could be found. UserNotLoggedInInsufficientPermissionsException Error: 99: User not logged in / Insufficient permissions"
  },
  "api/Flickr.Net.Core.Exceptions.InvalidApiKeyException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.InvalidApiKeyException.html",
    "title": "Class InvalidApiKeyException | Flickr.Net",
    "keywords": "Class InvalidApiKeyException Error: 100: Invalid API Key Inheritance System.Object FlickrException FlickrApiException InvalidApiKeyException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class InvalidApiKeyException : FlickrApiException Remarks The API key passed was not valid or has expired."
  },
  "api/Flickr.Net.Core.Exceptions.InvalidSignatureException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.InvalidSignatureException.html",
    "title": "Class InvalidSignatureException | Flickr.Net",
    "keywords": "Class InvalidSignatureException Error: 96: Invalid signature Inheritance System.Object FlickrException FlickrApiException InvalidSignatureException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class InvalidSignatureException : FlickrApiException Remarks The passed signature was invalid."
  },
  "api/Flickr.Net.Core.Exceptions.LoginFailedInvalidTokenException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.LoginFailedInvalidTokenException.html",
    "title": "Class LoginFailedInvalidTokenException | Flickr.Net",
    "keywords": "Class LoginFailedInvalidTokenException Error: 98: Login failed / Invalid auth token Inheritance System.Object FlickrException FlickrApiException LoginFailedInvalidTokenException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class LoginFailedInvalidTokenException : FlickrApiException Remarks The login details or auth token passed were invalid."
  },
  "api/Flickr.Net.Core.Exceptions.MethodNotFoundException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.MethodNotFoundException.html",
    "title": "Class MethodNotFoundException | Flickr.Net",
    "keywords": "Class MethodNotFoundException The method name supplied was not recognised by Flickr. Inheritance System.Object FlickrException FlickrApiException MethodNotFoundException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public sealed class MethodNotFoundException : FlickrApiException Remarks While using the FlickrNet library you should not encounter this error, unless Flickr removes a particular method from the API."
  },
  "api/Flickr.Net.Core.Exceptions.MissingSignatureException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.MissingSignatureException.html",
    "title": "Class MissingSignatureException | Flickr.Net",
    "keywords": "Class MissingSignatureException Error 97: Missing signature exception. Inheritance System.Object FlickrException FlickrApiException MissingSignatureException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class MissingSignatureException : FlickrApiException Remarks The call required signing but no signature was sent."
  },
  "api/Flickr.Net.Core.Exceptions.OAuthException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.OAuthException.html",
    "title": "Class OAuthException | Flickr.Net",
    "keywords": "Class OAuthException An OAuth error occurred when calling one of the OAuth authentication flow methods. Inheritance System.Object OAuthException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class OAuthException : Exception Constructors | Improve this Doc View Source OAuthException(Exception) Constructor for the OAuthException class. Declaration public OAuthException(Exception innerException) Parameters Type Name Description Exception innerException | Improve this Doc View Source OAuthException(Byte[], Exception) Constructor for the OAuthException class. Declaration public OAuthException(byte[] response, Exception innerException) Parameters Type Name Description System.Byte [] response Exception innerException | Improve this Doc View Source OAuthException(String, Exception) Constructor for the OAuthException class. Declaration public OAuthException(string response, Exception innerException) Parameters Type Name Description System.String response Exception innerException Properties | Improve this Doc View Source FullResponse The full response of the exception. Declaration public string FullResponse { get; set; } Property Value Type Description System.String | Improve this Doc View Source Message The message for the exception. Declaration public override string Message { get; } Property Value Type Description System.String | Improve this Doc View Source OAuthErrorPameters The list of error parameters returned by the OAuth exception. Declaration public Dictionary<string, string> OAuthErrorPameters { get; set; } Property Value Type Description Dictionary < System.String , System.String >"
  },
  "api/Flickr.Net.Core.Exceptions.ParsingException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.ParsingException.html",
    "title": "Class ParsingException | Flickr.Net",
    "keywords": "Class ParsingException The exception thrown when an error occurred while trying to parse the response from Flickr. Inheritance System.Object FlickrException ParsingException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class ParsingException : FlickrException Remarks Usually because an unexpected element or attribute was encountered. Constructors | Improve this Doc View Source ParsingException() Initializes a new instance of the ParsingException class. Declaration public ParsingException() | Improve this Doc View Source ParsingException(String) Initializes a new instance of the ParsingException class with a specified error message. Declaration public ParsingException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source ParsingException(String, Exception) Initializes a new instance of the ParsingException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public ParsingException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException"
  },
  "api/Flickr.Net.Core.Exceptions.PermissionDeniedException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.PermissionDeniedException.html",
    "title": "Class PermissionDeniedException | Flickr.Net",
    "keywords": "Class PermissionDeniedException Error: Permission Denied. Inheritance System.Object FlickrException FlickrApiException PermissionDeniedException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class PermissionDeniedException : FlickrApiException Remarks The owner of the photo does not want to share the data wih you."
  },
  "api/Flickr.Net.Core.Exceptions.PhotoNotFoundException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.PhotoNotFoundException.html",
    "title": "Class PhotoNotFoundException | Flickr.Net",
    "keywords": "Class PhotoNotFoundException No photo with the photo ID supplied to the method could be found. Inheritance System.Object FlickrException FlickrApiException PhotoNotFoundException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class PhotoNotFoundException : FlickrApiException Remarks This could mean the photo does not exist, or that you do not have permission to view the photo."
  },
  "api/Flickr.Net.Core.Exceptions.PhotosetNotFoundException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.PhotosetNotFoundException.html",
    "title": "Class PhotosetNotFoundException | Flickr.Net",
    "keywords": "Class PhotosetNotFoundException No photoset with the photoset ID supplied to the method could be found. Inheritance System.Object FlickrException FlickrApiException PhotosetNotFoundException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class PhotosetNotFoundException : FlickrApiException Remarks This could mean the photoset does not exist, or that you do not have permission to view the photoset."
  },
  "api/Flickr.Net.Core.Exceptions.ResponseXmlException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.ResponseXmlException.html",
    "title": "Class ResponseXmlException | Flickr.Net",
    "keywords": "Class ResponseXmlException Exception thrown when an error parsing the returned XML. Inheritance System.Object FlickrException ResponseXmlException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class ResponseXmlException : FlickrException Constructors | Improve this Doc View Source ResponseXmlException() Initializes a new instance of the ResponseXmlException class. Declaration public ResponseXmlException() | Improve this Doc View Source ResponseXmlException(String) Initializes a new instance of the ResponseXmlException class with a specified error message. Declaration public ResponseXmlException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source ResponseXmlException(String, Exception) Initializes a new instance of the ResponseXmlException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public ResponseXmlException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException"
  },
  "api/Flickr.Net.Core.Exceptions.ServiceUnavailableException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.ServiceUnavailableException.html",
    "title": "Class ServiceUnavailableException | Flickr.Net",
    "keywords": "Class ServiceUnavailableException Error: 105: Service currently unavailable Inheritance System.Object FlickrException FlickrApiException ServiceUnavailableException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class ServiceUnavailableException : FlickrApiException Remarks The requested service is temporarily unavailable."
  },
  "api/Flickr.Net.Core.Exceptions.SignatureRequiredException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.SignatureRequiredException.html",
    "title": "Class SignatureRequiredException | Flickr.Net",
    "keywords": "Class SignatureRequiredException Thrown when a method requires a valid signature but no shared secret has been supplied. Inheritance System.Object FlickrException SignatureRequiredException Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class SignatureRequiredException : FlickrException Constructors | Improve this Doc View Source SignatureRequiredException() Initializes a new instance of the SignatureRequiredException class. Declaration public SignatureRequiredException() | Improve this Doc View Source SignatureRequiredException(String) Initializes a new instance of the SignatureRequiredException class with a specified error message. Declaration public SignatureRequiredException(string message) Parameters Type Name Description System.String message | Improve this Doc View Source SignatureRequiredException(String, Exception) Initializes a new instance of the SignatureRequiredException class with a specified error message and a reference to the inner exception that is the cause of this exception. Declaration public SignatureRequiredException(string message, Exception innerException) Parameters Type Name Description System.String message Exception innerException"
  },
  "api/Flickr.Net.Core.Exceptions.UserNotFoundException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.UserNotFoundException.html",
    "title": "Class UserNotFoundException | Flickr.Net",
    "keywords": "Class UserNotFoundException No user with the user ID supplied to the method could be found. Inheritance System.Object FlickrException FlickrApiException UserNotFoundException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class UserNotFoundException : FlickrApiException Remarks This could mean the user does not exist, or that you do not have permission to view the user."
  },
  "api/Flickr.Net.Core.Exceptions.UserNotLoggedInInsufficientPermissionsException.html": {
    "href": "api/Flickr.Net.Core.Exceptions.UserNotLoggedInInsufficientPermissionsException.html",
    "title": "Class UserNotLoggedInInsufficientPermissionsException | Flickr.Net",
    "keywords": "Class UserNotLoggedInInsufficientPermissionsException Error: 99: User not logged in / Insufficient permissions Inheritance System.Object FlickrException FlickrApiException UserNotLoggedInInsufficientPermissionsException Inherited Members FlickrApiException.Code FlickrApiException.OriginalMessage FlickrApiException.Message Namespace : Flickr.Net.Core.Exceptions Assembly : Flickr.Net.Core.dll Syntax public class UserNotLoggedInInsufficientPermissionsException : FlickrApiException Remarks The method requires user authentication but the user was not logged in, or the authenticated method call did not have the required permissions."
  },
  "api/Flickr.Net.Core.Flickr.html": {
    "href": "api/Flickr.Net.Core.Flickr.html",
    "title": "Class Flickr | Flickr.Net",
    "keywords": "Class Flickr The main Flickr class. Inheritance System.Object Flickr Implements IFlickrActivity IFlickrBlogs IFlickrCameras IFlickrCollections IFlickrCommons IFlickrContacts IFlickrFavorites IFlickrGalleries IFlickrGroups IFlickrGroupsDiscuss IFlickrGroupsDiscussReplies IFlickrGroupsDiscussTopics IFlickrGroupsMembers IFlickrGroupsPools IFlickrInterestingness IFlickrMachineTags IFlickrOAuth IFlickrPanda IFlickrPeople IFlickrPhotosets IFlickrPhotosetsComments IFlickrPhotos IFlickrPhotosComments IFlickrPhotosGeo IFlickrPhotosLicenses IFlickrPhotosMisc IFlickrPhotosNotes IFlickrPhotosPeople IFlickrPhotosSuggestions IFlickrPlaces IFlickrPrefs IFlickrProfile IFlickrPush IFlickrReflection IFlickrStats IFlickrTags IFlickrTest IFlickrUpload IFlickrUrls Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public class Flickr : IFlickrActivity, IFlickrBlogs, IFlickrCameras, IFlickrCollections, IFlickrCommons, IFlickrContacts, IFlickrFavorites, IFlickrGalleries, IFlickrGroups, IFlickrGroupsDiscuss, IFlickrGroupsDiscussReplies, IFlickrGroupsDiscussTopics, IFlickrGroupsMembers, IFlickrGroupsPools, IFlickrInterestingness, IFlickrMachineTags, IFlickrOAuth, IFlickrPanda, IFlickrPeople, IFlickrPhotosets, IFlickrPhotosetsComments, IFlickrPhotos, IFlickrPhotosComments, IFlickrPhotosGeo, IFlickrPhotosLicenses, IFlickrPhotosMisc, IFlickrPhotosNotes, IFlickrPhotosPeople, IFlickrPhotosSuggestions, IFlickrPlaces, IFlickrPrefs, IFlickrProfile, IFlickrPush, IFlickrReflection, IFlickrStats, IFlickrTags, IFlickrTest, IFlickrUpload, IFlickrUrls Remarks Create an instance of this class and then call its methods to perform methods on Flickr. Examples FlickrNet.Flickr flickr = new FlickrNet.Flickr(); User user = flickr.PeopleFindByEmail(\"cal@iamcal.com\"); Console.WriteLine(\"User Id is \" + u.UserId); Constructors | Improve this Doc View Source Flickr(FlickrConfiguration) Constructor loads configuration settings from app.config or web.config file if they exist. Declaration public Flickr(FlickrConfiguration config) Parameters Type Name Description FlickrConfiguration config | Improve this Doc View Source Flickr(String) Create a new instance of the Flickr class with no authentication. Declaration public Flickr(string apiKey) Parameters Type Name Description System.String apiKey Your Flickr API Key. | Improve this Doc View Source Flickr(String, String) Creates a new instance of the Flickr class with an API key and a Shared Secret. This is only useful really useful for calling the Auth functions as all other authenticationed methods also require the API Token. Declaration public Flickr(string apiKey, string sharedSecret) Parameters Type Name Description System.String apiKey Your Flickr API Key. System.String sharedSecret Your Flickr Shared Secret. Properties | Improve this Doc View Source Activity property for all activity functions Declaration public IFlickrActivity Activity { get; } Property Value Type Description IFlickrActivity | Improve this Doc View Source AuthUrl Declaration protected static string AuthUrl { get; } Property Value Type Description System.String | Improve this Doc View Source BaseUri Declaration protected static Uri BaseUri { get; } Property Value Type Description Uri | Improve this Doc View Source Blogs property for all blog functions Declaration public IFlickrBlogs Blogs { get; } Property Value Type Description IFlickrBlogs | Improve this Doc View Source Cache Declaration protected Cache Cache { get; } Property Value Type Description Cache | Improve this Doc View Source Cameras property for all camera functions Declaration public IFlickrCameras Cameras { get; } Property Value Type Description IFlickrCameras | Improve this Doc View Source Collections property for all collection functions Declaration public IFlickrCollections Collections { get; } Property Value Type Description IFlickrCollections | Improve this Doc View Source Commons property for all common functions Declaration public IFlickrCommons Commons { get; } Property Value Type Description IFlickrCommons | Improve this Doc View Source Contacts property for all contact functions Declaration public IFlickrContacts Contacts { get; } Property Value Type Description IFlickrContacts | Improve this Doc View Source Favorites property for all favorites functions Declaration public IFlickrFavorites Favorites { get; } Property Value Type Description IFlickrFavorites | Improve this Doc View Source FlickrCachingSettings Gets the flickr caching settings. Declaration public FlickrCachingSettings FlickrCachingSettings { get; } Property Value Type Description FlickrCachingSettings | Improve this Doc View Source FlickrSettings Gets the flickr settings. Declaration public FlickrSettings FlickrSettings { get; } Property Value Type Description FlickrSettings | Improve this Doc View Source Galleries property for all gallerie functions Declaration public IFlickrGalleries Galleries { get; } Property Value Type Description IFlickrGalleries | Improve this Doc View Source Groups property for all group functions Declaration public IFlickrGroups Groups { get; } Property Value Type Description IFlickrGroups | Improve this Doc View Source Interestingness property for all interestingness functions Declaration public IFlickrInterestingness Interestingness { get; } Property Value Type Description IFlickrInterestingness | Improve this Doc View Source IsAuthenticated Checks to see if a shared secret and an api token are stored in the object. Does not check if these values are valid values. Declaration public bool IsAuthenticated { get; } Property Value Type Description System.Boolean | Improve this Doc View Source LastRequest Returns the last URL requested. Includes API signing. Declaration public string LastRequest { get; } Property Value Type Description System.String | Improve this Doc View Source LastResponse Returns the raw XML returned from the last response. Only set it the response was not returned from cache. Declaration public byte[] LastResponse { get; } Property Value Type Description System.Byte [] | Improve this Doc View Source MachineTags property for all machinetag functions Declaration public IFlickrMachineTags MachineTags { get; } Property Value Type Description IFlickrMachineTags | Improve this Doc View Source OAuth property for all oauth functions Declaration public IFlickrOAuth OAuth { get; } Property Value Type Description IFlickrOAuth | Improve this Doc View Source Panda property for all panda functions Declaration public IFlickrPanda Panda { get; } Property Value Type Description IFlickrPanda | Improve this Doc View Source People property for all people functions Declaration public IFlickrPeople People { get; } Property Value Type Description IFlickrPeople | Improve this Doc View Source Photos property for all photo functions Declaration public IFlickrPhotos Photos { get; } Property Value Type Description IFlickrPhotos | Improve this Doc View Source Photosets property for all photosets functions Declaration public IFlickrPhotosets Photosets { get; } Property Value Type Description IFlickrPhotosets | Improve this Doc View Source Places property for all place functions Declaration public IFlickrPlaces Places { get; } Property Value Type Description IFlickrPlaces | Improve this Doc View Source Prefs property for all pref functions Declaration public IFlickrPrefs Prefs { get; } Property Value Type Description IFlickrPrefs | Improve this Doc View Source Profile property for all profile functions Declaration public IFlickrProfile Profile { get; } Property Value Type Description IFlickrProfile | Improve this Doc View Source Push property for all push functions Declaration public IFlickrPush Push { get; } Property Value Type Description IFlickrPush | Improve this Doc View Source Reflection property for all reflection functions Declaration public IFlickrReflection Reflection { get; } Property Value Type Description IFlickrReflection | Improve this Doc View Source ReplaceUrl Declaration protected static string ReplaceUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Stats property for all stats functions Declaration public IFlickrStats Stats { get; } Property Value Type Description IFlickrStats | Improve this Doc View Source Tags property for all tags functions Declaration public IFlickrTags Tags { get; } Property Value Type Description IFlickrTags | Improve this Doc View Source Test property for all test functions Declaration public IFlickrTest Test { get; } Property Value Type Description IFlickrTest | Improve this Doc View Source Upload property for upload and replace functions Declaration public IFlickrUpload Upload { get; } Property Value Type Description IFlickrUpload | Improve this Doc View Source UploadUrl Declaration protected static string UploadUrl { get; } Property Value Type Description System.String | Improve this Doc View Source Urls property for all url functions Declaration public IFlickrUrls Urls { get; } Property Value Type Description IFlickrUrls Explicit Interface Implementations | Improve this Doc View Source IFlickrActivity.UserCommentsAsync(Int32, Int32, CancellationToken) Declaration async Task<ActivityItemCollection> IFlickrActivity.UserCommentsAsync(int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < ActivityItemCollection > | Improve this Doc View Source IFlickrActivity.UserPhotosAsync(Int32, TimeType, Int32, Int32, CancellationToken) Declaration async Task<ActivityItemCollection> IFlickrActivity.UserPhotosAsync(int timePeriod, TimeType timeType, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.Int32 timePeriod TimeType timeType System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < ActivityItemCollection > | Improve this Doc View Source IFlickrBlogs.GetListAsync(CancellationToken) Declaration async Task<BlogCollection> IFlickrBlogs.GetListAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < BlogCollection > | Improve this Doc View Source IFlickrBlogs.GetServicesAsync(CancellationToken) Declaration async Task<BlogServiceCollection> IFlickrBlogs.GetServicesAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < BlogServiceCollection > | Improve this Doc View Source IFlickrBlogs.PostPhotoAsync(String, String, String, String, String, CancellationToken) Declaration async Task<NoResponse> IFlickrBlogs.PostPhotoAsync(string blogId, string photoId, string title, string description, string blogPassword, CancellationToken cancellationToken) Parameters Type Name Description System.String blogId System.String photoId System.String title System.String description System.String blogPassword CancellationToken cancellationToken Returns Type Description Task < NoResponse > | Improve this Doc View Source IFlickrCameras.GetBrandModelsAsync(String, CancellationToken) Declaration async Task<CameraCollection> IFlickrCameras.GetBrandModelsAsync(string brandId, CancellationToken cancellationToken) Parameters Type Name Description System.String brandId CancellationToken cancellationToken Returns Type Description Task < CameraCollection > | Improve this Doc View Source IFlickrCameras.GetBrandsAsync(CancellationToken) Declaration async Task<BrandCollection> IFlickrCameras.GetBrandsAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < BrandCollection > | Improve this Doc View Source IFlickrCollections.GetInfoAsync(String, CancellationToken) Declaration async Task<CollectionInfo> IFlickrCollections.GetInfoAsync(string collectionId, CancellationToken cancellationToken) Parameters Type Name Description System.String collectionId CancellationToken cancellationToken Returns Type Description Task < CollectionInfo > | Improve this Doc View Source IFlickrCollections.GetTreeAsync(String, String, CancellationToken) Declaration async Task<CollectionCollection> IFlickrCollections.GetTreeAsync(string collectionId, string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String collectionId System.String userId CancellationToken cancellationToken Returns Type Description Task < CollectionCollection > | Improve this Doc View Source IFlickrCommons.GetInstitutionsAsync(CancellationToken) Declaration async Task<InstitutionCollection> IFlickrCommons.GetInstitutionsAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < InstitutionCollection > | Improve this Doc View Source IFlickrContacts.GetListAsync(ContactType, Int32, Int32, CancellationToken) Declaration async Task<ContactCollection> IFlickrContacts.GetListAsync(ContactType filter, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description ContactType filter System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < ContactCollection > | Improve this Doc View Source IFlickrContacts.GetListRecentlyUploadedAsync(ContactSearch, Nullable<DateTime>, CancellationToken) Declaration async Task<ContactCollection> IFlickrContacts.GetListRecentlyUploadedAsync(ContactSearch filter, DateTime? dateLastUpdated, CancellationToken cancellationToken) Parameters Type Name Description ContactSearch filter System.Nullable < DateTime > dateLastUpdated CancellationToken cancellationToken Returns Type Description Task < ContactCollection > | Improve this Doc View Source IFlickrContacts.GetPublicListAsync(String, Int32, Int32, CancellationToken) Declaration async Task<ContactCollection> IFlickrContacts.GetPublicListAsync(string userId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String userId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < ContactCollection > | Improve this Doc View Source IFlickrContacts.GetTaggingSuggestionsAsync(Int32, Int32, CancellationToken) Declaration async Task<ContactCollection> IFlickrContacts.GetTaggingSuggestionsAsync(int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < ContactCollection > | Improve this Doc View Source IFlickrFavorites.AddAsync(String, CancellationToken) Declaration async Task IFlickrFavorites.AddAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrFavorites.GetContextAsync(String, String, CancellationToken) Declaration async Task<FavoriteContext> IFlickrFavorites.GetContextAsync(string photoId, string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String userId CancellationToken cancellationToken Returns Type Description Task < FavoriteContext > | Improve this Doc View Source IFlickrFavorites.GetListAsync(String, Nullable<DateTime>, Nullable<DateTime>, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration async Task<PhotoCollection> IFlickrFavorites.GetListAsync(string userId, DateTime? minFavoriteDate, DateTime? maxFavoriteDate, PhotoSearchExtras extras, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String userId System.Nullable < DateTime > minFavoriteDate System.Nullable < DateTime > maxFavoriteDate PhotoSearchExtras extras System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrFavorites.GetPublicListAsync(String, Int32, Int32, CancellationToken) Declaration async Task<PhotoCollection> IFlickrFavorites.GetPublicListAsync(string userId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String userId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrFavorites.RemoveAsync(String, CancellationToken) Declaration async Task IFlickrFavorites.RemoveAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGalleries.AddPhotoAsync(String, String, String, CancellationToken) Declaration async Task IFlickrGalleries.AddPhotoAsync(string galleryId, string photoId, string comment, CancellationToken cancellationToken) Parameters Type Name Description System.String galleryId System.String photoId System.String comment CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGalleries.CreateAsync(String, String, String, CancellationToken) Declaration async Task IFlickrGalleries.CreateAsync(string title, string description, string primaryPhotoId, CancellationToken cancellationToken) Parameters Type Name Description System.String title System.String description System.String primaryPhotoId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGalleries.EditMetaAsync(String, String, String, CancellationToken) Declaration async Task IFlickrGalleries.EditMetaAsync(string galleryId, string title, string description, CancellationToken cancellationToken) Parameters Type Name Description System.String galleryId System.String title System.String description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGalleries.EditPhotoAsync(String, String, String, CancellationToken) Declaration async Task IFlickrGalleries.EditPhotoAsync(string galleryId, string photoId, string comment, CancellationToken cancellationToken) Parameters Type Name Description System.String galleryId System.String photoId System.String comment CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGalleries.EditPhotosAsync(String, String, IEnumerable<String>, CancellationToken) Declaration async Task IFlickrGalleries.EditPhotosAsync(string galleryId, string primaryPhotoId, IEnumerable<string> photoIds, CancellationToken cancellationToken) Parameters Type Name Description System.String galleryId System.String primaryPhotoId IEnumerable < System.String > photoIds CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGalleries.GetInfoAsync(String, CancellationToken) Declaration async Task<Gallery> IFlickrGalleries.GetInfoAsync(string galleryId, CancellationToken cancellationToken) Parameters Type Name Description System.String galleryId CancellationToken cancellationToken Returns Type Description Task < Gallery > | Improve this Doc View Source IFlickrGalleries.GetListAsync(String, Int32, Int32, CancellationToken) Declaration async Task<GalleryCollection> IFlickrGalleries.GetListAsync(string userId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String userId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < GalleryCollection > | Improve this Doc View Source IFlickrGalleries.GetListForPhotoAsync(String, Int32, Int32, CancellationToken) Declaration async Task<GalleryCollection> IFlickrGalleries.GetListForPhotoAsync(string photoId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < GalleryCollection > | Improve this Doc View Source IFlickrGalleries.GetPhotosAsync(String, PhotoSearchExtras, CancellationToken) Declaration async Task<GalleryPhotoCollection> IFlickrGalleries.GetPhotosAsync(string galleryId, PhotoSearchExtras extras, CancellationToken cancellationToken) Parameters Type Name Description System.String galleryId PhotoSearchExtras extras CancellationToken cancellationToken Returns Type Description Task < GalleryPhotoCollection > | Improve this Doc View Source IFlickrGalleries.RemovePhoto(String, String, String, CancellationToken) Declaration async Task IFlickrGalleries.RemovePhoto(string galleryId, string photoId, string fullResponse, CancellationToken cancellationToken) Parameters Type Name Description System.String galleryId System.String photoId System.String fullResponse CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGroups.Discuss Declaration IFlickrGroupsDiscuss IFlickrGroups.Discuss { get; } Returns Type Description IFlickrGroupsDiscuss | Improve this Doc View Source IFlickrGroups.GetInfoAsync(String, CancellationToken) Declaration async Task<GroupFullInfo> IFlickrGroups.GetInfoAsync(string groupId, CancellationToken cancellationToken) Parameters Type Name Description System.String groupId CancellationToken cancellationToken Returns Type Description Task < GroupFullInfo > | Improve this Doc View Source IFlickrGroups.JoinAsync(String, Boolean, CancellationToken) Declaration async Task IFlickrGroups.JoinAsync(string groupId, bool acceptsRules, CancellationToken cancellationToken) Parameters Type Name Description System.String groupId System.Boolean acceptsRules CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGroups.JoinRequestAsync(String, String, Boolean, CancellationToken) Declaration async Task IFlickrGroups.JoinRequestAsync(string groupId, string message, bool acceptRules, CancellationToken cancellationToken) Parameters Type Name Description System.String groupId System.String message System.Boolean acceptRules CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGroups.LeaveAsync(String, Boolean, CancellationToken) Declaration async Task IFlickrGroups.LeaveAsync(string groupId, bool deletePhotos, CancellationToken cancellationToken) Parameters Type Name Description System.String groupId System.Boolean deletePhotos CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGroups.Members Declaration IFlickrGroupsMembers IFlickrGroups.Members { get; } Returns Type Description IFlickrGroupsMembers | Improve this Doc View Source IFlickrGroups.Pools Declaration IFlickrGroupsPools IFlickrGroups.Pools { get; } Returns Type Description IFlickrGroupsPools | Improve this Doc View Source IFlickrGroups.SearchAsync(String, Int32, Int32, CancellationToken) Declaration async Task<GroupSearchResultCollection> IFlickrGroups.SearchAsync(string text, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String text System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < GroupSearchResultCollection > | Improve this Doc View Source IFlickrGroupsDiscuss.Replies Declaration IFlickrGroupsDiscussReplies IFlickrGroupsDiscuss.Replies { get; } Returns Type Description IFlickrGroupsDiscussReplies | Improve this Doc View Source IFlickrGroupsDiscuss.Topics Declaration IFlickrGroupsDiscussTopics IFlickrGroupsDiscuss.Topics { get; } Returns Type Description IFlickrGroupsDiscussTopics | Improve this Doc View Source IFlickrGroupsDiscussReplies.AddAsync(String, String, CancellationToken) Declaration async Task IFlickrGroupsDiscussReplies.AddAsync(string topicId, string message, CancellationToken cancellationToken) Parameters Type Name Description System.String topicId System.String message CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGroupsDiscussReplies.DeleteAsync(String, String, CancellationToken) Declaration async Task IFlickrGroupsDiscussReplies.DeleteAsync(string topicId, string replyId, CancellationToken cancellationToken) Parameters Type Name Description System.String topicId System.String replyId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGroupsDiscussReplies.EditAsync(String, String, String, CancellationToken) Declaration async Task IFlickrGroupsDiscussReplies.EditAsync(string topicId, string replyId, string message, CancellationToken cancellationToken) Parameters Type Name Description System.String topicId System.String replyId System.String message CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGroupsDiscussReplies.GetInfoAsync(String, String, CancellationToken) Declaration async Task<TopicReply> IFlickrGroupsDiscussReplies.GetInfoAsync(string topicId, string replyId, CancellationToken cancellationToken) Parameters Type Name Description System.String topicId System.String replyId CancellationToken cancellationToken Returns Type Description Task < TopicReply > | Improve this Doc View Source IFlickrGroupsDiscussReplies.GetListAsync(String, Int32, Int32, CancellationToken) Declaration async Task<TopicReplyCollection> IFlickrGroupsDiscussReplies.GetListAsync(string topicId, int perPage, int page, CancellationToken cancellationToken) Parameters Type Name Description System.String topicId System.Int32 perPage System.Int32 page CancellationToken cancellationToken Returns Type Description Task < TopicReplyCollection > | Improve this Doc View Source IFlickrGroupsDiscussTopics.TopicsAddAsync(String, String, String, CancellationToken) Declaration async Task IFlickrGroupsDiscussTopics.TopicsAddAsync(string groupId, string subject, string message, CancellationToken cancellationToken) Parameters Type Name Description System.String groupId System.String subject System.String message CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGroupsDiscussTopics.TopicsGetInfoAsync(String, CancellationToken) Declaration async Task<Topic> IFlickrGroupsDiscussTopics.TopicsGetInfoAsync(string topicId, CancellationToken cancellationToken) Parameters Type Name Description System.String topicId CancellationToken cancellationToken Returns Type Description Task < Topic > | Improve this Doc View Source IFlickrGroupsDiscussTopics.TopicsGetListAsync(String, Int32, Int32, CancellationToken) Declaration async Task<TopicCollection> IFlickrGroupsDiscussTopics.TopicsGetListAsync(string groupId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String groupId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < TopicCollection > | Improve this Doc View Source IFlickrGroupsMembers.GetListAsync(String, MemberTypes, Int32, Int32, CancellationToken) Declaration async Task<MemberCollection> IFlickrGroupsMembers.GetListAsync(string groupId, MemberTypes memberTypes, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String groupId MemberTypes memberTypes System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < MemberCollection > | Improve this Doc View Source IFlickrGroupsPools.AddAsync(String, String, CancellationToken) Declaration async Task IFlickrGroupsPools.AddAsync(string photoId, string groupId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String groupId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrGroupsPools.GetContextAsync(String, String, CancellationToken) Declaration async Task<Context> IFlickrGroupsPools.GetContextAsync(string photoId, string groupId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String groupId CancellationToken cancellationToken Returns Type Description Task < Context > | Improve this Doc View Source IFlickrGroupsPools.GetGroupsAsync(Int32, Int32, CancellationToken) Declaration async Task<MemberGroupInfoCollection> IFlickrGroupsPools.GetGroupsAsync(int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < MemberGroupInfoCollection > | Improve this Doc View Source IFlickrGroupsPools.GetPhotosAsync(String, String, String, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration async Task<PhotoCollection> IFlickrGroupsPools.GetPhotosAsync(string groupId, string tags, string userId, PhotoSearchExtras extras, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String groupId System.String tags System.String userId PhotoSearchExtras extras System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrGroupsPools.RemoveAsync(String, String, CancellationToken) Declaration async Task IFlickrGroupsPools.RemoveAsync(string photoId, string groupId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String groupId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrInterestingness.GetListAsync(Nullable<DateTime>, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration async Task<PhotoCollection> IFlickrInterestingness.GetListAsync(DateTime? date, PhotoSearchExtras extras, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.Nullable < DateTime > date PhotoSearchExtras extras System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrMachineTags.GetNamespacesAsync(String, Int32, Int32, CancellationToken) Declaration async Task<NamespaceCollection> IFlickrMachineTags.GetNamespacesAsync(string predicate, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String predicate System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < NamespaceCollection > | Improve this Doc View Source IFlickrMachineTags.GetPairsAsync(String, String, Int32, Int32, CancellationToken) Declaration async Task<PairCollection> IFlickrMachineTags.GetPairsAsync(string namespaceName, string predicate, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String namespaceName System.String predicate System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PairCollection > | Improve this Doc View Source IFlickrMachineTags.GetPredicatesAsync(String, Int32, Int32, CancellationToken) Declaration async Task<PredicateCollection> IFlickrMachineTags.GetPredicatesAsync(string namespaceName, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String namespaceName System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PredicateCollection > | Improve this Doc View Source IFlickrMachineTags.GetRecentValuesAsync(String, String, Nullable<DateTime>, CancellationToken) Declaration async Task<ValueCollection> IFlickrMachineTags.GetRecentValuesAsync(string namespaceName, string predicate, DateTime? addedSince, CancellationToken cancellationToken) Parameters Type Name Description System.String namespaceName System.String predicate System.Nullable < DateTime > addedSince CancellationToken cancellationToken Returns Type Description Task < ValueCollection > | Improve this Doc View Source IFlickrMachineTags.GetValuesAsync(String, String, Int32, Int32, CancellationToken) Declaration async Task<ValueCollection> IFlickrMachineTags.GetValuesAsync(string namespaceName, string predicate, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String namespaceName System.String predicate System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < ValueCollection > | Improve this Doc View Source IFlickrOAuth.CalculateAuthorizationUrl(String, AuthLevel, Boolean) Declaration string IFlickrOAuth.CalculateAuthorizationUrl(string requestToken, AuthLevel perms, bool mobile) Parameters Type Name Description System.String requestToken AuthLevel perms System.Boolean mobile Returns Type Description System.String | Improve this Doc View Source IFlickrOAuth.CalculateSignature(String, String, Dictionary<String, String>, String) Declaration string IFlickrOAuth.CalculateSignature(string method, string url, Dictionary<string, string> parameters, string tokenSecret) Parameters Type Name Description System.String method System.String url Dictionary < System.String , System.String > parameters System.String tokenSecret Returns Type Description System.String | Improve this Doc View Source IFlickrOAuth.CheckTokenAsync(CancellationToken) Declaration async Task<Auth> IFlickrOAuth.CheckTokenAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Auth > | Improve this Doc View Source IFlickrOAuth.GetAccessTokenAsync(OAuthRequestToken, String, CancellationToken) Declaration async Task<OAuthRequestToken> IFlickrOAuth.GetAccessTokenAsync(OAuthRequestToken requestToken, string verifier, CancellationToken cancellationToken) Parameters Type Name Description OAuthRequestToken requestToken System.String verifier CancellationToken cancellationToken Returns Type Description Task < OAuthRequestToken > | Improve this Doc View Source IFlickrOAuth.GetRequestTokenAsync(String, CancellationToken) Declaration async Task<OAuthRequestToken> IFlickrOAuth.GetRequestTokenAsync(string callbackUrl, CancellationToken cancellationToken) Parameters Type Name Description System.String callbackUrl CancellationToken cancellationToken Returns Type Description Task < OAuthRequestToken > | Improve this Doc View Source IFlickrPanda.GetListAsync(CancellationToken) Declaration async Task<string[]> IFlickrPanda.GetListAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.String []> | Improve this Doc View Source IFlickrPanda.GetPhotosAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration async Task<PandaPhotoCollection> IFlickrPanda.GetPhotosAsync(string pandaName, PhotoSearchExtras extras, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String pandaName PhotoSearchExtras extras System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PandaPhotoCollection > | Improve this Doc View Source IFlickrPeople.FindByEmailAsync(String, CancellationToken) Declaration async Task<FoundUser> IFlickrPeople.FindByEmailAsync(string emailAddress, CancellationToken cancellationToken) Parameters Type Name Description System.String emailAddress CancellationToken cancellationToken Returns Type Description Task < FoundUser > | Improve this Doc View Source IFlickrPeople.FindByUserNameAsync(String, CancellationToken) Declaration async Task<FoundUser> IFlickrPeople.FindByUserNameAsync(string userName, CancellationToken cancellationToken) Parameters Type Name Description System.String userName CancellationToken cancellationToken Returns Type Description Task < FoundUser > | Improve this Doc View Source IFlickrPeople.GetGroupsAsync(String, CancellationToken) Declaration async Task<GroupInfoCollection> IFlickrPeople.GetGroupsAsync(string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String userId CancellationToken cancellationToken Returns Type Description Task < GroupInfoCollection > | Improve this Doc View Source IFlickrPeople.GetInfoAsync(String, CancellationToken) Declaration async Task<Person> IFlickrPeople.GetInfoAsync(string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String userId CancellationToken cancellationToken Returns Type Description Task < Person > | Improve this Doc View Source IFlickrPeople.GetLimitsAsync(CancellationToken) Declaration async Task<PersonLimits> IFlickrPeople.GetLimitsAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < PersonLimits > | Improve this Doc View Source IFlickrPeople.GetPhotosAsync(String, SafetyLevel, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, ContentTypeSearch, PrivacyFilter, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPeople.GetPhotosAsync(string userId, SafetyLevel safeSearch, DateTime? minUploadDate, DateTime? maxUploadDate, DateTime? minTakenDate, DateTime? maxTakenDate, ContentTypeSearch contentType, PrivacyFilter privacyFilter, PhotoSearchExtras extras, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String userId SafetyLevel safeSearch System.Nullable < DateTime > minUploadDate System.Nullable < DateTime > maxUploadDate System.Nullable < DateTime > minTakenDate System.Nullable < DateTime > maxTakenDate ContentTypeSearch contentType PrivacyFilter privacyFilter PhotoSearchExtras extras System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPeople.GetPhotosOfAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration async Task<PeoplePhotoCollection> IFlickrPeople.GetPhotosOfAsync(string userId, PhotoSearchExtras extras, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String userId PhotoSearchExtras extras System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PeoplePhotoCollection > | Improve this Doc View Source IFlickrPeople.GetPublicGroupsAsync(String, CancellationToken) Declaration async Task<GroupInfoCollection> IFlickrPeople.GetPublicGroupsAsync(string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String userId CancellationToken cancellationToken Returns Type Description Task < GroupInfoCollection > | Improve this Doc View Source IFlickrPeople.GetUploadStatusAsync(CancellationToken) Declaration async Task<UserStatus> IFlickrPeople.GetUploadStatusAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < UserStatus > | Improve this Doc View Source IFlickrPhotos.AddTagAsync(String, String[], CancellationToken) Declaration async Task IFlickrPhotos.AddTagAsync(string photoId, string[] tags, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String [] tags CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotos.Comments Declaration IFlickrPhotosComments IFlickrPhotos.Comments { get; } Returns Type Description IFlickrPhotosComments | Improve this Doc View Source IFlickrPhotos.DeleteAsync(String, CancellationToken) Declaration async Task IFlickrPhotos.DeleteAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotos.Geo Declaration IFlickrPhotosGeo IFlickrPhotos.Geo { get; } Returns Type Description IFlickrPhotosGeo | Improve this Doc View Source IFlickrPhotos.GetAllContextsAsync(String, CancellationToken) Declaration async Task<AllContexts> IFlickrPhotos.GetAllContextsAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task < AllContexts > | Improve this Doc View Source IFlickrPhotos.GetContactsPhotosAsync(Int32, Boolean, Boolean, Boolean, PhotoSearchExtras, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.GetContactsPhotosAsync(int count, bool justFriends, bool singlePhoto, bool includeSelf, PhotoSearchExtras extras, CancellationToken cancellationToken) Parameters Type Name Description System.Int32 count System.Boolean justFriends System.Boolean singlePhoto System.Boolean includeSelf PhotoSearchExtras extras CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.GetContactsPublicPhotosAsync(String, Int32, Boolean, Boolean, Boolean, PhotoSearchExtras, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.GetContactsPublicPhotosAsync(string userId, int count, bool justFriends, bool singlePhoto, bool includeSelf, PhotoSearchExtras extras, CancellationToken cancellationToken) Parameters Type Name Description System.String userId System.Int32 count System.Boolean justFriends System.Boolean singlePhoto System.Boolean includeSelf PhotoSearchExtras extras CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.GetContextAsync(String, CancellationToken) Declaration async Task<Context> IFlickrPhotos.GetContextAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task < Context > | Improve this Doc View Source IFlickrPhotos.GetCountsAsync(DateTime[], DateTime[], CancellationToken) Declaration async Task<PhotoCountCollection> IFlickrPhotos.GetCountsAsync(DateTime[] dates, DateTime[] takenDates, CancellationToken cancellationToken) Parameters Type Name Description DateTime [] dates DateTime [] takenDates CancellationToken cancellationToken Returns Type Description Task < PhotoCountCollection > | Improve this Doc View Source IFlickrPhotos.GetExifAsync(String, String, CancellationToken) Declaration async Task<ExifTagCollection> IFlickrPhotos.GetExifAsync(string photoId, string secret, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String secret CancellationToken cancellationToken Returns Type Description Task < ExifTagCollection > | Improve this Doc View Source IFlickrPhotos.GetFavoritesAsync(String, Int32, Int32, CancellationToken) Declaration async Task<PhotoFavoriteCollection> IFlickrPhotos.GetFavoritesAsync(string photoId, int perPage, int page, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.Int32 perPage System.Int32 page CancellationToken cancellationToken Returns Type Description Task < PhotoFavoriteCollection > | Improve this Doc View Source IFlickrPhotos.GetInfoAsync(String, String, CancellationToken) Declaration async Task<PhotoInfo> IFlickrPhotos.GetInfoAsync(string photoId, string secret, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String secret CancellationToken cancellationToken Returns Type Description Task < PhotoInfo > | Improve this Doc View Source IFlickrPhotos.GetNotInSetAsync(PartialSearchOptions, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.GetNotInSetAsync(PartialSearchOptions options, CancellationToken cancellationToken) Parameters Type Name Description PartialSearchOptions options CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.GetPermsAsync(String, CancellationToken) Declaration async Task<PhotoPermissions> IFlickrPhotos.GetPermsAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task < PhotoPermissions > | Improve this Doc View Source IFlickrPhotos.GetPopularAsync(String, PhotoSearchExtras, PopularSorting, Int32, Int32, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.GetPopularAsync(string userId, PhotoSearchExtras extras, PopularSorting sort, int perPage, int page, CancellationToken cancellationToken) Parameters Type Name Description System.String userId PhotoSearchExtras extras PopularSorting sort System.Int32 perPage System.Int32 page CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.GetRecentAsync(Int32, Int32, PhotoSearchExtras, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.GetRecentAsync(int page, int perPage, PhotoSearchExtras extras, CancellationToken cancellationToken) Parameters Type Name Description System.Int32 page System.Int32 perPage PhotoSearchExtras extras CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.GetSizesAsync(String, CancellationToken) Declaration async Task<SizeCollection> IFlickrPhotos.GetSizesAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task < SizeCollection > | Improve this Doc View Source IFlickrPhotos.GetUntaggedAsync(PartialSearchOptions, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.GetUntaggedAsync(PartialSearchOptions options, CancellationToken cancellationToken) Parameters Type Name Description PartialSearchOptions options CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.GetWithGeoDataAsync(PartialSearchOptions, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.GetWithGeoDataAsync(PartialSearchOptions options, CancellationToken cancellationToken) Parameters Type Name Description PartialSearchOptions options CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.GetWithoutGeoDataAsync(PartialSearchOptions, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.GetWithoutGeoDataAsync(PartialSearchOptions options, CancellationToken cancellationToken) Parameters Type Name Description PartialSearchOptions options CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.License Declaration IFlickrPhotosLicenses IFlickrPhotos.License { get; } Returns Type Description IFlickrPhotosLicenses | Improve this Doc View Source IFlickrPhotos.Misc Declaration IFlickrPhotosMisc IFlickrPhotos.Misc { get; } Returns Type Description IFlickrPhotosMisc | Improve this Doc View Source IFlickrPhotos.Notes Declaration IFlickrPhotosNotes IFlickrPhotos.Notes { get; } Returns Type Description IFlickrPhotosNotes | Improve this Doc View Source IFlickrPhotos.People Declaration IFlickrPhotosPeople IFlickrPhotos.People { get; } Returns Type Description IFlickrPhotosPeople | Improve this Doc View Source IFlickrPhotos.RecentlyUpdatedAsync(DateTime, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.RecentlyUpdatedAsync(DateTime minDate, PhotoSearchExtras extras, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime minDate PhotoSearchExtras extras System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.RemoveTagAsync(String, CancellationToken) Declaration async Task IFlickrPhotos.RemoveTagAsync(string tagId, CancellationToken cancellationToken) Parameters Type Name Description System.String tagId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotos.SearchAsync(PhotoSearchOptions, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotos.SearchAsync(PhotoSearchOptions options, CancellationToken cancellationToken) Parameters Type Name Description PhotoSearchOptions options CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotos.SetContentTypeAsync(String, ContentType, CancellationToken) Declaration async Task IFlickrPhotos.SetContentTypeAsync(string photoId, ContentType contentType, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId ContentType contentType CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotos.SetDatesAsync(String, Nullable<DateTime>, Nullable<DateTime>, DateGranularity, CancellationToken) Declaration async Task IFlickrPhotos.SetDatesAsync(string photoId, DateTime? datePosted, DateTime? dateTaken, DateGranularity granularity, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.Nullable < DateTime > datePosted System.Nullable < DateTime > dateTaken DateGranularity granularity CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotos.SetMetaAsync(String, String, String, CancellationToken) Declaration async Task IFlickrPhotos.SetMetaAsync(string photoId, string title, string description, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String title System.String description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotos.SetPermsAsync(String, Boolean, Boolean, Boolean, Nullable<PermissionComment>, Nullable<PermissionAddMeta>, CancellationToken) Declaration async Task IFlickrPhotos.SetPermsAsync(string photoId, bool isPublic, bool isFriend, bool isFamily, PermissionComment? permComment, PermissionAddMeta? permAddMeta, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.Boolean isPublic System.Boolean isFriend System.Boolean isFamily System.Nullable < PermissionComment > permComment System.Nullable < PermissionAddMeta > permAddMeta CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotos.SetSafetyLevelAsync(String, SafetyLevel, HiddenFromSearch, CancellationToken) Declaration async Task IFlickrPhotos.SetSafetyLevelAsync(string photoId, SafetyLevel safetyLevel, HiddenFromSearch hidden, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId SafetyLevel safetyLevel HiddenFromSearch hidden CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotos.SetTagsAsync(String, String[], CancellationToken) Declaration async Task IFlickrPhotos.SetTagsAsync(string photoId, string[] tags, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String [] tags CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotos.Suggestions Declaration IFlickrPhotosSuggestions IFlickrPhotos.Suggestions { get; } Returns Type Description IFlickrPhotosSuggestions | Improve this Doc View Source IFlickrPhotosComments.AddCommentAsync(String, String, CancellationToken) Declaration async Task<string> IFlickrPhotosComments.AddCommentAsync(string photoId, string commentText, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String commentText CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source IFlickrPhotosComments.DeleteCommentAsync(String, CancellationToken) Declaration async Task IFlickrPhotosComments.DeleteCommentAsync(string commentId, CancellationToken cancellationToken) Parameters Type Name Description System.String commentId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosComments.EditCommentAsync(String, String, CancellationToken) Declaration async Task IFlickrPhotosComments.EditCommentAsync(string commentId, string commentText, CancellationToken cancellationToken) Parameters Type Name Description System.String commentId System.String commentText CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosComments.GetListAsync(String, CancellationToken) Declaration async Task<PhotoCommentCollection> IFlickrPhotosComments.GetListAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task < PhotoCommentCollection > | Improve this Doc View Source IFlickrPhotosComments.GetRecentForContactsAsync(Nullable<DateTime>, String[], PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotosComments.GetRecentForContactsAsync(DateTime? dateLastComment, string[] contactsFilter, PhotoSearchExtras extras, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.Nullable < DateTime > dateLastComment System.String [] contactsFilter PhotoSearchExtras extras System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotosets.AddPhotoAsync(String, String, CancellationToken) Declaration async Task IFlickrPhotosets.AddPhotoAsync(string photosetId, string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId System.String photoId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosets.Comments Declaration IFlickrPhotosetsComments IFlickrPhotosets.Comments { get; } Returns Type Description IFlickrPhotosetsComments | Improve this Doc View Source IFlickrPhotosets.CreateAsync(String, String, String, CancellationToken) Declaration async Task<Photoset> IFlickrPhotosets.CreateAsync(string title, string primaryPhotoId, string description, CancellationToken cancellationToken) Parameters Type Name Description System.String title System.String primaryPhotoId System.String description CancellationToken cancellationToken Returns Type Description Task < Photoset > | Improve this Doc View Source IFlickrPhotosets.DeleteAsync(String, CancellationToken) Declaration async Task IFlickrPhotosets.DeleteAsync(string photosetId, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosets.EditMetaAsync(String, String, String, CancellationToken) Declaration async Task IFlickrPhotosets.EditMetaAsync(string photosetId, string title, string description, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId System.String title System.String description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosets.EditPhotosAsync(String, String, String[], CancellationToken) Declaration async Task IFlickrPhotosets.EditPhotosAsync(string photosetId, string primaryPhotoId, string[] photoIds, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId System.String primaryPhotoId System.String [] photoIds CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosets.GetContextAsync(String, String, CancellationToken) Declaration async Task<Context> IFlickrPhotosets.GetContextAsync(string photoId, string photosetId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String photosetId CancellationToken cancellationToken Returns Type Description Task < Context > | Improve this Doc View Source IFlickrPhotosets.GetInfoAsync(String, CancellationToken) Declaration async Task<Photoset> IFlickrPhotosets.GetInfoAsync(string photosetId, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId CancellationToken cancellationToken Returns Type Description Task < Photoset > | Improve this Doc View Source IFlickrPhotosets.GetListAsync(String, Int32, Int32, CancellationToken) Declaration async Task<PhotosetCollection> IFlickrPhotosets.GetListAsync(string userId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.String userId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PhotosetCollection > | Improve this Doc View Source IFlickrPhotosets.GetPhotosAsync(String, PhotoSearchExtras, PrivacyFilter, Int32, Int32, MediaType, CancellationToken) Declaration async Task<PhotosetPhotoCollection> IFlickrPhotosets.GetPhotosAsync(string photosetId, PhotoSearchExtras extras, PrivacyFilter privacyFilter, int page, int perPage, MediaType media, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId PhotoSearchExtras extras PrivacyFilter privacyFilter System.Int32 page System.Int32 perPage MediaType media CancellationToken cancellationToken Returns Type Description Task < PhotosetPhotoCollection > | Improve this Doc View Source IFlickrPhotosets.OrderSetsAsync(IEnumerable<String>, CancellationToken) Declaration async Task IFlickrPhotosets.OrderSetsAsync(IEnumerable<string> photosetIds, CancellationToken cancellationToken) Parameters Type Name Description IEnumerable < System.String > photosetIds CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosets.RemovePhotoAsync(String, String, CancellationToken) Declaration async Task IFlickrPhotosets.RemovePhotoAsync(string photosetId, string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId System.String photoId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosets.RemovePhotosAsync(String, IEnumerable<String>, CancellationToken) Declaration async Task IFlickrPhotosets.RemovePhotosAsync(string photosetId, IEnumerable<string> photoIds, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId IEnumerable < System.String > photoIds CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosets.ReorderPhotosAsync(String, IEnumerable<String>, CancellationToken) Declaration async Task IFlickrPhotosets.ReorderPhotosAsync(string photosetId, IEnumerable<string> photoIds, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId IEnumerable < System.String > photoIds CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosets.SetPrimaryPhotoAsync(String, String, CancellationToken) Declaration async Task IFlickrPhotosets.SetPrimaryPhotoAsync(string photosetId, string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId System.String photoId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosetsComments.AddCommentAsync(String, String, CancellationToken) Declaration async Task<string> IFlickrPhotosetsComments.AddCommentAsync(string photosetId, string commentText, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId System.String commentText CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source IFlickrPhotosetsComments.DeleteCommentAsync(String, CancellationToken) Declaration async Task IFlickrPhotosetsComments.DeleteCommentAsync(string commentId, CancellationToken cancellationToken) Parameters Type Name Description System.String commentId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosetsComments.EditCommentAsync(String, String, CancellationToken) Declaration async Task IFlickrPhotosetsComments.EditCommentAsync(string commentId, string commentText, CancellationToken cancellationToken) Parameters Type Name Description System.String commentId System.String commentText CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosetsComments.GetListAsync(String, CancellationToken) Declaration async Task<PhotosetCommentCollection> IFlickrPhotosetsComments.GetListAsync(string photosetId, CancellationToken cancellationToken) Parameters Type Name Description System.String photosetId CancellationToken cancellationToken Returns Type Description Task < PhotosetCommentCollection > | Improve this Doc View Source IFlickrPhotosGeo.BatchCorrectLocationAsync(PlaceId, Double, Double, GeoAccuracy, CancellationToken) Declaration async Task IFlickrPhotosGeo.BatchCorrectLocationAsync(PlaceId placeId, double latitude, double longitude, GeoAccuracy accuracy, CancellationToken cancellationToken) Parameters Type Name Description PlaceId placeId System.Double latitude System.Double longitude GeoAccuracy accuracy CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosGeo.BatchCorrectLocationAsync(WoeId, Double, Double, GeoAccuracy, CancellationToken) Declaration async Task IFlickrPhotosGeo.BatchCorrectLocationAsync(WoeId woeId, double latitude, double longitude, GeoAccuracy accuracy, CancellationToken cancellationToken) Parameters Type Name Description WoeId woeId System.Double latitude System.Double longitude GeoAccuracy accuracy CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosGeo.CorrectLocationAsync(String, PlaceId, CancellationToken) Declaration async Task IFlickrPhotosGeo.CorrectLocationAsync(string photoId, PlaceId placeId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId PlaceId placeId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosGeo.CorrectLocationAsync(String, WoeId, CancellationToken) Declaration async Task IFlickrPhotosGeo.CorrectLocationAsync(string photoId, WoeId woeId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId WoeId woeId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosGeo.GetLocationAsync(String, CancellationToken) Declaration async Task<PlaceInfo> IFlickrPhotosGeo.GetLocationAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task < PlaceInfo > | Improve this Doc View Source IFlickrPhotosGeo.GetPermsAsync(String, CancellationToken) Declaration async Task<GeoPermissions> IFlickrPhotosGeo.GetPermsAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task < GeoPermissions > | Improve this Doc View Source IFlickrPhotosGeo.PhotosForLocationAsync(Double, Double, GeoAccuracy, PhotoSearchExtras, Int32, Int32, CancellationToken) Declaration async Task<PhotoCollection> IFlickrPhotosGeo.PhotosForLocationAsync(double latitude, double longitude, GeoAccuracy accuracy, PhotoSearchExtras extras, int perPage, int page, CancellationToken cancellationToken) Parameters Type Name Description System.Double latitude System.Double longitude GeoAccuracy accuracy PhotoSearchExtras extras System.Int32 perPage System.Int32 page CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrPhotosGeo.RemoveLocationAsync(String, CancellationToken) Declaration async Task IFlickrPhotosGeo.RemoveLocationAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosGeo.SetContextAsync(String, GeoContext, CancellationToken) Declaration async Task IFlickrPhotosGeo.SetContextAsync(string photoId, GeoContext context, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId GeoContext context CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosGeo.SetLocationAsync(String, Double, Double, GeoAccuracy, CancellationToken) Declaration async Task IFlickrPhotosGeo.SetLocationAsync(string photoId, double latitude, double longitude, GeoAccuracy accuracy, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.Double latitude System.Double longitude GeoAccuracy accuracy CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosGeo.SetPermsAsync(String, Boolean, Boolean, Boolean, Boolean, CancellationToken) Declaration async Task IFlickrPhotosGeo.SetPermsAsync(string photoId, bool isPublic, bool isContact, bool isFamily, bool isFriend, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.Boolean isPublic System.Boolean isContact System.Boolean isFamily System.Boolean isFriend CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosLicenses.GetInfoAsync(CancellationToken) Declaration async Task<LicenseCollection> IFlickrPhotosLicenses.GetInfoAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < LicenseCollection > | Improve this Doc View Source IFlickrPhotosLicenses.SetLicenseAsync(String, LicenseType, CancellationToken) Declaration async Task IFlickrPhotosLicenses.SetLicenseAsync(string photoId, LicenseType license, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId LicenseType license CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosMisc.CheckTicketsAsync(String[], CancellationToken) Declaration async Task<TicketCollection> IFlickrPhotosMisc.CheckTicketsAsync(string[] tickets, CancellationToken cancellationToken) Parameters Type Name Description System.String [] tickets CancellationToken cancellationToken Returns Type Description Task < TicketCollection > | Improve this Doc View Source IFlickrPhotosMisc.RotateAsync(String, Int32, CancellationToken) Declaration async Task IFlickrPhotosMisc.RotateAsync(string photoId, int degrees, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.Int32 degrees CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosNotes.AddAsync(String, Int32, Int32, Int32, Int32, String, CancellationToken) Declaration async Task<string> IFlickrPhotosNotes.AddAsync(string photoId, int noteX, int noteY, int noteWidth, int noteHeight, string noteText, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.Int32 noteX System.Int32 noteY System.Int32 noteWidth System.Int32 noteHeight System.String noteText CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source IFlickrPhotosNotes.DeleteAsync(String, CancellationToken) Declaration async Task IFlickrPhotosNotes.DeleteAsync(string noteId, CancellationToken cancellationToken) Parameters Type Name Description System.String noteId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosNotes.EditAsync(String, Int32, Int32, Int32, Int32, String, CancellationToken) Declaration async Task IFlickrPhotosNotes.EditAsync(string noteId, int noteX, int noteY, int noteWidth, int noteHeight, string noteText, CancellationToken cancellationToken) Parameters Type Name Description System.String noteId System.Int32 noteX System.Int32 noteY System.Int32 noteWidth System.Int32 noteHeight System.String noteText CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosPeople.AddAsync(String, String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, CancellationToken) Declaration async Task IFlickrPhotosPeople.AddAsync(string photoId, string userId, int? personX, int? personY, int? personWidth, int? personHeight, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String userId System.Nullable < System.Int32 > personX System.Nullable < System.Int32 > personY System.Nullable < System.Int32 > personWidth System.Nullable < System.Int32 > personHeight CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosPeople.DeleteAsync(String, String, CancellationToken) Declaration async Task IFlickrPhotosPeople.DeleteAsync(string photoId, string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String userId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosPeople.DeleteCoordsAsync(String, String, CancellationToken) Declaration async Task IFlickrPhotosPeople.DeleteCoordsAsync(string photoId, string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String userId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosPeople.EditCoordsAsync(String, String, Int32, Int32, Int32, Int32, CancellationToken) Declaration async Task IFlickrPhotosPeople.EditCoordsAsync(string photoId, string userId, int personX, int personY, int personWidth, int personHeight, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.String userId System.Int32 personX System.Int32 personY System.Int32 personWidth System.Int32 personHeight CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosPeople.GetListAsync(String, CancellationToken) Declaration async Task<PhotoPersonCollection> IFlickrPhotosPeople.GetListAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task < PhotoPersonCollection > | Improve this Doc View Source IFlickrPhotosSuggestions.ApproveSuggestionAsync(String, CancellationToken) Declaration async Task IFlickrPhotosSuggestions.ApproveSuggestionAsync(string suggestionId, CancellationToken cancellationToken) Parameters Type Name Description System.String suggestionId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosSuggestions.GetListAsync(String, SuggestionStatus, CancellationToken) Declaration async Task<SuggestionCollection> IFlickrPhotosSuggestions.GetListAsync(string photoId, SuggestionStatus status, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId SuggestionStatus status CancellationToken cancellationToken Returns Type Description Task < SuggestionCollection > | Improve this Doc View Source IFlickrPhotosSuggestions.RejectSuggestionAsync(String, CancellationToken) Declaration async Task IFlickrPhotosSuggestions.RejectSuggestionAsync(string suggestionId, CancellationToken cancellationToken) Parameters Type Name Description System.String suggestionId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosSuggestions.RemoveSuggestionAsync(String, CancellationToken) Declaration async Task IFlickrPhotosSuggestions.RemoveSuggestionAsync(string suggestionId, CancellationToken cancellationToken) Parameters Type Name Description System.String suggestionId CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPhotosSuggestions.SuggestLocationAsync(String, Double, Double, GeoAccuracy, String, String, String, CancellationToken) Declaration async Task IFlickrPhotosSuggestions.SuggestLocationAsync(string photoId, double latitude, double longitude, GeoAccuracy accuracy, string woeId, string placeId, string note, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId System.Double latitude System.Double longitude GeoAccuracy accuracy System.String woeId System.String placeId System.String note CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPlaces.FindAsync(String, CancellationToken) Declaration async Task<PlaceCollection> IFlickrPlaces.FindAsync(string query, CancellationToken cancellationToken) Parameters Type Name Description System.String query CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source IFlickrPlaces.FindByLatLonAsync(Double, Double, GeoAccuracy, CancellationToken) Declaration async Task<Place> IFlickrPlaces.FindByLatLonAsync(double latitude, double longitude, GeoAccuracy accuracy, CancellationToken cancellationToken) Parameters Type Name Description System.Double latitude System.Double longitude GeoAccuracy accuracy CancellationToken cancellationToken Returns Type Description Task < Place > | Improve this Doc View Source IFlickrPlaces.GetChildrenWithPhotosPublicAsync(PlaceId, CancellationToken) Declaration async Task<PlaceCollection> IFlickrPlaces.GetChildrenWithPhotosPublicAsync(PlaceId placeId, CancellationToken cancellationToken) Parameters Type Name Description PlaceId placeId CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source IFlickrPlaces.GetChildrenWithPhotosPublicAsync(WoeId, CancellationToken) Declaration async Task<PlaceCollection> IFlickrPlaces.GetChildrenWithPhotosPublicAsync(WoeId woeId, CancellationToken cancellationToken) Parameters Type Name Description WoeId woeId CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source IFlickrPlaces.GetInfoAsync(PlaceId, CancellationToken) Declaration async Task<PlaceInfo> IFlickrPlaces.GetInfoAsync(PlaceId placeId, CancellationToken cancellationToken) Parameters Type Name Description PlaceId placeId CancellationToken cancellationToken Returns Type Description Task < PlaceInfo > | Improve this Doc View Source IFlickrPlaces.GetInfoAsync(WoeId, CancellationToken) Declaration async Task<PlaceInfo> IFlickrPlaces.GetInfoAsync(WoeId woeId, CancellationToken cancellationToken) Parameters Type Name Description WoeId woeId CancellationToken cancellationToken Returns Type Description Task < PlaceInfo > | Improve this Doc View Source IFlickrPlaces.GetInfoByUrlAsync(String, CancellationToken) Declaration async Task<PlaceInfo> IFlickrPlaces.GetInfoByUrlAsync(string url, CancellationToken cancellationToken) Parameters Type Name Description System.String url CancellationToken cancellationToken Returns Type Description Task < PlaceInfo > | Improve this Doc View Source IFlickrPlaces.GetPlaceTypesAsync(CancellationToken) Declaration async Task<PlaceTypeInfoCollection> IFlickrPlaces.GetPlaceTypesAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < PlaceTypeInfoCollection > | Improve this Doc View Source IFlickrPlaces.GetShapeHistoryAsync(PlaceId, CancellationToken) Declaration async Task<ShapeDataCollection> IFlickrPlaces.GetShapeHistoryAsync(PlaceId placeId, CancellationToken cancellationToken) Parameters Type Name Description PlaceId placeId CancellationToken cancellationToken Returns Type Description Task < ShapeDataCollection > | Improve this Doc View Source IFlickrPlaces.GetShapeHistoryAsync(WoeId, CancellationToken) Declaration async Task<ShapeDataCollection> IFlickrPlaces.GetShapeHistoryAsync(WoeId woeId, CancellationToken cancellationToken) Parameters Type Name Description WoeId woeId CancellationToken cancellationToken Returns Type Description Task < ShapeDataCollection > | Improve this Doc View Source IFlickrPlaces.GetTopPlacesListAsync(PlaceType, Nullable<DateTime>, String, String, CancellationToken) Declaration async Task<PlaceCollection> IFlickrPlaces.GetTopPlacesListAsync(PlaceType placeType, DateTime? date, string placeId, string woeId, CancellationToken cancellationToken) Parameters Type Name Description PlaceType placeType System.Nullable < DateTime > date System.String placeId System.String woeId CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source IFlickrPlaces.PlacesForBoundingBoxAsync(BoundaryBox, PlaceType, CancellationToken) Declaration async Task<PlaceCollection> IFlickrPlaces.PlacesForBoundingBoxAsync(BoundaryBox boundaryBox, PlaceType placeType, CancellationToken cancellationToken) Parameters Type Name Description BoundaryBox boundaryBox PlaceType placeType CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source IFlickrPlaces.PlacesForContactsAsync(PlaceType, String, String, Int32, ContactSearch, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Declaration async Task<PlaceCollection> IFlickrPlaces.PlacesForContactsAsync(PlaceType placeType, string woeId, string placeId, int threshold, ContactSearch contactType, DateTime? minUploadDate, DateTime? maxUploadDate, DateTime? minTakenDate, DateTime? maxTakenDate, CancellationToken cancellationToken) Parameters Type Name Description PlaceType placeType System.String woeId System.String placeId System.Int32 threshold ContactSearch contactType System.Nullable < DateTime > minUploadDate System.Nullable < DateTime > maxUploadDate System.Nullable < DateTime > minTakenDate System.Nullable < DateTime > maxTakenDate CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source IFlickrPlaces.PlacesForTagsAsync(PlaceType, String, String, Int32, IEnumerable<String>, TagMode, IEnumerable<String>, MachineTagMode, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Declaration async Task<PlaceCollection> IFlickrPlaces.PlacesForTagsAsync(PlaceType placeType, string woeId, string placeId, int threshold, IEnumerable<string> tags, TagMode tagMode, IEnumerable<string> machineTags, MachineTagMode machineTagMode, DateTime? minUploadDate, DateTime? maxUploadDate, DateTime? minTakenDate, DateTime? maxTakenDate, CancellationToken cancellationToken) Parameters Type Name Description PlaceType placeType System.String woeId System.String placeId System.Int32 threshold IEnumerable < System.String > tags TagMode tagMode IEnumerable < System.String > machineTags MachineTagMode machineTagMode System.Nullable < DateTime > minUploadDate System.Nullable < DateTime > maxUploadDate System.Nullable < DateTime > minTakenDate System.Nullable < DateTime > maxTakenDate CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source IFlickrPlaces.PlacesForUserAsync(PlaceType, String, String, Int32, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Declaration async Task<PlaceCollection> IFlickrPlaces.PlacesForUserAsync(PlaceType placeType, string woeId, string placeId, int threshold, DateTime? minUploadDate, DateTime? maxUploadDate, DateTime? minTakenDate, DateTime? maxTakenDate, CancellationToken cancellationToken) Parameters Type Name Description PlaceType placeType System.String woeId System.String placeId System.Int32 threshold System.Nullable < DateTime > minUploadDate System.Nullable < DateTime > maxUploadDate System.Nullable < DateTime > minTakenDate System.Nullable < DateTime > maxTakenDate CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source IFlickrPlaces.TagsForPlaceAsync(PlaceId, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Declaration async Task<TagCollection> IFlickrPlaces.TagsForPlaceAsync(PlaceId placeId, DateTime? minUploadDate, DateTime? maxUploadDate, DateTime? minTakenDate, DateTime? maxTakenDate, CancellationToken cancellationToken) Parameters Type Name Description PlaceId placeId System.Nullable < DateTime > minUploadDate System.Nullable < DateTime > maxUploadDate System.Nullable < DateTime > minTakenDate System.Nullable < DateTime > maxTakenDate CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source IFlickrPlaces.TagsForPlaceAsync(WoeId, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Declaration async Task<TagCollection> IFlickrPlaces.TagsForPlaceAsync(WoeId woeId, DateTime? minUploadDate, DateTime? maxUploadDate, DateTime? minTakenDate, DateTime? maxTakenDate, CancellationToken cancellationToken) Parameters Type Name Description WoeId woeId System.Nullable < DateTime > minUploadDate System.Nullable < DateTime > maxUploadDate System.Nullable < DateTime > minTakenDate System.Nullable < DateTime > maxTakenDate CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source IFlickrPrefs.GetContentTypeAsync(CancellationToken) Declaration async Task<ContentType> IFlickrPrefs.GetContentTypeAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < ContentType > | Improve this Doc View Source IFlickrPrefs.GetGeoPermsAsync(CancellationToken) Declaration async Task<UserGeoPermissions> IFlickrPrefs.GetGeoPermsAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < UserGeoPermissions > | Improve this Doc View Source IFlickrPrefs.GetHiddenAsync(CancellationToken) Declaration async Task<HiddenFromSearch> IFlickrPrefs.GetHiddenAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < HiddenFromSearch > | Improve this Doc View Source IFlickrPrefs.GetPrivacyAsync(CancellationToken) Declaration async Task<PrivacyFilter> IFlickrPrefs.GetPrivacyAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < PrivacyFilter > | Improve this Doc View Source IFlickrPrefs.GetSafetyLevelAsync(CancellationToken) Declaration async Task<SafetyLevel> IFlickrPrefs.GetSafetyLevelAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < SafetyLevel > | Improve this Doc View Source IFlickrProfile.GetProfileAsync(String, CancellationToken) Declaration async Task<Profile> IFlickrProfile.GetProfileAsync(string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String userId CancellationToken cancellationToken Returns Type Description Task < Profile > | Improve this Doc View Source IFlickrPush.GetSubscriptionsAsync(CancellationToken) Declaration async Task<SubscriptionCollection> IFlickrPush.GetSubscriptionsAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < SubscriptionCollection > | Improve this Doc View Source IFlickrPush.GetTopicsAsync(CancellationToken) Declaration async Task<string[]> IFlickrPush.GetTopicsAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.String []> | Improve this Doc View Source IFlickrPush.SubscribeAsync(String, String, String, String, Nullable<Int32>, IEnumerable<WoeId>, IEnumerable<PlaceId>, Nullable<Double>, Nullable<Double>, Nullable<Int32>, RadiusUnit, GeoAccuracy, IEnumerable<String>, IEnumerable<String>, CancellationToken) Declaration async Task IFlickrPush.SubscribeAsync(string topic, string callback, string verify, string verifyToken, int? leaseSeconds, IEnumerable<WoeId> woeIds, IEnumerable<PlaceId> placeIds, double? latitude, double? longitude, int? radius, RadiusUnit radiusUnits, GeoAccuracy accuracy, IEnumerable<string> nsids, IEnumerable<string> tags, CancellationToken cancellationToken) Parameters Type Name Description System.String topic System.String callback System.String verify System.String verifyToken System.Nullable < System.Int32 > leaseSeconds IEnumerable < WoeId > woeIds IEnumerable < PlaceId > placeIds System.Nullable < System.Double > latitude System.Nullable < System.Double > longitude System.Nullable < System.Int32 > radius RadiusUnit radiusUnits GeoAccuracy accuracy IEnumerable < System.String > nsids IEnumerable < System.String > tags CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrPush.UnsubscribeAsync(String, String, String, String, CancellationToken) Declaration async Task IFlickrPush.UnsubscribeAsync(string topic, string callback, string verify, string verifyToken, CancellationToken cancellationToken) Parameters Type Name Description System.String topic System.String callback System.String verify System.String verifyToken CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrReflection.GetMethodInfoAsync(String, CancellationToken) Declaration async Task<Method> IFlickrReflection.GetMethodInfoAsync(string methodName, CancellationToken cancellationToken) Parameters Type Name Description System.String methodName CancellationToken cancellationToken Returns Type Description Task < Method > | Improve this Doc View Source IFlickrReflection.GetMethodsAsync(CancellationToken) Declaration async Task<MethodCollection> IFlickrReflection.GetMethodsAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < MethodCollection > | Improve this Doc View Source IFlickrStats.GetCollectionDomainsAsync(DateTime, String, Int32, Int32, CancellationToken) Declaration async Task<StatDomainCollection> IFlickrStats.GetCollectionDomainsAsync(DateTime date, string collectionId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String collectionId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < StatDomainCollection > | Improve this Doc View Source IFlickrStats.GetCollectionReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) Declaration async Task<StatReferrerCollection> IFlickrStats.GetCollectionReferrersAsync(DateTime date, string domain, string collectionId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String domain System.String collectionId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < StatReferrerCollection > | Improve this Doc View Source IFlickrStats.GetCollectionStatsAsync(DateTime, String, CancellationToken) Declaration async Task<Stats> IFlickrStats.GetCollectionStatsAsync(DateTime date, string collectionId, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String collectionId CancellationToken cancellationToken Returns Type Description Task < Stats > | Improve this Doc View Source IFlickrStats.GetCsvFilesAsync(CancellationToken) Declaration async Task<CsvFileCollection> IFlickrStats.GetCsvFilesAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < CsvFileCollection > | Improve this Doc View Source IFlickrStats.GetPhotoDomainsAsync(DateTime, String, Int32, Int32, CancellationToken) Declaration async Task<StatDomainCollection> IFlickrStats.GetPhotoDomainsAsync(DateTime date, string photoId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String photoId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < StatDomainCollection > | Improve this Doc View Source IFlickrStats.GetPhotoReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) Declaration async Task<StatReferrerCollection> IFlickrStats.GetPhotoReferrersAsync(DateTime date, string domain, string photoId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String domain System.String photoId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < StatReferrerCollection > | Improve this Doc View Source IFlickrStats.GetPhotosetDomainsAsync(DateTime, String, Int32, Int32, CancellationToken) Declaration async Task<StatDomainCollection> IFlickrStats.GetPhotosetDomainsAsync(DateTime date, string photosetId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String photosetId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < StatDomainCollection > | Improve this Doc View Source IFlickrStats.GetPhotosetReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) Declaration async Task<StatReferrerCollection> IFlickrStats.GetPhotosetReferrersAsync(DateTime date, string domain, string photosetId, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String domain System.String photosetId System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < StatReferrerCollection > | Improve this Doc View Source IFlickrStats.GetPhotosetStatsAsync(DateTime, String, CancellationToken) Declaration async Task<Stats> IFlickrStats.GetPhotosetStatsAsync(DateTime date, string photosetId, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String photosetId CancellationToken cancellationToken Returns Type Description Task < Stats > | Improve this Doc View Source IFlickrStats.GetPhotoStatsAsync(DateTime, String, CancellationToken) Declaration async Task<Stats> IFlickrStats.GetPhotoStatsAsync(DateTime date, string photoId, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String photoId CancellationToken cancellationToken Returns Type Description Task < Stats > | Improve this Doc View Source IFlickrStats.GetPhotostreamDomainsAsync(DateTime, Int32, Int32, CancellationToken) Declaration async Task<StatDomainCollection> IFlickrStats.GetPhotostreamDomainsAsync(DateTime date, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < StatDomainCollection > | Improve this Doc View Source IFlickrStats.GetPhotostreamReferrersAsync(DateTime, String, Int32, Int32, CancellationToken) Declaration async Task<StatReferrerCollection> IFlickrStats.GetPhotostreamReferrersAsync(DateTime date, string domain, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime date System.String domain System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < StatReferrerCollection > | Improve this Doc View Source IFlickrStats.GetPhotostreamStatsAsync(DateTime, CancellationToken) Declaration async Task<Stats> IFlickrStats.GetPhotostreamStatsAsync(DateTime date, CancellationToken cancellationToken) Parameters Type Name Description DateTime date CancellationToken cancellationToken Returns Type Description Task < Stats > | Improve this Doc View Source IFlickrStats.GetPopularPhotosAsync(DateTime, PopularitySort, Int32, Int32, CancellationToken) Declaration async Task<PopularPhotoCollection> IFlickrStats.GetPopularPhotosAsync(DateTime date, PopularitySort sort, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description DateTime date PopularitySort sort System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < PopularPhotoCollection > | Improve this Doc View Source IFlickrStats.GetTotalViewsAsync(DateTime, CancellationToken) Declaration async Task<StatViews> IFlickrStats.GetTotalViewsAsync(DateTime date, CancellationToken cancellationToken) Parameters Type Name Description DateTime date CancellationToken cancellationToken Returns Type Description Task < StatViews > | Improve this Doc View Source IFlickrTags.GetClusterPhotosAsync(Cluster, PhotoSearchExtras, CancellationToken) Declaration async Task<PhotoCollection> IFlickrTags.GetClusterPhotosAsync(Cluster cluster, PhotoSearchExtras extras, CancellationToken cancellationToken) Parameters Type Name Description Cluster cluster PhotoSearchExtras extras CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source IFlickrTags.GetClustersAsync(String, CancellationToken) Declaration async Task<ClusterCollection> IFlickrTags.GetClustersAsync(string tag, CancellationToken cancellationToken) Parameters Type Name Description System.String tag CancellationToken cancellationToken Returns Type Description Task < ClusterCollection > | Improve this Doc View Source IFlickrTags.GetHotListAsync(String, Nullable<Int32>, CancellationToken) Declaration async Task<HotTagCollection> IFlickrTags.GetHotListAsync(string period, int? count, CancellationToken cancellationToken) Parameters Type Name Description System.String period System.Nullable < System.Int32 > count CancellationToken cancellationToken Returns Type Description Task < HotTagCollection > | Improve this Doc View Source IFlickrTags.GetListPhotoAsync(String, CancellationToken) Declaration async Task<Collection<PhotoInfoTag>> IFlickrTags.GetListPhotoAsync(string photoId, CancellationToken cancellationToken) Parameters Type Name Description System.String photoId CancellationToken cancellationToken Returns Type Description Task < Collection < PhotoInfoTag >> | Improve this Doc View Source IFlickrTags.GetListUserAsync(String, CancellationToken) Declaration async Task<TagCollection> IFlickrTags.GetListUserAsync(string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String userId CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source IFlickrTags.GetListUserPopularAsync(String, Nullable<Int32>, CancellationToken) Declaration async Task<TagCollection> IFlickrTags.GetListUserPopularAsync(string userId, int? count, CancellationToken cancellationToken) Parameters Type Name Description System.String userId System.Nullable < System.Int32 > count CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source IFlickrTags.GetListUserRawAsync(String, CancellationToken) Declaration async Task<RawTagCollection> IFlickrTags.GetListUserRawAsync(string tag, CancellationToken cancellationToken) Parameters Type Name Description System.String tag CancellationToken cancellationToken Returns Type Description Task < RawTagCollection > | Improve this Doc View Source IFlickrTags.GetMostFrequentlyUsedAsync(CancellationToken) Declaration async Task<TagCollection> IFlickrTags.GetMostFrequentlyUsedAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source IFlickrTags.GetRelatedAsync(String, CancellationToken) Declaration async Task<TagCollection> IFlickrTags.GetRelatedAsync(string tag, CancellationToken cancellationToken) Parameters Type Name Description System.String tag CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source IFlickrTest.EchoAsync(Dictionary<String, String>, CancellationToken) Declaration async Task<EchoResponseDictionary> IFlickrTest.EchoAsync(Dictionary<string, string> parameters, CancellationToken cancellationToken) Parameters Type Name Description Dictionary < System.String , System.String > parameters CancellationToken cancellationToken Returns Type Description Task < EchoResponseDictionary > | Improve this Doc View Source IFlickrTest.LoginAsync(CancellationToken) Declaration async Task<FoundUser> IFlickrTest.LoginAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < FoundUser > | Improve this Doc View Source IFlickrTest.NullAsync(CancellationToken) Declaration async Task IFlickrTest.NullAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source IFlickrUpload.ReplacePictureAsync(Stream, String, String, IProgress<Double>, CancellationToken) Declaration async Task<string> IFlickrUpload.ReplacePictureAsync(Stream stream, string fileName, string photoId, IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description Stream stream System.String fileName System.String photoId IProgress < System.Double > progress CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source IFlickrUpload.UploadPictureAsync(Stream, String, String, String, String, Boolean, Boolean, Boolean, ContentType, SafetyLevel, HiddenFromSearch, IProgress<Double>, CancellationToken) Declaration async Task<string> IFlickrUpload.UploadPictureAsync(Stream stream, string fileName, string title, string description, string tags, bool isPublic, bool isFamily, bool isFriend, ContentType contentType, SafetyLevel safetyLevel, HiddenFromSearch hiddenFromSearch, IProgress<double> progress, CancellationToken cancellationToken) Parameters Type Name Description Stream stream System.String fileName System.String title System.String description System.String tags System.Boolean isPublic System.Boolean isFamily System.Boolean isFriend ContentType contentType SafetyLevel safetyLevel HiddenFromSearch hiddenFromSearch IProgress < System.Double > progress CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source IFlickrUrls.GetGroupAsync(String, CancellationToken) Declaration async Task<string> IFlickrUrls.GetGroupAsync(string groupId, CancellationToken cancellationToken) Parameters Type Name Description System.String groupId CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source IFlickrUrls.GetUserPhotosAsync(String, CancellationToken) Declaration async Task<string> IFlickrUrls.GetUserPhotosAsync(string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String userId CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source IFlickrUrls.GetUserProfileAsync(String, CancellationToken) Declaration async Task<string> IFlickrUrls.GetUserProfileAsync(string userId, CancellationToken cancellationToken) Parameters Type Name Description System.String userId CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source IFlickrUrls.LookupGalleryAsync(String, CancellationToken) Declaration async Task<Gallery> IFlickrUrls.LookupGalleryAsync(string url, CancellationToken cancellationToken) Parameters Type Name Description System.String url CancellationToken cancellationToken Returns Type Description Task < Gallery > | Improve this Doc View Source IFlickrUrls.LookupGroupAsync(String, CancellationToken) Declaration async Task<string> IFlickrUrls.LookupGroupAsync(string urlToFind, CancellationToken cancellationToken) Parameters Type Name Description System.String urlToFind CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source IFlickrUrls.LookupUserAsync(String, CancellationToken) Declaration async Task<FoundUser> IFlickrUrls.LookupUserAsync(string urlToFind, CancellationToken cancellationToken) Parameters Type Name Description System.String urlToFind CancellationToken cancellationToken Returns Type Description Task < FoundUser > Implements IFlickrActivity IFlickrBlogs IFlickrCameras IFlickrCollections IFlickrCommons IFlickrContacts IFlickrFavorites IFlickrGalleries IFlickrGroups IFlickrGroupsDiscuss IFlickrGroupsDiscussReplies IFlickrGroupsDiscussTopics IFlickrGroupsMembers IFlickrGroupsPools IFlickrInterestingness IFlickrMachineTags IFlickrOAuth IFlickrPanda IFlickrPeople IFlickrPhotosets IFlickrPhotosetsComments IFlickrPhotos IFlickrPhotosComments IFlickrPhotosGeo IFlickrPhotosLicenses IFlickrPhotosMisc IFlickrPhotosNotes IFlickrPhotosPeople IFlickrPhotosSuggestions IFlickrPlaces IFlickrPrefs IFlickrProfile IFlickrPush IFlickrReflection IFlickrStats IFlickrTags IFlickrTest IFlickrUpload IFlickrUrls"
  },
  "api/Flickr.Net.Core.Flickrs.Results.FlickrResult-1.html": {
    "href": "api/Flickr.Net.Core.Flickrs.Results.FlickrResult-1.html",
    "title": "Class FlickrResult<T> | Flickr.Net",
    "keywords": "Class FlickrResult<T> Contains details of the result from Flickr, or the error if an error occurred. Inheritance System.Object FlickrResult<T> Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Flickrs.Results Assembly : Flickr.Net.Core.dll Syntax public class FlickrResult<T> Type Parameters Name Description T The type of the result returned from Flickr. Properties | Improve this Doc View Source Error If the call was unsuccessful then this contains the exception. Declaration public Exception Error { get; set; } Property Value Type Description Exception | Improve this Doc View Source ErrorCode If an error was returned by the Flickr API then this will contain the error code. Declaration public int ErrorCode { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source ErrorMessage If an error was returned by the Flickr API then this will contain the error message. Declaration public string ErrorMessage { get; set; } Property Value Type Description System.String | Improve this Doc View Source HasError True if the result returned an error. Declaration public bool HasError { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source Result If the call was successful then this contains the result. Declaration public T Result { get; set; } Property Value Type Description T"
  },
  "api/Flickr.Net.Core.Flickrs.Results.html": {
    "href": "api/Flickr.Net.Core.Flickrs.Results.html",
    "title": "Namespace Flickr.Net.Core.Flickrs.Results | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Flickrs.Results Classes FlickrResult<T> Contains details of the result from Flickr, or the error if an error occurred."
  },
  "api/Flickr.Net.Core.html": {
    "href": "api/Flickr.Net.Core.html",
    "title": "Namespace Flickr.Net.Core | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core Classes Flickr The main Flickr class. Interfaces IFlickrActivity The flickr activity. IFlickrBlogs The flickr blogs. IFlickrCameras The flickr cameras. IFlickrCollections The flickr collections. IFlickrCommons The flickr commons. IFlickrContacts The flickr contacts. IFlickrFavorites The flickr favorites. IFlickrGalleries The flickr galleries. IFlickrGroups The flickr groups. IFlickrGroupsDiscuss The flickr groups discuss. IFlickrGroupsDiscussReplies The flickr groups discuss replies. IFlickrGroupsDiscussTopics The flickr groups discuss topics. IFlickrGroupsMembers The flickr groups members. IFlickrGroupsPools The flickr groups pools. IFlickrInterestingness The flickr interestingness. IFlickrMachineTags The flickr machine tags. IFlickrOAuth The flickr o auth. IFlickrPanda The flickr panda. IFlickrPeople The flickr people. IFlickrPhotos The flickr photos. IFlickrPhotosComments The flickr photos comments. IFlickrPhotosets The flickr photosets. IFlickrPhotosetsComments The flickr photosets comments. IFlickrPhotosGeo The flickr photos geo. IFlickrPhotosLicenses The flickr photos licenses. IFlickrPhotosMisc The flickr photos misc. IFlickrPhotosNotes The flickr photos notes. IFlickrPhotosPeople The flickr photos people. IFlickrPhotosSuggestions The flickr photos suggestions. IFlickrPlaces The flickr places. IFlickrPrefs The flickr prefs. IFlickrProfile The flickr profile. IFlickrPush The flickr push. IFlickrReflection The flickr reflection. IFlickrStats The flickr stats. IFlickrTags The flickr tags. IFlickrTest The flickr test. IFlickrUpload The flickr upload. IFlickrUrls The flickr urls."
  },
  "api/Flickr.Net.Core.IFlickrActivity.html": {
    "href": "api/Flickr.Net.Core.IFlickrActivity.html",
    "title": "Interface IFlickrActivity | Flickr.Net",
    "keywords": "Interface IFlickrActivity The flickr activity. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrActivity Methods | Improve this Doc View Source UserCommentsAsync(Int32, Int32, CancellationToken) Returns a list of recent activity on photos commented on by the calling user. Declaration Task<ActivityItemCollection> UserCommentsAsync(int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 page The page of the activity to return. System.Int32 perPage The number of activities to return per page. CancellationToken cancellationToken Returns Type Description Task < ActivityItemCollection > Remarks Do not poll this method more than once an hour. | Improve this Doc View Source UserPhotosAsync(Int32, TimeType, Int32, Int32, CancellationToken) Returns a list of recent activity on photos belonging to the calling user. Declaration Task<ActivityItemCollection> UserPhotosAsync(int timePeriod, TimeType timeType = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 timePeriod The number of days or hours you want to get activity for. TimeType timeType 'd' for days, 'h' for hours. System.Int32 page The page numver of the activity to return. System.Int32 perPage The number of activities to return per page. CancellationToken cancellationToken Returns Type Description Task < ActivityItemCollection > Remarks Do not poll this method more than once an hour."
  },
  "api/Flickr.Net.Core.IFlickrBlogs.html": {
    "href": "api/Flickr.Net.Core.IFlickrBlogs.html",
    "title": "Interface IFlickrBlogs | Flickr.Net",
    "keywords": "Interface IFlickrBlogs The flickr blogs. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrBlogs Methods | Improve this Doc View Source GetListAsync(CancellationToken) Gets a list of blogs that have been set up by the user. Requires authentication. Declaration Task<BlogCollection> GetListAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < BlogCollection > | Improve this Doc View Source GetServicesAsync(CancellationToken) Return a list of Flickr supported blogging services. Declaration Task<BlogServiceCollection> GetServicesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < BlogServiceCollection > | Improve this Doc View Source PostPhotoAsync(String, String, String, String, String, CancellationToken) Posts a photo already uploaded to a blog. Requires authentication. Declaration Task<NoResponse> PostPhotoAsync(string blogId, string photoId, string title, string description, string blogPassword = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String blogId The Id of the blog to post the photo too. System.String photoId The Id of the photograph to post. System.String title The title of the blog post. System.String description The body of the blog post. System.String blogPassword The password of the blog if it is not already stored in flickr. CancellationToken cancellationToken Returns Type Description Task < NoResponse >"
  },
  "api/Flickr.Net.Core.IFlickrCameras.html": {
    "href": "api/Flickr.Net.Core.IFlickrCameras.html",
    "title": "Interface IFlickrCameras | Flickr.Net",
    "keywords": "Interface IFlickrCameras The flickr cameras. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrCameras Methods | Improve this Doc View Source GetBrandModelsAsync(String, CancellationToken) Get a list of camera models for a particular brand id. Declaration Task<CameraCollection> GetBrandModelsAsync(string brandId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String brandId The ID of the brand you want the models of. CancellationToken cancellationToken Returns Type Description Task < CameraCollection > | Improve this Doc View Source GetBrandsAsync(CancellationToken) Gets a list of camera brands. Declaration Task<BrandCollection> GetBrandsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < BrandCollection >"
  },
  "api/Flickr.Net.Core.IFlickrCollections.html": {
    "href": "api/Flickr.Net.Core.IFlickrCollections.html",
    "title": "Interface IFlickrCollections | Flickr.Net",
    "keywords": "Interface IFlickrCollections The flickr collections. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrCollections Methods | Improve this Doc View Source GetInfoAsync(String, CancellationToken) Gets information about a collection. Requires authentication with 'read' access. Declaration Task<CollectionInfo> GetInfoAsync(string collectionId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String collectionId The ID for the collection to return. CancellationToken cancellationToken Returns Type Description Task < CollectionInfo > | Improve this Doc View Source GetTreeAsync(String, String, CancellationToken) Gets a tree of collection. Declaration Task<CollectionCollection> GetTreeAsync(string collectionId = null, string userId = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String collectionId System.String userId The ID of the user to fetch the tree for, or null if using the authenticated user. CancellationToken cancellationToken Returns Type Description Task < CollectionCollection >"
  },
  "api/Flickr.Net.Core.IFlickrCommons.html": {
    "href": "api/Flickr.Net.Core.IFlickrCommons.html",
    "title": "Interface IFlickrCommons | Flickr.Net",
    "keywords": "Interface IFlickrCommons The flickr commons. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrCommons Methods | Improve this Doc View Source GetInstitutionsAsync(CancellationToken) Gets a collection of Flickr Commons institutions. Declaration Task<InstitutionCollection> GetInstitutionsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < InstitutionCollection >"
  },
  "api/Flickr.Net.Core.IFlickrContacts.html": {
    "href": "api/Flickr.Net.Core.IFlickrContacts.html",
    "title": "Interface IFlickrContacts | Flickr.Net",
    "keywords": "Interface IFlickrContacts The flickr contacts. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrContacts Methods | Improve this Doc View Source GetListAsync(ContactType, Int32, Int32, CancellationToken) Gets a list of contacts for the logged in user. Requires authentication. Declaration Task<ContactCollection> GetListAsync(ContactType filter = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description ContactType filter An optional filter of the results. The following values are valid: \"friends\", \"family\", \"both\", \"neither\". System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of contacts to return per page. If this argument is omitted, it defaults to 1000. The maximum allowed value is 1000. CancellationToken cancellationToken Returns Type Description Task < ContactCollection > | Improve this Doc View Source GetListRecentlyUploadedAsync(ContactSearch, Nullable<DateTime>, CancellationToken) Return a list of contacts for a user who have recently uploaded photos along with the total count of photos uploaded. Declaration Task<ContactCollection> GetListRecentlyUploadedAsync(ContactSearch filter = null, DateTime? dateLastUpdated = null, CancellationToken cancellationToken = null) Parameters Type Name Description ContactSearch filter Limit the result set to all contacts or only those who are friends or family. Valid options are: \"ff\" friends and family, and \"all\" all your contacts. Default value is \"all\". System.Nullable < DateTime > dateLastUpdated Limits the resultset to contacts that have uploaded photos since this date. The default offset is (1) hour and the maximum (24) hours. CancellationToken cancellationToken Returns Type Description Task < ContactCollection > Remarks This method is still considered experimental. We don't plan for it to change or to go away but so long as this notice is present you should write your code accordingly. | Improve this Doc View Source GetPublicListAsync(String, Int32, Int32, CancellationToken) Gets a list of the given users contact, or those that are publically avaiable. Declaration Task<ContactCollection> GetPublicListAsync(string userId, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The Id of the user who's contacts you want to return. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of contacts to return per page. If this argument is omitted, it defaults to 1000. The maximum allowed value is 1000. CancellationToken cancellationToken Returns Type Description Task < ContactCollection > | Improve this Doc View Source GetTaggingSuggestionsAsync(Int32, Int32, CancellationToken) Returns a list of contacts who Flickr suggests you might want to tag. Declaration Task<ContactCollection> GetTaggingSuggestionsAsync(int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 page The page of results to return. Default is 1. System.Int32 perPage The number of contacts to return per page. CancellationToken cancellationToken Returns Type Description Task < ContactCollection > Remarks Not sure exactly what the purpose of this function is as it appears to just return a list of all my contacts."
  },
  "api/Flickr.Net.Core.IFlickrFavorites.html": {
    "href": "api/Flickr.Net.Core.IFlickrFavorites.html",
    "title": "Interface IFlickrFavorites | Flickr.Net",
    "keywords": "Interface IFlickrFavorites The flickr favorites. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrFavorites Methods | Improve this Doc View Source AddAsync(String, CancellationToken) Adds a photo to the logged in favourites. Requires authentication. Declaration Task AddAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photograph to add. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetContextAsync(String, String, CancellationToken) Get the next and previous favorites in a users list of favorites, based on one of their favorites. Declaration Task<FavoriteContext> GetContextAsync(string photoId, string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The photo id of the photo for which to find the next and previous favorites. System.String userId The user id of the users whose favorites you wish to search. CancellationToken cancellationToken Returns Type Description Task < FavoriteContext > | Improve this Doc View Source GetListAsync(String, Nullable<DateTime>, Nullable<DateTime>, PhotoSearchExtras, Int32, Int32, CancellationToken) Get a list of favourites for the specified user. Declaration Task<PhotoCollection> GetListAsync(string userId = null, DateTime? minFavoriteDate = null, DateTime? maxFavoriteDate = null, PhotoSearchExtras extras = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user id of the user whose favourites you wish to retrieve. System.Nullable < DateTime > minFavoriteDate Minimum date that a photo was favorited on. System.Nullable < DateTime > maxFavoriteDate Maximum date that a photo was favorited on. PhotoSearchExtras extras The extras to return for each photo. System.Int32 page The page to download this time. System.Int32 perPage Number of photos to include per page. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source GetPublicListAsync(String, Int32, Int32, CancellationToken) Gets the public favourites for a specified user. Declaration Task<PhotoCollection> GetPublicListAsync(string userId, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The is of the user whose favourites you wish to return. System.Int32 page The specific page to return. System.Int32 perPage The number of photos to return per page. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > Remarks This function differs from GetListAsync(String, Nullable<DateTime>, Nullable<DateTime>, PhotoSearchExtras, Int32, Int32, CancellationToken) in that the user id is not optional. | Improve this Doc View Source RemoveAsync(String, CancellationToken) Removes a photograph from the logged in users favourites. Requires authentication. Declaration Task RemoveAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photograph to remove. CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Flickr.Net.Core.IFlickrGalleries.html": {
    "href": "api/Flickr.Net.Core.IFlickrGalleries.html",
    "title": "Interface IFlickrGalleries | Flickr.Net",
    "keywords": "Interface IFlickrGalleries The flickr galleries. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrGalleries Methods | Improve this Doc View Source AddPhotoAsync(String, String, String, CancellationToken) Add a photo to a gallery. Declaration Task AddPhotoAsync(string galleryId, string photoId, string comment = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String galleryId The ID of the gallery to add a photo to. Note: this is the compound ID returned in methods like GetListAsync(String, Int32, Int32, CancellationToken) , and GetListForPhotoAsync(String, Int32, Int32, CancellationToken) . System.String photoId The photo ID to add to the gallery System.String comment A short comment or story to accompany the photo. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source CreateAsync(String, String, String, CancellationToken) Create a new gallery for the calling user. Declaration Task CreateAsync(string title, string description, string primaryPhotoId = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String title The name of the gallery. System.String description A short description for the gallery. System.String primaryPhotoId The first photo to add to your gallery. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditMetaAsync(String, String, String, CancellationToken) Modify the meta-data for a gallery. Declaration Task EditMetaAsync(string galleryId, string title, string description = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String galleryId The gallery ID to update. System.String title The new title for the gallery. System.String description The new description for the gallery. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditPhotoAsync(String, String, String, CancellationToken) Edit the comment for a gallery photo. Declaration Task EditPhotoAsync(string galleryId, string photoId, string comment, CancellationToken cancellationToken = null) Parameters Type Name Description System.String galleryId The ID of the gallery to add a photo to. Note: this is the compound ID returned in methods like GetListAsync(String, Int32, Int32, CancellationToken) , and GetListForPhotoAsync(String, Int32, Int32, CancellationToken) . System.String photoId The photo ID to add to the gallery. System.String comment The updated comment the photo. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditPhotosAsync(String, String, IEnumerable<String>, CancellationToken) Modify the photos in a gallery. Use this method to add, remove and re-order photos. Declaration Task EditPhotosAsync(string galleryId, string primaryPhotoId, IEnumerable<string> photoIds, CancellationToken cancellationToken = null) Parameters Type Name Description System.String galleryId The id of the gallery to modify. The gallery must belong to the calling user. System.String primaryPhotoId The id of the photo to use as the 'primary' photo for the gallery. This id must also be passed along in photo_ids list argument. IEnumerable < System.String > photoIds An enumeration of photo ids to include in the gallery. They will appear in the set in the order sent. This list must contain the primary photo id. This list of photos replaces the existing list. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetInfoAsync(String, CancellationToken) Get the information about a gallery. Declaration Task<Gallery> GetInfoAsync(string galleryId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String galleryId The gallery ID you are requesting information for. CancellationToken cancellationToken Returns Type Description Task < Gallery > | Improve this Doc View Source GetListAsync(String, Int32, Int32, CancellationToken) Gets a list of galleries for the specified user. Declaration Task<GalleryCollection> GetListAsync(string userId, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user to return the galleries for. System.Int32 page System.Int32 perPage CancellationToken cancellationToken Returns Type Description Task < GalleryCollection > | Improve this Doc View Source GetListForPhotoAsync(String, Int32, Int32, CancellationToken) Return the list of galleries to which a photo has been added. Galleries are returned sorted by date which the photo was added to the gallery. Declaration Task<GalleryCollection> GetListForPhotoAsync(string photoId, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo to fetch a list of galleries for. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of galleries to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. CancellationToken cancellationToken Returns Type Description Task < GalleryCollection > | Improve this Doc View Source GetPhotosAsync(String, PhotoSearchExtras, CancellationToken) Return the list of photos for a gallery. Declaration Task<GalleryPhotoCollection> GetPhotosAsync(string galleryId, PhotoSearchExtras extras = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String galleryId The ID of the gallery of photos to return. PhotoSearchExtras extras A list of extra information to fetch for each returned record. CancellationToken cancellationToken Returns Type Description Task < GalleryPhotoCollection > | Improve this Doc View Source RemovePhoto(String, String, String, CancellationToken) Remove a photo from a gallery (and optionally update the gallery description). Declaration Task RemovePhoto(string galleryId, string photoId, string fullResponse = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String galleryId System.String photoId System.String fullResponse CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Flickr.Net.Core.IFlickrGroups.html": {
    "href": "api/Flickr.Net.Core.IFlickrGroups.html",
    "title": "Interface IFlickrGroups | Flickr.Net",
    "keywords": "Interface IFlickrGroups The flickr groups. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrGroups Properties | Improve this Doc View Source Discuss Declaration IFlickrGroupsDiscuss Discuss { get; } Property Value Type Description IFlickrGroupsDiscuss | Improve this Doc View Source Members Declaration IFlickrGroupsMembers Members { get; } Property Value Type Description IFlickrGroupsMembers | Improve this Doc View Source Pools Declaration IFlickrGroupsPools Pools { get; } Property Value Type Description IFlickrGroupsPools Methods | Improve this Doc View Source GetInfoAsync(String, CancellationToken) Returns a object containing details about a group. Declaration Task<GroupFullInfo> GetInfoAsync(string groupId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String groupId The id of the group to return. CancellationToken cancellationToken Returns Type Description Task < GroupFullInfo > | Improve this Doc View Source JoinAsync(String, Boolean, CancellationToken) Specify a group for the authenticated user to join. Declaration Task JoinAsync(string groupId, bool acceptsRules = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String groupId The group id of the group to join. System.Boolean acceptsRules Specify true to signify that the user accepts the groups rules. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source JoinRequestAsync(String, String, Boolean, CancellationToken) Sends a request to the group admins to join an invite only group. Declaration Task JoinRequestAsync(string groupId, string message, bool acceptRules = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String groupId The ID of the group the user wishes to join. System.String message The message to send to the administrator. System.Boolean acceptRules A boolean confirming the user has accepted the rules of the group. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source LeaveAsync(String, Boolean, CancellationToken) Specify a group for the authenticated user to leave. Declaration Task LeaveAsync(string groupId, bool deletePhotos = false, CancellationToken cancellationToken = null) Parameters Type Name Description System.String groupId The group id of the group to leave. System.Boolean deletePhotos Specify true to delete all of the users photos when they leave the group. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SearchAsync(String, Int32, Int32, CancellationToken) Search the list of groups on Flickr for the text. Declaration Task<GroupSearchResultCollection> SearchAsync(string text, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String text The text to search for. System.Int32 page The page of the results to return. System.Int32 perPage The number of groups to list per page. CancellationToken cancellationToken Returns Type Description Task < GroupSearchResultCollection >"
  },
  "api/Flickr.Net.Core.IFlickrGroupsDiscuss.html": {
    "href": "api/Flickr.Net.Core.IFlickrGroupsDiscuss.html",
    "title": "Interface IFlickrGroupsDiscuss | Flickr.Net",
    "keywords": "Interface IFlickrGroupsDiscuss The flickr groups discuss. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrGroupsDiscuss Properties | Improve this Doc View Source Replies Declaration IFlickrGroupsDiscussReplies Replies { get; } Property Value Type Description IFlickrGroupsDiscussReplies | Improve this Doc View Source Topics Declaration IFlickrGroupsDiscussTopics Topics { get; } Property Value Type Description IFlickrGroupsDiscussTopics"
  },
  "api/Flickr.Net.Core.IFlickrGroupsDiscussReplies.html": {
    "href": "api/Flickr.Net.Core.IFlickrGroupsDiscussReplies.html",
    "title": "Interface IFlickrGroupsDiscussReplies | Flickr.Net",
    "keywords": "Interface IFlickrGroupsDiscussReplies The flickr groups discuss replies. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrGroupsDiscussReplies Methods | Improve this Doc View Source AddAsync(String, String, CancellationToken) Add a new reply to a topic. Declaration Task AddAsync(string topicId, string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.String topicId The id of the topic to add the reply to. System.String message The message content to add. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteAsync(String, String, CancellationToken) Delete a reply to a particular topic. Declaration Task DeleteAsync(string topicId, string replyId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String topicId The id of the topic to delete the reply from. System.String replyId The id of the reply to delete. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditAsync(String, String, String, CancellationToken) Edit the contents of a reply. Declaration Task EditAsync(string topicId, string replyId, string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.String topicId The id of the topic whose reply you want to edit. System.String replyId The id of the reply to edit. System.String message The new message content to replace the reply with. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetInfoAsync(String, String, CancellationToken) Gets the details of a particular reply. Declaration Task<TopicReply> GetInfoAsync(string topicId, string replyId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String topicId The id of the topic for whose reply you want the details of. System.String replyId The id of the reply you want the details of. CancellationToken cancellationToken Returns Type Description Task < TopicReply > | Improve this Doc View Source GetListAsync(String, Int32, Int32, CancellationToken) Gets a list of replies for a particular topic. Declaration Task<TopicReplyCollection> GetListAsync(string topicId, int perPage, int page = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String topicId The id of the topic to get the replies for. System.Int32 perPage The number of replies per page you wish to get. System.Int32 page The page of replies you wish to get. CancellationToken cancellationToken Returns Type Description Task < TopicReplyCollection >"
  },
  "api/Flickr.Net.Core.IFlickrGroupsDiscussTopics.html": {
    "href": "api/Flickr.Net.Core.IFlickrGroupsDiscussTopics.html",
    "title": "Interface IFlickrGroupsDiscussTopics | Flickr.Net",
    "keywords": "Interface IFlickrGroupsDiscussTopics The flickr groups discuss topics. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrGroupsDiscussTopics Methods | Improve this Doc View Source TopicsAddAsync(String, String, String, CancellationToken) Add a new topic to a group. Declaration Task TopicsAddAsync(string groupId, string subject, string message, CancellationToken cancellationToken = null) Parameters Type Name Description System.String groupId The id of the group to add a new topic too. System.String subject The subject line of the new topic. System.String message The message content of the new topic. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source TopicsGetInfoAsync(String, CancellationToken) Gets information on a particular topic with a group. Declaration Task<Topic> TopicsGetInfoAsync(string topicId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String topicId The id of the topic you with information on. CancellationToken cancellationToken Returns Type Description Task < Topic > | Improve this Doc View Source TopicsGetListAsync(String, Int32, Int32, CancellationToken) Gets a list of topics for a particular group. Declaration Task<TopicCollection> TopicsGetListAsync(string groupId, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String groupId The id of the group. System.Int32 page The page of topics you wish to return. System.Int32 perPage The number of topics per page to return. CancellationToken cancellationToken Returns Type Description Task < TopicCollection >"
  },
  "api/Flickr.Net.Core.IFlickrGroupsMembers.html": {
    "href": "api/Flickr.Net.Core.IFlickrGroupsMembers.html",
    "title": "Interface IFlickrGroupsMembers | Flickr.Net",
    "keywords": "Interface IFlickrGroupsMembers The flickr groups members. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrGroupsMembers Methods | Improve this Doc View Source GetListAsync(String, MemberTypes, Int32, Int32, CancellationToken) Get a list of the members of a group. Declaration Task<MemberCollection> GetListAsync(string groupId, MemberTypes memberTypes = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String groupId Return a list of members for this group. The group must be viewable by the Flickr member on whose behalf the API call is made. MemberTypes memberTypes The types of members to be returned. Can be more than one. System.Int32 page The page of the results to return (default is 1). System.Int32 perPage The number of members to return per page (default is 100, max is 500). CancellationToken cancellationToken Returns Type Description Task < MemberCollection > Remarks The call must be signed on behalf of a Flickr member, and the ability to see the group membership will be determined by the Flickr member's group privileges."
  },
  "api/Flickr.Net.Core.IFlickrGroupsPools.html": {
    "href": "api/Flickr.Net.Core.IFlickrGroupsPools.html",
    "title": "Interface IFlickrGroupsPools | Flickr.Net",
    "keywords": "Interface IFlickrGroupsPools The flickr groups pools. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrGroupsPools Methods | Improve this Doc View Source AddAsync(String, String, CancellationToken) Adds a photo to a pool you have permission to add photos to. Declaration Task AddAsync(string photoId, string groupId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of one of your photos to be added. System.String groupId The id of a group you are a member of. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetContextAsync(String, String, CancellationToken) Gets the context for a photo from within a group. This provides the id and thumbnail url for the next and previous photos in the group. Declaration Task<Context> GetContextAsync(string photoId, string groupId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The Photo ID for the photo you want the context for. System.String groupId The group ID for the group you want the context to be relevant to. CancellationToken cancellationToken Returns Type Description Task < Context > | Improve this Doc View Source GetGroupsAsync(Int32, Int32, CancellationToken) Returns a list of groups to which you can add photos. Declaration Task<MemberGroupInfoCollection> GetGroupsAsync(int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 page The page of the results to return. System.Int32 perPage The number of groups to list per page. CancellationToken cancellationToken Returns Type Description Task < MemberGroupInfoCollection > | Improve this Doc View Source GetPhotosAsync(String, String, String, PhotoSearchExtras, Int32, Int32, CancellationToken) Gets a list of photos for a given group. Declaration Task<PhotoCollection> GetPhotosAsync(string groupId, string tags = null, string userId = null, PhotoSearchExtras extras = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String groupId The group ID for the group. System.String tags Space seperated list of tags that photos returned must have. Currently only supports 1 tag at a time. System.String userId The group member to return photos for. PhotoSearchExtras extras The specifying which extras to return. All other overloads default to returning all extras. System.Int32 page The page to return. System.Int32 perPage The number of photos per page. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source RemoveAsync(String, String, CancellationToken) Remove a picture from a group. Declaration Task RemoveAsync(string photoId, string groupId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of one of your pictures you wish to remove. System.String groupId The id of the group to remove the picture from. CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Flickr.Net.Core.IFlickrInterestingness.html": {
    "href": "api/Flickr.Net.Core.IFlickrInterestingness.html",
    "title": "Interface IFlickrInterestingness | Flickr.Net",
    "keywords": "Interface IFlickrInterestingness The flickr interestingness. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrInterestingness Methods | Improve this Doc View Source GetListAsync(Nullable<DateTime>, PhotoSearchExtras, Int32, Int32, CancellationToken) Gets a list of photos from the most recent interstingness list. Declaration Task<PhotoCollection> GetListAsync(DateTime? date, PhotoSearchExtras extras, int page, int perPage, CancellationToken cancellationToken) Parameters Type Name Description System.Nullable < DateTime > date The date to return the interestingness photos for. PhotoSearchExtras extras The extra parameters to return along with the search results. See PhotoSearchOptions for more details. System.Int32 page The page of the results to return. System.Int32 perPage The number of results to return per page. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection >"
  },
  "api/Flickr.Net.Core.IFlickrMachineTags.html": {
    "href": "api/Flickr.Net.Core.IFlickrMachineTags.html",
    "title": "Interface IFlickrMachineTags | Flickr.Net",
    "keywords": "Interface IFlickrMachineTags The flickr machine tags. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrMachineTags Methods | Improve this Doc View Source GetNamespacesAsync(String, Int32, Int32, CancellationToken) Return a list of unique namespaces, optionally limited by a given predicate, in alphabetical order. Declaration Task<NamespaceCollection> GetNamespacesAsync(string predicate = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String predicate Limit the list of namespaces returned to those that have the following predicate. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. CancellationToken cancellationToken Returns Type Description Task < NamespaceCollection > | Improve this Doc View Source GetPairsAsync(String, String, Int32, Int32, CancellationToken) Return a list of unique namespace and predicate pairs, optionally limited by predicate or namespace, in alphabetical order. Declaration Task<PairCollection> GetPairsAsync(string namespaceName = null, string predicate = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String namespaceName Limit the list of pairs returned to those that have the following namespace. System.String predicate Limit the list of pairs returned to those that have the following predicate. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of pairs to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. CancellationToken cancellationToken Returns Type Description Task < PairCollection > | Improve this Doc View Source GetPredicatesAsync(String, Int32, Int32, CancellationToken) Return a list of unique predicates, optionally limited by a given namespace, in alphabetical order. Declaration Task<PredicateCollection> GetPredicatesAsync(string namespaceName = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String namespaceName Limit the list of predicates returned to those that have the following namespace. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of namespaces to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. CancellationToken cancellationToken Returns Type Description Task < PredicateCollection > | Improve this Doc View Source GetRecentValuesAsync(String, String, Nullable<DateTime>, CancellationToken) Fetch recently used (or created) machine tags values. Declaration Task<ValueCollection> GetRecentValuesAsync(string namespaceName = null, string predicate = null, DateTime? addedSince = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String namespaceName The namespace that all values should be restricted to. System.String predicate The predicate that all values should be restricted to. System.Nullable < DateTime > addedSince Only return machine tags values that have been added since this timestamp. CancellationToken cancellationToken Returns Type Description Task < ValueCollection > | Improve this Doc View Source GetValuesAsync(String, String, Int32, Int32, CancellationToken) Return a list of unique values for a namespace and predicate. Declaration Task<ValueCollection> GetValuesAsync(string namespaceName, string predicate, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String namespaceName The namespace that all values should be restricted to. System.String predicate The predicate that all values should be restricted to. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of values to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. CancellationToken cancellationToken Returns Type Description Task < ValueCollection >"
  },
  "api/Flickr.Net.Core.IFlickrOAuth.html": {
    "href": "api/Flickr.Net.Core.IFlickrOAuth.html",
    "title": "Interface IFlickrOAuth | Flickr.Net",
    "keywords": "Interface IFlickrOAuth The flickr o auth. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrOAuth Methods | Improve this Doc View Source CalculateAuthorizationUrl(String, AuthLevel, Boolean) Returns the authorization URL for OAuth authorization, based off the request token and permissions provided. Declaration string CalculateAuthorizationUrl(string requestToken, AuthLevel perms, bool mobile) Parameters Type Name Description System.String requestToken The request token to include in the authorization url. AuthLevel perms The permissions being requested. System.Boolean mobile Should the url be generated be the mobile one or not. Returns Type Description System.String | Improve this Doc View Source CalculateSignature(String, String, Dictionary<String, String>, String) Calculates the signature for an OAuth call. Declaration string CalculateSignature(string method, string url, Dictionary<string, string> parameters, string tokenSecret) Parameters Type Name Description System.String method POST or GET method. System.String url The URL the request will be sent to. Dictionary < System.String , System.String > parameters Parameters to be added to the signature. System.String tokenSecret The token secret (either request or access) for generating the SHA-1 key. Returns Type Description System.String Base64 encoded SHA-1 hash. | Improve this Doc View Source CheckTokenAsync(CancellationToken) Checks the OAuth token, returns user information and permissions if valid. Declaration Task<Auth> CheckTokenAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < Auth > | Improve this Doc View Source GetAccessTokenAsync(OAuthRequestToken, String, CancellationToken) Returns an access token for the given request token, secret and authorization verifier. Declaration Task<OAuthRequestToken> GetAccessTokenAsync(OAuthRequestToken requestToken, string verifier, CancellationToken cancellationToken = null) Parameters Type Name Description OAuthRequestToken requestToken System.String verifier CancellationToken cancellationToken Returns Type Description Task < OAuthRequestToken > | Improve this Doc View Source GetRequestTokenAsync(String, CancellationToken) Get an for the given callback URL. Declaration Task<OAuthRequestToken> GetRequestTokenAsync(string callbackUrl, CancellationToken cancellationToken = null) Parameters Type Name Description System.String callbackUrl The callback Uri, or 'oob' if no callback is to be performed. CancellationToken cancellationToken Returns Type Description Task < OAuthRequestToken > Remarks Specify 'oob' as the callback url for no callback to be performed."
  },
  "api/Flickr.Net.Core.IFlickrPanda.html": {
    "href": "api/Flickr.Net.Core.IFlickrPanda.html",
    "title": "Interface IFlickrPanda | Flickr.Net",
    "keywords": "Interface IFlickrPanda The flickr panda. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPanda Methods | Improve this Doc View Source GetListAsync(CancellationToken) Get a list of current 'Pandas' supported by Flickr. Declaration Task<string[]> GetListAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.String []> An array of panda names. | Improve this Doc View Source GetPhotosAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) Gets a list of photos for the given panda. Declaration Task<PandaPhotoCollection> GetPhotosAsync(string pandaName, PhotoSearchExtras extras = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String pandaName The name of the panda to return photos for. PhotoSearchExtras extras The extras to return with the photos. System.Int32 page The age to return. System.Int32 perPage The number of photos to return per page. CancellationToken cancellationToken Returns Type Description Task < PandaPhotoCollection >"
  },
  "api/Flickr.Net.Core.IFlickrPeople.html": {
    "href": "api/Flickr.Net.Core.IFlickrPeople.html",
    "title": "Interface IFlickrPeople | Flickr.Net",
    "keywords": "Interface IFlickrPeople The flickr people. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPeople Methods | Improve this Doc View Source FindByEmailAsync(String, CancellationToken) Used to fid a flickr users details by specifying their email address. Declaration Task<FoundUser> FindByEmailAsync(string emailAddress, CancellationToken cancellationToken = null) Parameters Type Name Description System.String emailAddress The email address to search on. CancellationToken cancellationToken Returns Type Description Task < FoundUser > Exceptions Type Condition FlickrApiException A FlickrApiException is raised if the email address is not found. | Improve this Doc View Source FindByUserNameAsync(String, CancellationToken) Returns a object matching the screen name. Declaration Task<FoundUser> FindByUserNameAsync(string userName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userName The screen name or username of the user. CancellationToken cancellationToken Returns Type Description Task < FoundUser > Exceptions Type Condition FlickrApiException A FlickrApiException is raised if the email address is not found. | Improve this Doc View Source GetGroupsAsync(String, CancellationToken) Gets a list of groups the user is a member of. Declaration Task<GroupInfoCollection> GetGroupsAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user whose groups you wish to return. CancellationToken cancellationToken Returns Type Description Task < GroupInfoCollection > | Improve this Doc View Source GetInfoAsync(String, CancellationToken) Gets the object for the given user id. Declaration Task<Person> GetInfoAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user id to find. CancellationToken cancellationToken Returns Type Description Task < Person > | Improve this Doc View Source GetLimitsAsync(CancellationToken) Returns the limits for a person. See for more details. Declaration Task<PersonLimits> GetLimitsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < PersonLimits > | Improve this Doc View Source GetPhotosAsync(String, SafetyLevel, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, ContentTypeSearch, PrivacyFilter, PhotoSearchExtras, Int32, Int32, CancellationToken) Return photos from the given user's photostream. Only photos visible to the calling user will be returned. This method must be authenticated; Declaration Task<PhotoCollection> GetPhotosAsync(string userId, SafetyLevel safeSearch = null, DateTime? minUploadDate = null, DateTime? maxUploadDate = null, DateTime? minTakenDate = null, DateTime? maxTakenDate = null, ContentTypeSearch contentType = null, PrivacyFilter privacyFilter = null, PhotoSearchExtras extras = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The NSID of the user who's photos to return. A value of \"me\" will return the calling user's photos. SafetyLevel safeSearch Safe search setting System.Nullable < DateTime > minUploadDate Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. System.Nullable < DateTime > maxUploadDate Maximum upload date. Photos with an upload date less than or equal to this value will be returned. System.Nullable < DateTime > minTakenDate Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. System.Nullable < DateTime > maxTakenDate Maximum taken date. Photos with an taken date less than or equal to this value will be returned. ContentTypeSearch contentType Content Type setting PrivacyFilter privacyFilter Return photos only matching a certain privacy level. PhotoSearchExtras extras A list of extra information to fetch for each returned record. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source GetPhotosOfAsync(String, PhotoSearchExtras, Int32, Int32, CancellationToken) Gets the photos containing the specified user. Declaration Task<PeoplePhotoCollection> GetPhotosOfAsync(string userId, PhotoSearchExtras extras = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user ID to get photos of. PhotoSearchExtras extras A list of extras to return for each photo. System.Int32 page The page of photos to return. Default is 1. System.Int32 perPage The number of photos to return per page. CancellationToken cancellationToken Returns Type Description Task < PeoplePhotoCollection > | Improve this Doc View Source GetPublicGroupsAsync(String, CancellationToken) Get a list of public groups for a user. Declaration Task<GroupInfoCollection> GetPublicGroupsAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user id to get groups for. CancellationToken cancellationToken Returns Type Description Task < GroupInfoCollection > | Improve this Doc View Source GetUploadStatusAsync(CancellationToken) Gets the upload status of the authenticated user. Declaration Task<UserStatus> GetUploadStatusAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < UserStatus >"
  },
  "api/Flickr.Net.Core.IFlickrPhotos.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotos.html",
    "title": "Interface IFlickrPhotos | Flickr.Net",
    "keywords": "Interface IFlickrPhotos The flickr photos. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotos Properties | Improve this Doc View Source Comments property for all photo comment functions Declaration IFlickrPhotosComments Comments { get; } Property Value Type Description IFlickrPhotosComments | Improve this Doc View Source Geo property for all photo geo functions Declaration IFlickrPhotosGeo Geo { get; } Property Value Type Description IFlickrPhotosGeo | Improve this Doc View Source License property for all photo license functions Declaration IFlickrPhotosLicenses License { get; } Property Value Type Description IFlickrPhotosLicenses | Improve this Doc View Source Misc property for all photo misc functions Declaration IFlickrPhotosMisc Misc { get; } Property Value Type Description IFlickrPhotosMisc | Improve this Doc View Source Notes property for all photo note functions Declaration IFlickrPhotosNotes Notes { get; } Property Value Type Description IFlickrPhotosNotes | Improve this Doc View Source People property for all photo people functions Declaration IFlickrPhotosPeople People { get; } Property Value Type Description IFlickrPhotosPeople | Improve this Doc View Source Suggestions property for all photo suggestions functions Declaration IFlickrPhotosSuggestions Suggestions { get; } Property Value Type Description IFlickrPhotosSuggestions Methods | Improve this Doc View Source AddTagAsync(String, String[], CancellationToken) Add a selection of tags to a photo. Declaration Task AddTagAsync(string photoId, string[] tags, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The photo id of the photo. System.String [] tags An array of strings containing the tags. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteAsync(String, CancellationToken) Delete a photo from Flickr. Declaration Task DeleteAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo to delete. CancellationToken cancellationToken Returns Type Description Task Remarks Requires Delete permissions. Also note, photos cannot be recovered once deleted. | Improve this Doc View Source GetAllContextsAsync(String, CancellationToken) Get all the contexts (group, set and photostream 'next' and 'previous' pictures) for a photo. Declaration Task<AllContexts> GetAllContextsAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The photo id of the photo to get the contexts for. CancellationToken cancellationToken Returns Type Description Task < AllContexts > | Improve this Doc View Source GetContactsPhotosAsync(Int32, Boolean, Boolean, Boolean, PhotoSearchExtras, CancellationToken) Gets your contacts most recent photos. Declaration Task<PhotoCollection> GetContactsPhotosAsync(int count = 0, bool justFriends = false, bool singlePhoto = false, bool includeSelf = false, PhotoSearchExtras extras = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 count The number of photos to return, from between 10 and 50. System.Boolean justFriends If true only returns photos from contacts marked as 'friends'. System.Boolean singlePhoto If true only returns a single photo for each of your contacts. Ignores the count if this is true. System.Boolean includeSelf If true includes yourself in the group of people to return photos for. PhotoSearchExtras extras Optional extras that can be returned by this call. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source GetContactsPublicPhotosAsync(String, Int32, Boolean, Boolean, Boolean, PhotoSearchExtras, CancellationToken) Gets the public photos for given users ID's contacts. Declaration Task<PhotoCollection> GetContactsPublicPhotosAsync(string userId, int count = 0, bool justFriends = false, bool singlePhoto = false, bool includeSelf = false, PhotoSearchExtras extras = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user ID whose contacts you wish to get photos for. System.Int32 count The number of photos to return. Defaults to 10, maximum is 50. System.Boolean justFriends True to just return photos from friends and family (excluding regular contacts). System.Boolean singlePhoto True to return just a single photo for each contact. System.Boolean includeSelf True to include photos from the user ID specified as well. PhotoSearchExtras extras A list of extra details to return for each photo. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source GetContextAsync(String, CancellationToken) Gets the context of the photo in the users photostream. Declaration Task<Context> GetContextAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo to return the context for. CancellationToken cancellationToken Returns Type Description Task < Context > | Improve this Doc View Source GetCountsAsync(DateTime[], DateTime[], CancellationToken) Returns count of photos between each pair of dates in the list. Declaration Task<PhotoCountCollection> GetCountsAsync(DateTime[] dates = null, DateTime[] takenDates = null, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime [] dates Comma-delimited list of dates in unix timestamp format. Optional. DateTime [] takenDates Comma-delimited list of dates in unix timestamp format. Optional. CancellationToken cancellationToken Returns Type Description Task < PhotoCountCollection > Remarks If you pass in DateA, DateB and DateC it returns a list of the number of photos between DateA and DateB, followed by the number between DateB and DateC. More parameters means more sets. | Improve this Doc View Source GetExifAsync(String, String, CancellationToken) Gets the EXIF data for a given Photo ID. Declaration Task<ExifTagCollection> GetExifAsync(string photoId, string secret = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The Photo ID of the photo to return the EXIF data for. System.String secret The secret of the photo. If the secret is specified then authentication checks are bypassed. CancellationToken cancellationToken Returns Type Description Task < ExifTagCollection > | Improve this Doc View Source GetFavoritesAsync(String, Int32, Int32, CancellationToken) Get the list of favourites for a photo. Declaration Task<PhotoFavoriteCollection> GetFavoritesAsync(string photoId, int perPage = 0, int page = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The photo ID of the photo. System.Int32 perPage How many favourites to return per page. Default is 10. System.Int32 page The page to return. Default is 1. CancellationToken cancellationToken Returns Type Description Task < PhotoFavoriteCollection > | Improve this Doc View Source GetInfoAsync(String, String, CancellationToken) Get information about a photo. The calling user must have permission to view the photo. Declaration Task<PhotoInfo> GetInfoAsync(string photoId, string secret = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to fetch information for. System.String secret The secret for the photo. If the correct secret is passed then permissions checking is skipped. This enables the 'sharing' of individual photos by passing around the id and secret. CancellationToken cancellationToken Returns Type Description Task < PhotoInfo > | Improve this Doc View Source GetNotInSetAsync(PartialSearchOptions, CancellationToken) Gets a list of the authenticated users photos which are not in a set. Declaration Task<PhotoCollection> GetNotInSetAsync(PartialSearchOptions options, CancellationToken cancellationToken = null) Parameters Type Name Description PartialSearchOptions options A selection of options to filter/sort by. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source GetPermsAsync(String, CancellationToken) Get permissions for a photo. Declaration Task<PhotoPermissions> GetPermsAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to get permissions for. CancellationToken cancellationToken Returns Type Description Task < PhotoPermissions > | Improve this Doc View Source GetPopularAsync(String, PhotoSearchExtras, PopularSorting, Int32, Int32, CancellationToken) Get a users popular photos Declaration Task<PhotoCollection> GetPopularAsync(string userId, PhotoSearchExtras extras = null, PopularSorting sort = null, int perPage = 0, int page = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The user id - if null then it is the authenticated user. PhotoSearchExtras extras PopularSorting sort System.Int32 perPage System.Int32 page CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source GetRecentAsync(Int32, Int32, PhotoSearchExtras, CancellationToken) Returns a list of the latest public photos uploaded to flickr. Declaration Task<PhotoCollection> GetRecentAsync(int page = 0, int perPage = 0, PhotoSearchExtras extras = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. PhotoSearchExtras extras A comma-delimited list of extra information to fetch for each returned record. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source GetSizesAsync(String, CancellationToken) Returns the available sizes for a photo. The calling user must have permission to view the photo. Declaration Task<SizeCollection> GetSizesAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to fetch size information for. CancellationToken cancellationToken Returns Type Description Task < SizeCollection > | Improve this Doc View Source GetUntaggedAsync(PartialSearchOptions, CancellationToken) Returns a list of your photos with no tags. Declaration Task<PhotoCollection> GetUntaggedAsync(PartialSearchOptions options, CancellationToken cancellationToken = null) Parameters Type Name Description PartialSearchOptions options The PartialSearchOptions containing the list of options supported by this method. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source GetWithGeoDataAsync(PartialSearchOptions, CancellationToken) Gets a list of photos that contain geo location information. Declaration Task<PhotoCollection> GetWithGeoDataAsync(PartialSearchOptions options, CancellationToken cancellationToken = null) Parameters Type Name Description PartialSearchOptions options The options to filter/sort the results by. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > Remarks Note, this method doesn't actually return the location information with the photos, unless you specify the option in the extras parameter. | Improve this Doc View Source GetWithoutGeoDataAsync(PartialSearchOptions, CancellationToken) Gets a list of photos that do not contain geo location information. Declaration Task<PhotoCollection> GetWithoutGeoDataAsync(PartialSearchOptions options, CancellationToken cancellationToken = null) Parameters Type Name Description PartialSearchOptions options A limited set of options are supported. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source RecentlyUpdatedAsync(DateTime, PhotoSearchExtras, Int32, Int32, CancellationToken) Return a list of your photos that have been recently created or which have been recently modified. Recently modified may mean that the photo's metadata (title, description, tags) may have been changed or a comment has been added (or just modified somehow :-) Declaration Task<PhotoCollection> RecentlyUpdatedAsync(DateTime minDate, PhotoSearchExtras extras = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime minDate The date from which modifications should be compared. PhotoSearchExtras extras A list of extra information to fetch for each returned record. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source RemoveTagAsync(String, CancellationToken) Remove an existing tag. Declaration Task RemoveTagAsync(string tagId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String tagId The id of the tag, as returned by GetInfoAsync(String, String, CancellationToken) or similar method. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SearchAsync(PhotoSearchOptions, CancellationToken) Search for a set of photos, based on the value of the PhotoSearchOptions parameters. Declaration Task<PhotoCollection> SearchAsync(PhotoSearchOptions options, CancellationToken cancellationToken = null) Parameters Type Name Description PhotoSearchOptions options The parameters to search for. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source SetContentTypeAsync(String, ContentType, CancellationToken) Sets the content type for a photo. Declaration Task SetContentTypeAsync(string photoId, ContentType contentType, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photos to set. ContentType contentType The new content type. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SetDatesAsync(String, Nullable<DateTime>, Nullable<DateTime>, DateGranularity, CancellationToken) Set the date the photo was posted (uploaded) and the date the photo was taken. Changing the date posted will affect the order in which photos are seen in your photostream. Declaration Task SetDatesAsync(string photoId, DateTime? datePosted = null, DateTime? dateTaken = null, DateGranularity granularity = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to set the dates. System.Nullable < DateTime > datePosted The new date to set the date posted too. System.Nullable < DateTime > dateTaken The new date to set the date taken too. DateGranularity granularity The granularity of the date taken. CancellationToken cancellationToken Returns Type Description Task Remarks All dates are assumed to be GMT. It is the developers responsibility to change dates to the local users timezone. | Improve this Doc View Source SetMetaAsync(String, String, String, CancellationToken) Sets the title and description of the photograph. Declaration Task SetMetaAsync(string photoId, string title = null, string description = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The numerical photoId of the photograph. System.String title The new title of the photograph. System.String description The new description of the photograph. CancellationToken cancellationToken Returns Type Description Task Exceptions Type Condition FlickrApiException Thrown when the photo id cannot be found. | Improve this Doc View Source SetPermsAsync(String, Boolean, Boolean, Boolean, Nullable<PermissionComment>, Nullable<PermissionAddMeta>, CancellationToken) Set the permissions on a photo. Declaration Task SetPermsAsync(string photoId, bool isPublic = false, bool isFriend = false, bool isFamily = false, PermissionComment? permComment = null, PermissionAddMeta? permAddMeta = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to update. System.Boolean isPublic True if the photo is public, False if it is not. System.Boolean isFriend True if the photo is viewable by friends, False if it is not. System.Boolean isFamily True if the photo is viewable by family, False if it is not. System.Nullable < PermissionComment > permComment Who can add comments. See for more details. System.Nullable < PermissionAddMeta > permAddMeta Who can add metadata (notes and tags). See for more details. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SetSafetyLevelAsync(String, SafetyLevel, HiddenFromSearch, CancellationToken) Sets the safety level and hidden property of a photo. Declaration Task SetSafetyLevelAsync(string photoId, SafetyLevel safetyLevel = null, HiddenFromSearch hidden = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photos to set. SafetyLevel safetyLevel The new content type. HiddenFromSearch hidden The new hidden value. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SetTagsAsync(String, String[], CancellationToken) Set the tags for a photo. Declaration Task SetTagsAsync(string photoId, string[] tags, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to update. System.String [] tags An array of tags. CancellationToken cancellationToken Returns Type Description Task Remarks This will remove all old tags and add these new ones specified. See AddTagAsync(String, String[], CancellationToken) to just add new tags without deleting old ones."
  },
  "api/Flickr.Net.Core.IFlickrPhotosComments.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotosComments.html",
    "title": "Interface IFlickrPhotosComments | Flickr.Net",
    "keywords": "Interface IFlickrPhotosComments The flickr photos comments. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotosComments Methods | Improve this Doc View Source AddCommentAsync(String, String, CancellationToken) Adds a new comment to a photo. Declaration Task<string> AddCommentAsync(string photoId, string commentText, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo to add the comment to. System.String commentText The text of the comment. Can contain some HTML. CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source DeleteCommentAsync(String, CancellationToken) Deletes a comment from a photo. Declaration Task DeleteCommentAsync(string commentId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String commentId The ID of the comment to delete. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditCommentAsync(String, String, CancellationToken) Edits a comment. Declaration Task EditCommentAsync(string commentId, string commentText, CancellationToken cancellationToken = null) Parameters Type Name Description System.String commentId The ID of the comment to edit. System.String commentText The new text for the comment. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetListAsync(String, CancellationToken) Gets a list of comments for a photo. Declaration Task<PhotoCommentCollection> GetListAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to return the comments for. CancellationToken cancellationToken Returns Type Description Task < PhotoCommentCollection > | Improve this Doc View Source GetRecentForContactsAsync(Nullable<DateTime>, String[], PhotoSearchExtras, Int32, Int32, CancellationToken) Return the list of photos belonging to your contacts that have been commented on recently. Declaration Task<PhotoCollection> GetRecentForContactsAsync(DateTime? dateLastComment = null, string[] contactsFilter = null, PhotoSearchExtras extras = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.Nullable < DateTime > dateLastComment Limits the resultset to photos that have been commented on since this date. The default, and maximum, offset is (1) hour. System.String [] contactsFilter A list of contact NSIDs to limit the scope of the query to. PhotoSearchExtras extras System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection >"
  },
  "api/Flickr.Net.Core.IFlickrPhotosets.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotosets.html",
    "title": "Interface IFlickrPhotosets | Flickr.Net",
    "keywords": "Interface IFlickrPhotosets The flickr photosets. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotosets Properties | Improve this Doc View Source Comments property for all photosets comment functions Declaration IFlickrPhotosetsComments Comments { get; } Property Value Type Description IFlickrPhotosetsComments Methods | Improve this Doc View Source AddPhotoAsync(String, String, CancellationToken) Add a photo to a photoset. Declaration Task AddPhotoAsync(string photosetId, string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to add the photo to. System.String photoId The ID of the photo to add. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source CreateAsync(String, String, String, CancellationToken) Creates a blank photoset, with a title, description and a primary photo. Declaration Task<Photoset> CreateAsync(string title, string primaryPhotoId, string description = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String title The title of the photoset. System.String primaryPhotoId The ID of the photo which will be the primary photo for the photoset. This photo will also be added to the set. System.String description THe description of the photoset. CancellationToken cancellationToken Returns Type Description Task < Photoset > | Improve this Doc View Source DeleteAsync(String, CancellationToken) Deletes the specified photoset. Declaration Task DeleteAsync(string photosetId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to delete. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditMetaAsync(String, String, String, CancellationToken) Updates the title and description for a photoset. Declaration Task EditMetaAsync(string photosetId, string title, string description = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to update. System.String title The new title for the photoset. System.String description The new description for the photoset. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditPhotosAsync(String, String, String[], CancellationToken) Sets the photos for a photoset. Declaration Task EditPhotosAsync(string photosetId, string primaryPhotoId, string[] photoIds, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to update. System.String primaryPhotoId The ID of the new primary photo for the photoset. System.String [] photoIds An array of photo IDs. CancellationToken cancellationToken Returns Type Description Task Remarks Will remove any previous photos from the photoset. The order in thich the photoids are given is the order they will appear in the photoset page. | Improve this Doc View Source GetContextAsync(String, String, CancellationToken) Gets the context of the specified photo within the photoset. Declaration Task<Context> GetContextAsync(string photoId, string photosetId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The photo id of the photo in the set. System.String photosetId The id of the set. CancellationToken cancellationToken Returns Type Description Task < Context > | Improve this Doc View Source GetInfoAsync(String, CancellationToken) Gets the information about a photoset. Declaration Task<Photoset> GetInfoAsync(string photosetId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to return information for. CancellationToken cancellationToken Returns Type Description Task < Photoset > | Improve this Doc View Source GetListAsync(String, Int32, Int32, CancellationToken) Gets a list of the specified users photosets. Declaration Task<PhotosetCollection> GetListAsync(string userId, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The ID of the user to return the photosets of. System.Int32 page The page of the results to return. Defaults to page 1. System.Int32 perPage The number of photosets to return per page. Defaults to 500. CancellationToken cancellationToken Returns Type Description Task < PhotosetCollection > | Improve this Doc View Source GetPhotosAsync(String, PhotoSearchExtras, PrivacyFilter, Int32, Int32, MediaType, CancellationToken) Gets a collection of photos for a photoset. Declaration Task<PhotosetPhotoCollection> GetPhotosAsync(string photosetId, PhotoSearchExtras extras = null, PrivacyFilter privacyFilter = null, int page = 0, int perPage = 0, MediaType media = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to return photos for. PhotoSearchExtras extras The extras to return for each photo. PrivacyFilter privacyFilter The privacy filter to search on. System.Int32 page The page to return, defaults to 1. System.Int32 perPage The number of photos to return per page. MediaType media Filter on the type of media. CancellationToken cancellationToken Returns Type Description Task < PhotosetPhotoCollection > | Improve this Doc View Source OrderSetsAsync(IEnumerable<String>, CancellationToken) Changes the order of your photosets. Declaration Task OrderSetsAsync(IEnumerable<string> photosetIds, CancellationToken cancellationToken = null) Parameters Type Name Description IEnumerable < System.String > photosetIds An array of photoset IDs, ordered with the set to show first, first in the list. Any set IDs not given in the list will be set to appear at the end of the list, ordered by their IDs. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source RemovePhotoAsync(String, String, CancellationToken) Removes a photo from a photoset. Declaration Task RemovePhotoAsync(string photosetId, string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to remove the photo from. System.String photoId The ID of the photo to remove. CancellationToken cancellationToken Returns Type Description Task Remarks An exception will be raised if the photo is not in the set. | Improve this Doc View Source RemovePhotosAsync(String, IEnumerable<String>, CancellationToken) Removes a photo from a photoset. Declaration Task RemovePhotosAsync(string photosetId, IEnumerable<string> photoIds, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to remove the photo from. IEnumerable < System.String > photoIds The IDs of the photo to remove. CancellationToken cancellationToken Returns Type Description Task Remarks An exception will be raised if the photo is not in the set. | Improve this Doc View Source ReorderPhotosAsync(String, IEnumerable<String>, CancellationToken) Removes a photo from a photoset. Declaration Task ReorderPhotosAsync(string photosetId, IEnumerable<string> photoIds, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to reorder the photo for. IEnumerable < System.String > photoIds The IDs of the photo to reorder. CancellationToken cancellationToken Returns Type Description Task Remarks An exception will be raised if the photo is not in the set. | Improve this Doc View Source SetPrimaryPhotoAsync(String, String, CancellationToken) Removes a photo from a photoset. Declaration Task SetPrimaryPhotoAsync(string photosetId, string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to set the primary photo for. System.String photoId The IDs of the photo to become the primary photo. CancellationToken cancellationToken Returns Type Description Task Remarks An exception will be raised if the photo is not in the set."
  },
  "api/Flickr.Net.Core.IFlickrPhotosetsComments.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotosetsComments.html",
    "title": "Interface IFlickrPhotosetsComments | Flickr.Net",
    "keywords": "Interface IFlickrPhotosetsComments The flickr photosets comments. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotosetsComments Methods | Improve this Doc View Source AddCommentAsync(String, String, CancellationToken) Adds a new comment to a photoset. Declaration Task<string> AddCommentAsync(string photosetId, string commentText, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The ID of the photoset to add the comment to. System.String commentText The text of the comment. Can contain some HTML. CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source DeleteCommentAsync(String, CancellationToken) Deletes a comment from a photoset. Declaration Task DeleteCommentAsync(string commentId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String commentId The ID of the comment to delete. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditCommentAsync(String, String, CancellationToken) Edits a comment. Declaration Task EditCommentAsync(string commentId, string commentText, CancellationToken cancellationToken = null) Parameters Type Name Description System.String commentId The ID of the comment to edit. System.String commentText The new text for the comment. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetListAsync(String, CancellationToken) Gets a list of comments for a photoset. Declaration Task<PhotosetCommentCollection> GetListAsync(string photosetId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photosetId The id of the photoset to return the comments for. CancellationToken cancellationToken Returns Type Description Task < PhotosetCommentCollection >"
  },
  "api/Flickr.Net.Core.IFlickrPhotosGeo.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotosGeo.html",
    "title": "Interface IFlickrPhotosGeo | Flickr.Net",
    "keywords": "Interface IFlickrPhotosGeo The flickr photos geo. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotosGeo Methods | Improve this Doc View Source BatchCorrectLocationAsync(PlaceId, Double, Double, GeoAccuracy, CancellationToken) Correct the places hierarchy for all the photos for a user at a given latitude, longitude and accuracy. Declaration Task BatchCorrectLocationAsync(PlaceId placeId, double latitude, double longitude, GeoAccuracy accuracy, CancellationToken cancellationToken = null) Parameters Type Name Description PlaceId placeId A Flickr Places ID. System.Double latitude The latitude of the photos to be update whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated. System.Double longitude The longitude of the photos to be updated whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated. GeoAccuracy accuracy Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified. CancellationToken cancellationToken Returns Type Description Task Remarks Batch corrections are processed in a delayed queue so it may take a few minutes before the changes are reflected in a user's photos. | Improve this Doc View Source BatchCorrectLocationAsync(WoeId, Double, Double, GeoAccuracy, CancellationToken) Correct the places hierarchy for all the photos for a user at a given latitude, longitude and accuracy. Declaration Task BatchCorrectLocationAsync(WoeId woeId, double latitude, double longitude, GeoAccuracy accuracy, CancellationToken cancellationToken = null) Parameters Type Name Description WoeId woeId A Where On Earth (WOE) ID. System.Double latitude The latitude of the photos to be update whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated. System.Double longitude The longitude of the photos to be updated whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated. GeoAccuracy accuracy Recorded accuracy level of the photos to be updated. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified. CancellationToken cancellationToken Returns Type Description Task Remarks Batch corrections are processed in a delayed queue so it may take a few minutes before the changes are reflected in a user's photos. | Improve this Doc View Source CorrectLocationAsync(String, PlaceId, CancellationToken) Correct the places hierarchy for a given photo. Declaration Task CorrectLocationAsync(string photoId, PlaceId placeId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo whose WOE location is being corrected. PlaceId placeId A Flickr Places ID. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source CorrectLocationAsync(String, WoeId, CancellationToken) Correct the places hierarchy for a given photo. Declaration Task CorrectLocationAsync(string photoId, WoeId woeId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo whose WOE location is being corrected. WoeId woeId A Where On Earth (WOE) ID. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetLocationAsync(String, CancellationToken) Returns the location data for a give photo. Declaration Task<PlaceInfo> GetLocationAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo to return the location information for. CancellationToken cancellationToken Returns Type Description Task < PlaceInfo > | Improve this Doc View Source GetPermsAsync(String, CancellationToken) Get permissions for a photo. Declaration Task<GeoPermissions> GetPermsAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to get permissions for. CancellationToken cancellationToken Returns Type Description Task < GeoPermissions > | Improve this Doc View Source PhotosForLocationAsync(Double, Double, GeoAccuracy, PhotoSearchExtras, Int32, Int32, CancellationToken) Return a list of photos for a user at a specific latitude, longitude and accuracy. Declaration Task<PhotoCollection> PhotosForLocationAsync(double latitude, double longitude, GeoAccuracy accuracy = null, PhotoSearchExtras extras = null, int perPage = 0, int page = 0, CancellationToken cancellationToken = null) Parameters Type Name Description System.Double latitude The latitude whose valid range is -90 to 90. Anything more than 6 decimal places will be truncated. System.Double longitude The longitude whose valid range is -180 to 180. Anything more than 6 decimal places will be truncated. GeoAccuracy accuracy Recorded accuracy level of the location information. World level is 1, Country is ~3, Region ~6, City ~11, Street ~16. Current range is 1-16. Defaults to 16 if not specified. PhotoSearchExtras extras System.Int32 perPage Number of photos to return per page. If this argument is omitted, it defaults to 100. The maximum allowed value is 500. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source RemoveLocationAsync(String, CancellationToken) Removes Location information. Declaration Task RemoveLocationAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The photo ID of the photo to remove information from. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SetContextAsync(String, GeoContext, CancellationToken) Indicate the state of a photo's geotagginess beyond latitude and longitude. Declaration Task SetContextAsync(string photoId, GeoContext context, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to set context data for. GeoContext context Context is a numeric value representing the photo's geotagginess beyond latitude and longitude. For example, you may wish to indicate that a photo was taken \"indoors\" or \"outdoors\". CancellationToken cancellationToken Returns Type Description Task Remarks Note : photos passed to this method must already be geotagged (using the flickr.photos.geo.setLocation method). | Improve this Doc View Source SetLocationAsync(String, Double, Double, GeoAccuracy, CancellationToken) Sets the geo location for a photo. Declaration Task SetLocationAsync(string photoId, double latitude, double longitude, GeoAccuracy accuracy = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo to set to location for. System.Double latitude The latitude of the geo location. A double number ranging from -180.00 to 180.00. Digits beyond 6 decimal places will be truncated. System.Double longitude The longitude of the geo location. A double number ranging from -180.00 to 180.00. Digits beyond 6 decimal places will be truncated. GeoAccuracy accuracy The accuracy of the photos geo location. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SetPermsAsync(String, Boolean, Boolean, Boolean, Boolean, CancellationToken) Set the permission for who can see geotagged photos on Flickr. Declaration Task SetPermsAsync(string photoId, bool isPublic, bool isContact, bool isFamily, bool isFriend, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo permissions to update. System.Boolean isPublic System.Boolean isContact System.Boolean isFamily System.Boolean isFriend CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Flickr.Net.Core.IFlickrPhotosLicenses.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotosLicenses.html",
    "title": "Interface IFlickrPhotosLicenses | Flickr.Net",
    "keywords": "Interface IFlickrPhotosLicenses The flickr photos licenses. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotosLicenses Methods | Improve this Doc View Source GetInfoAsync(CancellationToken) Gets a list of all current licenses. Declaration Task<LicenseCollection> GetInfoAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < LicenseCollection > | Improve this Doc View Source SetLicenseAsync(String, LicenseType, CancellationToken) Sets the license for a photo. Declaration Task SetLicenseAsync(string photoId, LicenseType license, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The photo to update the license for. LicenseType license The license to apply, or (0) to remove the current license. Note : as of this writing the license (7) is not a valid argument. CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Flickr.Net.Core.IFlickrPhotosMisc.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotosMisc.html",
    "title": "Interface IFlickrPhotosMisc | Flickr.Net",
    "keywords": "Interface IFlickrPhotosMisc The flickr photos misc. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotosMisc Methods | Improve this Doc View Source CheckTicketsAsync(String[], CancellationToken) Checks the status of one or more asynchronous photo upload tickets. Declaration Task<TicketCollection> CheckTicketsAsync(string[] tickets, CancellationToken cancellationToken = null) Parameters Type Name Description System.String [] tickets A list of ticket ids CancellationToken cancellationToken Returns Type Description Task < TicketCollection > | Improve this Doc View Source RotateAsync(String, Int32, CancellationToken) Rotates a photo on Flickr. Declaration Task RotateAsync(string photoId, int degrees, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The ID of the photo. System.Int32 degrees The number of degrees to rotate by. Valid values are 90, 180 and 270. CancellationToken cancellationToken Returns Type Description Task Remarks Does not rotate the original photo."
  },
  "api/Flickr.Net.Core.IFlickrPhotosNotes.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotosNotes.html",
    "title": "Interface IFlickrPhotosNotes | Flickr.Net",
    "keywords": "Interface IFlickrPhotosNotes The flickr photos notes. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotosNotes Methods | Improve this Doc View Source AddAsync(String, Int32, Int32, Int32, Int32, String, CancellationToken) Add a note to a picture. Declaration Task<string> AddAsync(string photoId, int noteX, int noteY, int noteWidth, int noteHeight, string noteText, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The photo id to add the note to. System.Int32 noteX The X co-ordinate of the upper left corner of the note. System.Int32 noteY The Y co-ordinate of the upper left corner of the note. System.Int32 noteWidth The width of the note. System.Int32 noteHeight The height of the note. System.String noteText The text in the note. CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source DeleteAsync(String, CancellationToken) Delete an existing note. Declaration Task DeleteAsync(string noteId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String noteId The ID of the note. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditAsync(String, Int32, Int32, Int32, Int32, String, CancellationToken) Edit and update a note. Declaration Task EditAsync(string noteId, int noteX, int noteY, int noteWidth, int noteHeight, string noteText, CancellationToken cancellationToken = null) Parameters Type Name Description System.String noteId The ID of the note to update. System.Int32 noteX The X co-ordinate of the upper left corner of the note. System.Int32 noteY The Y co-ordinate of the upper left corner of the note. System.Int32 noteWidth The width of the note. System.Int32 noteHeight The height of the note. System.String noteText The new text in the note. CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Flickr.Net.Core.IFlickrPhotosPeople.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotosPeople.html",
    "title": "Interface IFlickrPhotosPeople | Flickr.Net",
    "keywords": "Interface IFlickrPhotosPeople The flickr photos people. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotosPeople Methods | Improve this Doc View Source AddAsync(String, String, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, Nullable<Int32>, CancellationToken) Add a person to a photo. Coordinates and sizes of boxes are optional; they are measured in pixels, based on the 500px image size shown on individual photo pages. Declaration Task AddAsync(string photoId, string userId, int? personX = null, int? personY = null, int? personWidth = null, int? personHeight = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to add a person to. System.String userId The NSID of the user to add to the photo. System.Nullable < System.Int32 > personX The left-most pixel co-ordinate of the box around the person. System.Nullable < System.Int32 > personY The top-most pixel co-ordinate of the box around the person. System.Nullable < System.Int32 > personWidth The width (in pixels) of the box around the person. System.Nullable < System.Int32 > personHeight The height (in pixels) of the box around the person. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteAsync(String, String, CancellationToken) Remove a person from a photo. Declaration Task DeleteAsync(string photoId, string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to remove a person from. System.String userId The NSID of the person to remove from the photo. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source DeleteCoordsAsync(String, String, CancellationToken) Remove the bounding box from a person in a photo Declaration Task DeleteCoordsAsync(string photoId, string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to edit a person in. System.String userId The NSID of the person whose bounding box you want to remove. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source EditCoordsAsync(String, String, Int32, Int32, Int32, Int32, CancellationToken) Edit the bounding box of an existing person on a photo. Declaration Task EditCoordsAsync(string photoId, string userId, int personX, int personY, int personWidth, int personHeight, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to edit a person in. System.String userId The NSID of the person to edit in a photo. System.Int32 personX The left-most pixel co-ordinate of the box around the person. System.Int32 personY The top-most pixel co-ordinate of the box around the person. System.Int32 personWidth The width (in pixels) of the box around the person. System.Int32 personHeight The height (in pixels) of the box around the person. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetListAsync(String, CancellationToken) Get a list of people in a given photo. Declaration Task<PhotoPersonCollection> GetListAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to get a list of people for. CancellationToken cancellationToken Returns Type Description Task < PhotoPersonCollection >"
  },
  "api/Flickr.Net.Core.IFlickrPhotosSuggestions.html": {
    "href": "api/Flickr.Net.Core.IFlickrPhotosSuggestions.html",
    "title": "Interface IFlickrPhotosSuggestions | Flickr.Net",
    "keywords": "Interface IFlickrPhotosSuggestions The flickr photos suggestions. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPhotosSuggestions Methods | Improve this Doc View Source ApproveSuggestionAsync(String, CancellationToken) Approve a location suggestion for a photo. Declaration Task ApproveSuggestionAsync(string suggestionId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String suggestionId The suggestion to approve. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source GetListAsync(String, SuggestionStatus, CancellationToken) Get a list of suggestions for a photo. Declaration Task<SuggestionCollection> GetListAsync(string photoId, SuggestionStatus status, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The photo id of the photo to list the suggestions for. SuggestionStatus status The type of status to filter by. CancellationToken cancellationToken Returns Type Description Task < SuggestionCollection > | Improve this Doc View Source RejectSuggestionAsync(String, CancellationToken) Rejects a suggestion made for a location on a photo. Currently doesn't appear to actually work. Just use RemoveSuggestionAsync(String, CancellationToken) instead. Declaration Task RejectSuggestionAsync(string suggestionId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String suggestionId The ID of the suggestion to remove. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source RemoveSuggestionAsync(String, CancellationToken) Remove a location suggestion from a photo. Declaration Task RemoveSuggestionAsync(string suggestionId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String suggestionId The suggestion to remove. CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source SuggestLocationAsync(String, Double, Double, GeoAccuracy, String, String, String, CancellationToken) Suggest a particular location for a photo. Declaration Task SuggestLocationAsync(string photoId, double latitude, double longitude, GeoAccuracy accuracy = null, string woeId = null, string placeId = null, string note = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo. System.Double latitude The latitude of the location to suggest. System.Double longitude The longitude of the location to suggest. GeoAccuracy accuracy The accuracy of the location to suggest. System.String woeId The WOE ID of the location to suggest. System.String placeId The Flickr place id of the location to suggest. System.String note A note to add to the suggestion. CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Flickr.Net.Core.IFlickrPlaces.html": {
    "href": "api/Flickr.Net.Core.IFlickrPlaces.html",
    "title": "Interface IFlickrPlaces | Flickr.Net",
    "keywords": "Interface IFlickrPlaces The flickr places. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPlaces Methods | Improve this Doc View Source FindAsync(String, CancellationToken) Returns a list of places which contain the query string. Declaration Task<PlaceCollection> FindAsync(string query, CancellationToken cancellationToken = null) Parameters Type Name Description System.String query The string to search for. Must not be null. CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source FindByLatLonAsync(Double, Double, GeoAccuracy, CancellationToken) Returns a place based on the input latitude and longitude. Declaration Task<Place> FindByLatLonAsync(double latitude, double longitude, GeoAccuracy accuracy = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.Double latitude The latitude, between -180 and 180. System.Double longitude The longitude, between -90 and 90. GeoAccuracy accuracy The level the locality will be for. CancellationToken cancellationToken Returns Type Description Task < Place > | Improve this Doc View Source GetChildrenWithPhotosPublicAsync(PlaceId, CancellationToken) Return a list of locations with public photos that are parented by a Where on Earth (WOE) or Places ID. Declaration Task<PlaceCollection> GetChildrenWithPhotosPublicAsync(PlaceId placeId, CancellationToken cancellationToken = null) Parameters Type Name Description PlaceId placeId A Flickr Places ID. CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source GetChildrenWithPhotosPublicAsync(WoeId, CancellationToken) Return a list of locations with public photos that are parented by a Where on Earth (WOE) or Places ID. Declaration Task<PlaceCollection> GetChildrenWithPhotosPublicAsync(WoeId woeId, CancellationToken cancellationToken = null) Parameters Type Name Description WoeId woeId A Where On Earth (WOE) ID. CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source GetInfoAsync(PlaceId, CancellationToken) Get informations about a place. Declaration Task<PlaceInfo> GetInfoAsync(PlaceId placeId, CancellationToken cancellationToken = null) Parameters Type Name Description PlaceId placeId A Flickr Places ID. CancellationToken cancellationToken Returns Type Description Task < PlaceInfo > | Improve this Doc View Source GetInfoAsync(WoeId, CancellationToken) Get informations about a place. Declaration Task<PlaceInfo> GetInfoAsync(WoeId woeId, CancellationToken cancellationToken = null) Parameters Type Name Description WoeId woeId A Where On Earth (WOE) ID. CancellationToken cancellationToken Returns Type Description Task < PlaceInfo > | Improve this Doc View Source GetInfoByUrlAsync(String, CancellationToken) Lookup information about a place, by its flickr.com/places URL. Declaration Task<PlaceInfo> GetInfoByUrlAsync(string url, CancellationToken cancellationToken = null) Parameters Type Name Description System.String url A flickr.com/places URL in the form of /country/region/city. For example: /Canada/Quebec/Montreal CancellationToken cancellationToken Returns Type Description Task < PlaceInfo > | Improve this Doc View Source GetPlaceTypesAsync(CancellationToken) Gets a list of valid Place Type key/value pairs. Declaration Task<PlaceTypeInfoCollection> GetPlaceTypesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < PlaceTypeInfoCollection > Remarks All Flickr.Net methods use the enumeration so this method doesn't serve much purpose. | Improve this Doc View Source GetShapeHistoryAsync(PlaceId, CancellationToken) Return an historical list of all the shape data generated for a Places or Where on Earth (WOE) ID. Declaration Task<ShapeDataCollection> GetShapeHistoryAsync(PlaceId placeId, CancellationToken cancellationToken = null) Parameters Type Name Description PlaceId placeId A Flickr Places ID. CancellationToken cancellationToken Returns Type Description Task < ShapeDataCollection > | Improve this Doc View Source GetShapeHistoryAsync(WoeId, CancellationToken) Return an historical list of all the shape data generated for a Places or Where on Earth (WOE) ID. Declaration Task<ShapeDataCollection> GetShapeHistoryAsync(WoeId woeId, CancellationToken cancellationToken = null) Parameters Type Name Description WoeId woeId A Where On Earth (WOE) ID. CancellationToken cancellationToken Returns Type Description Task < ShapeDataCollection > | Improve this Doc View Source GetTopPlacesListAsync(PlaceType, Nullable<DateTime>, String, String, CancellationToken) Return the top 100 most geotagged places for a day. Declaration Task<PlaceCollection> GetTopPlacesListAsync(PlaceType placeType, DateTime? date = null, string placeId = null, string woeId = null, CancellationToken cancellationToken = null) Parameters Type Name Description PlaceType placeType The type for a specific place type to cluster photos by. System.Nullable < DateTime > date A valid date. The default is yesterday. System.String placeId Limit your query to only those top places belonging to a specific Flickr Places identifier. System.String woeId Limit your query to only those top places belonging to a specific Where on Earth (WOE) identifier. CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source PlacesForBoundingBoxAsync(BoundaryBox, PlaceType, CancellationToken) Return a list of the top 100 unique places clustered by a given placetype for set of tags or machine tags. Declaration Task<PlaceCollection> PlacesForBoundingBoxAsync(BoundaryBox boundaryBox, PlaceType placeType, CancellationToken cancellationToken = null) Parameters Type Name Description BoundaryBox boundaryBox The boundary box to search for places in. PlaceType placeType The ID for a specific place type to cluster photos by. CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source PlacesForContactsAsync(PlaceType, String, String, Int32, ContactSearch, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Return a list of the top 100 unique places clustered by a given placetype for set of tags or machine tags. Declaration Task<PlaceCollection> PlacesForContactsAsync(PlaceType placeType = null, string woeId = null, string placeId = null, int threshold = 0, ContactSearch contactType = null, DateTime? minUploadDate = null, DateTime? maxUploadDate = null, DateTime? minTakenDate = null, DateTime? maxTakenDate = null, CancellationToken cancellationToken = null) Parameters Type Name Description PlaceType placeType The ID for a specific place type to cluster photos by. System.String woeId A Where on Earth identifier to use to filter photo clusters. System.String placeId A Flickr Places identifier to use to filter photo clusters. System.Int32 threshold The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used. ContactSearch contactType The type of contacts to return places for. Either all, or friends and family only. System.Nullable < DateTime > minUploadDate Minimum upload date. System.Nullable < DateTime > maxUploadDate Maximum upload date. System.Nullable < DateTime > minTakenDate Minimum taken date. System.Nullable < DateTime > maxTakenDate Maximum taken date. CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source PlacesForTagsAsync(PlaceType, String, String, Int32, IEnumerable<String>, TagMode, IEnumerable<String>, MachineTagMode, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Return a list of the top 100 unique places clustered by a given placetype for set of tags or machine tags. Declaration Task<PlaceCollection> PlacesForTagsAsync(PlaceType placeType, string woeId = null, string placeId = null, int threshold = 0, IEnumerable<string> tags = null, TagMode tagMode = null, IEnumerable<string> machineTags = null, MachineTagMode machineTagMode = null, DateTime? minUploadDate = null, DateTime? maxUploadDate = null, DateTime? minTakenDate = null, DateTime? maxTakenDate = null, CancellationToken cancellationToken = null) Parameters Type Name Description PlaceType placeType The ID for a specific place type to cluster photos by. System.String woeId A Where on Earth identifier to use to filter photo clusters. System.String placeId A Flickr Places identifier to use to filter photo clusters. System.Int32 threshold The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used. IEnumerable < System.String > tags A list of tags. Photos with one or more of the tags listed will be returned. TagMode tagMode Either 'any' for an OR combination of tags, or 'all' for an AND combination. Defaults to 'any' if not specified. IEnumerable < System.String > machineTags MachineTagMode machineTagMode System.Nullable < DateTime > minUploadDate Minimum upload date. System.Nullable < DateTime > maxUploadDate Maximum upload date. System.Nullable < DateTime > minTakenDate Minimum taken date. System.Nullable < DateTime > maxTakenDate Maximum taken date. CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source PlacesForUserAsync(PlaceType, String, String, Int32, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Gets the places of a particular type that the authenticated user has geotagged photos. Declaration Task<PlaceCollection> PlacesForUserAsync(PlaceType placeType = null, string woeId = null, string placeId = null, int threshold = 0, DateTime? minUploadDate = null, DateTime? maxUploadDate = null, DateTime? minTakenDate = null, DateTime? maxTakenDate = null, CancellationToken cancellationToken = null) Parameters Type Name Description PlaceType placeType The type of places to return. System.String woeId A Where on Earth identifier to use to filter photo clusters. System.String placeId A Flickr Places identifier to use to filter photo clusters. System.Int32 threshold The minimum number of photos that a place type must have to be included. If the number of photos is lowered then the parent place type for that place will be used. For example if you only have 3 photos taken in the locality of Montreal (WOE ID 3534) but your threshold is set to 5 then those photos will be \"rolled up\" and included instead with a place record for the region of Quebec (WOE ID 2344924). System.Nullable < DateTime > minUploadDate Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. System.Nullable < DateTime > maxUploadDate Maximum upload date. Photos with an upload date less than or equal to this value will be returned. System.Nullable < DateTime > minTakenDate Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. System.Nullable < DateTime > maxTakenDate Maximum taken date. Photos with an taken date less than or equal to this value will be returned. CancellationToken cancellationToken Returns Type Description Task < PlaceCollection > | Improve this Doc View Source TagsForPlaceAsync(PlaceId, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Return a list of the top 100 unique tags for a Flickr Places. Declaration Task<TagCollection> TagsForPlaceAsync(PlaceId placeId, DateTime? minUploadDate = null, DateTime? maxUploadDate = null, DateTime? minTakenDate = null, DateTime? maxTakenDate = null, CancellationToken cancellationToken = null) Parameters Type Name Description PlaceId placeId A Flickr Places identifier to use to filter photo clusters. System.Nullable < DateTime > minUploadDate Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. System.Nullable < DateTime > maxUploadDate Maximum upload date. Photos with an upload date less than or equal to this value will be returned. System.Nullable < DateTime > minTakenDate Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. System.Nullable < DateTime > maxTakenDate Maximum taken date. Photos with an taken date less than or equal to this value will be returned. CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source TagsForPlaceAsync(WoeId, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, Nullable<DateTime>, CancellationToken) Return a list of the top 100 unique tags for Earth (WOE) ID. Declaration Task<TagCollection> TagsForPlaceAsync(WoeId woeId, DateTime? minUploadDate = null, DateTime? maxUploadDate = null, DateTime? minTakenDate = null, DateTime? maxTakenDate = null, CancellationToken cancellationToken = null) Parameters Type Name Description WoeId woeId A Where on Earth identifier to use to filter photo clusters. System.Nullable < DateTime > minUploadDate Minimum upload date. Photos with an upload date greater than or equal to this value will be returned. System.Nullable < DateTime > maxUploadDate Maximum upload date. Photos with an upload date less than or equal to this value will be returned. System.Nullable < DateTime > minTakenDate Minimum taken date. Photos with an taken date greater than or equal to this value will be returned. System.Nullable < DateTime > maxTakenDate Maximum taken date. Photos with an taken date less than or equal to this value will be returned. CancellationToken cancellationToken Returns Type Description Task < TagCollection >"
  },
  "api/Flickr.Net.Core.IFlickrPrefs.html": {
    "href": "api/Flickr.Net.Core.IFlickrPrefs.html",
    "title": "Interface IFlickrPrefs | Flickr.Net",
    "keywords": "Interface IFlickrPrefs The flickr prefs. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPrefs Methods | Improve this Doc View Source GetContentTypeAsync(CancellationToken) Gets the currently authenticated users default content type. Declaration Task<ContentType> GetContentTypeAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < ContentType > | Improve this Doc View Source GetGeoPermsAsync(CancellationToken) Returns the default privacy level for geographic information attached to the user's photos and whether or not the user has chosen to use geo-related EXIF information to automatically geotag their photos. Declaration Task<UserGeoPermissions> GetGeoPermsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < UserGeoPermissions > | Improve this Doc View Source GetHiddenAsync(CancellationToken) Gets the currently authenticated users default hidden from search setting. Declaration Task<HiddenFromSearch> GetHiddenAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < HiddenFromSearch > | Improve this Doc View Source GetPrivacyAsync(CancellationToken) Returns the default privacy level preference for the user. Declaration Task<PrivacyFilter> GetPrivacyAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < PrivacyFilter > | Improve this Doc View Source GetSafetyLevelAsync(CancellationToken) Gets the currently authenticated users default safety level. Declaration Task<SafetyLevel> GetSafetyLevelAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < SafetyLevel >"
  },
  "api/Flickr.Net.Core.IFlickrProfile.html": {
    "href": "api/Flickr.Net.Core.IFlickrProfile.html",
    "title": "Interface IFlickrProfile | Flickr.Net",
    "keywords": "Interface IFlickrProfile The flickr profile. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrProfile Methods | Improve this Doc View Source GetProfileAsync(String, CancellationToken) Get a users profile properties. Declaration Task<Profile> GetProfileAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The id of the user to get the profile for. CancellationToken cancellationToken Returns Type Description Task < Profile > A instance containing the details of the users profile."
  },
  "api/Flickr.Net.Core.IFlickrPush.html": {
    "href": "api/Flickr.Net.Core.IFlickrPush.html",
    "title": "Interface IFlickrPush | Flickr.Net",
    "keywords": "Interface IFlickrPush The flickr push. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrPush Methods | Improve this Doc View Source GetSubscriptionsAsync(CancellationToken) Get a list of subscriptions for the calling user. Declaration Task<SubscriptionCollection> GetSubscriptionsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < SubscriptionCollection > | Improve this Doc View Source GetTopicsAsync(CancellationToken) Get a list of topics that are available for subscription. Declaration Task<string[]> GetTopicsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < System.String []> | Improve this Doc View Source SubscribeAsync(String, String, String, String, Nullable<Int32>, IEnumerable<WoeId>, IEnumerable<PlaceId>, Nullable<Double>, Nullable<Double>, Nullable<Int32>, RadiusUnit, GeoAccuracy, IEnumerable<String>, IEnumerable<String>, CancellationToken) Subscribe to a particular topic. Declaration Task SubscribeAsync(string topic, string callback, string verify, string verifyToken = null, int? leaseSeconds = null, IEnumerable<WoeId> woeIds = null, IEnumerable<PlaceId> placeIds = null, double? latitude = null, double? longitude = null, int? radius = null, RadiusUnit radiusUnits = null, GeoAccuracy accuracy = null, IEnumerable<string> nsids = null, IEnumerable<string> tags = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String topic The topic to subscribe to. System.String callback The callback url. System.String verify Either 'sync' or 'async'. System.String verifyToken An optional token to be sent along with the verification. System.Nullable < System.Int32 > leaseSeconds The number of seconds the lease should be for. IEnumerable < WoeId > woeIds An array of WOE ids to listen to. Only applies if topic is 'geo'. IEnumerable < PlaceId > placeIds An array of place ids to subscribe to. Only applies if topic is 'geo'. System.Nullable < System.Double > latitude The latitude to subscribe to. Only applies if topic is 'geo'. System.Nullable < System.Double > longitude The longitude to subscribe to. Only applies if topic is 'geo'. System.Nullable < System.Int32 > radius The radius to subscribe to. Only applies if topic is 'geo'. RadiusUnit radiusUnits The raduis units to subscribe to. Only applies if topic is 'geo'. GeoAccuracy accuracy The accuracy of the geo search to subscribe to. Only applies if topic is 'geo'. IEnumerable < System.String > nsids A list of Commons Institutes to subscribe to. Only applies if topic is 'commons'. If not present this argument defaults to all Flickr Commons institutions. IEnumerable < System.String > tags A list of strings to be used for tag subscriptions. Photos with one or more of the tags listed will be included in the subscription. Only valid if the topic is 'tags' CancellationToken cancellationToken Returns Type Description Task | Improve this Doc View Source UnsubscribeAsync(String, String, String, String, CancellationToken) Unsubscribe from a particular push subscription. Declaration Task UnsubscribeAsync(string topic, string callback, string verify, string verifyToken = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String topic The topic to unsubscribe from. System.String callback The callback url to unsubscribe. System.String verify Either 'sync' or 'async'. System.String verifyToken The verification token to include in the unsubscribe verification process. CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Flickr.Net.Core.IFlickrReflection.html": {
    "href": "api/Flickr.Net.Core.IFlickrReflection.html",
    "title": "Interface IFlickrReflection | Flickr.Net",
    "keywords": "Interface IFlickrReflection The flickr reflection. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrReflection Methods | Improve this Doc View Source GetMethodInfoAsync(String, CancellationToken) Gets the method details for a given method. Declaration Task<Method> GetMethodInfoAsync(string methodName, CancellationToken cancellationToken = null) Parameters Type Name Description System.String methodName The name of the method to retrieve. CancellationToken cancellationToken Returns Type Description Task < Method > | Improve this Doc View Source GetMethodsAsync(CancellationToken) Gets an array of supported method names for Flickr. Declaration Task<MethodCollection> GetMethodsAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < MethodCollection > Remarks Note: Not all methods might be supported by the FlickrNet Library."
  },
  "api/Flickr.Net.Core.IFlickrStats.html": {
    "href": "api/Flickr.Net.Core.IFlickrStats.html",
    "title": "Interface IFlickrStats | Flickr.Net",
    "keywords": "Interface IFlickrStats The flickr stats. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrStats Methods | Improve this Doc View Source GetCollectionDomainsAsync(DateTime, String, Int32, Int32, CancellationToken) Get a list of referring domains for a collection. Declaration Task<StatDomainCollection> GetCollectionDomainsAsync(DateTime date, string collectionId = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date Stats will be returned for this date. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day. System.String collectionId The id of the collection to get stats for. If not provided, stats for all collections will be returned. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100. CancellationToken cancellationToken Returns Type Description Task < StatDomainCollection > | Improve this Doc View Source GetCollectionReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) Get a list of referrers from a given domain to a collection. Declaration Task<StatReferrerCollection> GetCollectionReferrersAsync(DateTime date, string domain, string collectionId = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date The date to return stats for. System.String domain The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname. System.String collectionId The collection to return referrers for. If missing then referrers for all photosets will be returned. System.Int32 page The page of the results to return. Default is 1. System.Int32 perPage The number of referrers to return per page. The default is 25 and the maximum is 100. CancellationToken cancellationToken Returns Type Description Task < StatReferrerCollection > | Improve this Doc View Source GetCollectionStatsAsync(DateTime, String, CancellationToken) Returns the number of views on the given date for the given collection. Only will be populated. Declaration Task<Stats> GetCollectionStatsAsync(DateTime date, string collectionId, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date The date to return stats for. System.String collectionId The collection to return stats for. CancellationToken cancellationToken Returns Type Description Task < Stats > | Improve this Doc View Source GetCsvFilesAsync(CancellationToken) Gets the collection of CSV files of archived stats from Flickr. Declaration Task<CsvFileCollection> GetCsvFilesAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < CsvFileCollection > Remarks Archived files only available till the 1st June 2010. | Improve this Doc View Source GetPhotoDomainsAsync(DateTime, String, Int32, Int32, CancellationToken) Get a list of referring domains for a photo. Declaration Task<StatDomainCollection> GetPhotoDomainsAsync(DateTime date, string photoId = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date Stats will be returned for this date. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day. System.String photoId The id of the photo to get stats for. If not provided, stats for all photos will be returned. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100. CancellationToken cancellationToken Returns Type Description Task < StatDomainCollection > | Improve this Doc View Source GetPhotoReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) Get a list of referrers from a given domain to a photo. Declaration Task<StatReferrerCollection> GetPhotoReferrersAsync(DateTime date, string domain, string photoId = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date The date to return stats for. System.String domain The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname. System.String photoId The photo to return referrers for. If missing then referrers for all photos will be returned. System.Int32 page The page of the results to return. Default is 1. System.Int32 perPage The number of referrers to return per page. The default is 25 and the maximum is 100. CancellationToken cancellationToken Returns Type Description Task < StatReferrerCollection > | Improve this Doc View Source GetPhotosetDomainsAsync(DateTime, String, Int32, Int32, CancellationToken) Get a list of referring domains for a photoset. Declaration Task<StatDomainCollection> GetPhotosetDomainsAsync(DateTime date, string photosetId = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date Stats will be returned for this date. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day. System.String photosetId The id of the photoset to get stats for. If not provided, stats for all sets will be returned. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100. CancellationToken cancellationToken Returns Type Description Task < StatDomainCollection > | Improve this Doc View Source GetPhotosetReferrersAsync(DateTime, String, String, Int32, Int32, CancellationToken) Get a list of referrers from a given domain to a photoset. Declaration Task<StatReferrerCollection> GetPhotosetReferrersAsync(DateTime date, string domain, string photosetId = null, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date The date to return stats for. System.String domain The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname. System.String photosetId The photoset to return referrers for. If missing then referrers for all photosets will be returned. System.Int32 page The page of the results to return. Default is 1. System.Int32 perPage The number of referrers to return per page. The default is 25 and the maximum is 100. CancellationToken cancellationToken Returns Type Description Task < StatReferrerCollection > | Improve this Doc View Source GetPhotosetStatsAsync(DateTime, String, CancellationToken) Returns the number of views and comments on the given date for the given photoset. Only and will be populated. Declaration Task<Stats> GetPhotosetStatsAsync(DateTime date, string photosetId, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date The date to return stats for. System.String photosetId The photoset to return stats for. CancellationToken cancellationToken Returns Type Description Task < Stats > | Improve this Doc View Source GetPhotoStatsAsync(DateTime, String, CancellationToken) Returns the number of views, comments and favorites on the given date for the given photo. Declaration Task<Stats> GetPhotoStatsAsync(DateTime date, string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date The date to return stats for. System.String photoId The photo to return stats for. CancellationToken cancellationToken Returns Type Description Task < Stats > | Improve this Doc View Source GetPhotostreamDomainsAsync(DateTime, Int32, Int32, CancellationToken) Get a list of referring domains for a photostream. Declaration Task<StatDomainCollection> GetPhotostreamDomainsAsync(DateTime date, int page = 0, int perPage = 0, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date Stats will be returned for this date. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of domains to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100. CancellationToken cancellationToken Returns Type Description Task < StatDomainCollection > | Improve this Doc View Source GetPhotostreamReferrersAsync(DateTime, String, Int32, Int32, CancellationToken) Get a list of referrers from a given domain to a photostream. Declaration Task<StatReferrerCollection> GetPhotostreamReferrersAsync(DateTime date, string domain, int page, int perPage, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date The date to return stats for. System.String domain The domain to return referrers for. This should be a hostname (eg: \"flickr.com\") with no protocol or pathname. System.Int32 page The page of the results to return. Default is 1. System.Int32 perPage The number of referrers to return per page. The default is 25 and the maximum is 100. CancellationToken cancellationToken Returns Type Description Task < StatReferrerCollection > | Improve this Doc View Source GetPhotostreamStatsAsync(DateTime, CancellationToken) Returns the number of views on the given date for the users photostream. Only will be populated. Declaration Task<Stats> GetPhotostreamStatsAsync(DateTime date, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date The date to return stats for. CancellationToken cancellationToken Returns Type Description Task < Stats > | Improve this Doc View Source GetPopularPhotosAsync(DateTime, PopularitySort, Int32, Int32, CancellationToken) List the photos with the most views, comments or favorites. Declaration Task<PopularPhotoCollection> GetPopularPhotosAsync(DateTime date, PopularitySort sort, int page, int perPage, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date Stats will be returned for this date. A day according to Flickr Stats starts at midnight GMT for all users, and timestamps will automatically be rounded down to the start of the day. If no date is provided, all time view counts will be returned. PopularitySort sort The order in which to sort returned photos. Defaults to views. The possible values are views, comments and favorites. System.Int32 page The page of results to return. If this argument is omitted, it defaults to 1. System.Int32 perPage Number of photos to return per page. If this argument is omitted, it defaults to 25. The maximum allowed value is 100. CancellationToken cancellationToken Returns Type Description Task < PopularPhotoCollection > | Improve this Doc View Source GetTotalViewsAsync(DateTime, CancellationToken) Get the overall view counts for an account on a given date. Declaration Task<StatViews> GetTotalViewsAsync(DateTime date, CancellationToken cancellationToken = null) Parameters Type Name Description DateTime date The date to return the overall view count for. CancellationToken cancellationToken Returns Type Description Task < StatViews >"
  },
  "api/Flickr.Net.Core.IFlickrTags.html": {
    "href": "api/Flickr.Net.Core.IFlickrTags.html",
    "title": "Interface IFlickrTags | Flickr.Net",
    "keywords": "Interface IFlickrTags The flickr tags. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrTags Methods | Improve this Doc View Source GetClusterPhotosAsync(Cluster, PhotoSearchExtras, CancellationToken) Returns the first 24 photos for a given tag cluster. Declaration Task<PhotoCollection> GetClusterPhotosAsync(Cluster cluster, PhotoSearchExtras extras, CancellationToken cancellationToken = null) Parameters Type Name Description Cluster cluster The instance to return the photos for. PhotoSearchExtras extras Extra information to return with each photo. CancellationToken cancellationToken Returns Type Description Task < PhotoCollection > | Improve this Doc View Source GetClustersAsync(String, CancellationToken) Gives you a list of tag clusters for the given tag. Declaration Task<ClusterCollection> GetClustersAsync(string tag, CancellationToken cancellationToken = null) Parameters Type Name Description System.String tag The tag to fetch clusters for. CancellationToken cancellationToken Returns Type Description Task < ClusterCollection > | Improve this Doc View Source GetHotListAsync(String, Nullable<Int32>, CancellationToken) Returns a list of hot tags for the given period. Declaration Task<HotTagCollection> GetHotListAsync(string period = null, int? count = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String period The period for which to fetch hot tags. Valid values are day and week (defaults to day). System.Nullable < System.Int32 > count The number of tags to return. Defaults to 20. Maximum allowed value is 200. CancellationToken cancellationToken Returns Type Description Task < HotTagCollection > | Improve this Doc View Source GetListPhotoAsync(String, CancellationToken) Get the tag list for a given photo. Declaration Task<Collection<PhotoInfoTag>> GetListPhotoAsync(string photoId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String photoId The id of the photo to return tags for. CancellationToken cancellationToken Returns Type Description Task < Collection < PhotoInfoTag >> | Improve this Doc View Source GetListUserAsync(String, CancellationToken) Get the tag list for a given user (or the currently logged in user). Declaration Task<TagCollection> GetListUserAsync(string userId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed. CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source GetListUserPopularAsync(String, Nullable<Int32>, CancellationToken) Get the popular tags for a given user (or the currently logged in user). Declaration Task<TagCollection> GetListUserPopularAsync(string userId = null, int? count = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The NSID of the user to fetch the tag list for. If this argument is not specified, the currently logged in user (if any) is assumed. System.Nullable < System.Int32 > count Number of popular tags to return. defaults to 10 when this argument is not present. CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source GetListUserRawAsync(String, CancellationToken) Gets a list of 'cleaned' tags and the raw values for a specific tag. Declaration Task<RawTagCollection> GetListUserRawAsync(string tag = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String tag The tag to return the raw version of. CancellationToken cancellationToken Returns Type Description Task < RawTagCollection > | Improve this Doc View Source GetMostFrequentlyUsedAsync(CancellationToken) Returns a collection of the most frequently used tags for the authenticated user. Declaration Task<TagCollection> GetMostFrequentlyUsedAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < TagCollection > | Improve this Doc View Source GetRelatedAsync(String, CancellationToken) Returns a list of tags 'related' to the given tag, based on clustered usage analysis. Declaration Task<TagCollection> GetRelatedAsync(string tag, CancellationToken cancellationToken = null) Parameters Type Name Description System.String tag The tag to fetch related tags for. CancellationToken cancellationToken Returns Type Description Task < TagCollection >"
  },
  "api/Flickr.Net.Core.IFlickrTest.html": {
    "href": "api/Flickr.Net.Core.IFlickrTest.html",
    "title": "Interface IFlickrTest | Flickr.Net",
    "keywords": "Interface IFlickrTest The flickr test. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrTest Methods | Improve this Doc View Source EchoAsync(Dictionary<String, String>, CancellationToken) Echos back all parameters passed in. Declaration Task<EchoResponseDictionary> EchoAsync(Dictionary<string, string> parameters, CancellationToken cancellationToken = null) Parameters Type Name Description Dictionary < System.String , System.String > parameters A dictionary of extra parameters to pass in. Note, the \"method\" and \"api_key\" parameters will always be passed in. CancellationToken cancellationToken Returns Type Description Task < EchoResponseDictionary > | Improve this Doc View Source LoginAsync(CancellationToken) Test the logged in state of the current Filckr object. Declaration Task<FoundUser> LoginAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task < FoundUser > | Improve this Doc View Source NullAsync(CancellationToken) Null test. Declaration Task NullAsync(CancellationToken cancellationToken = null) Parameters Type Name Description CancellationToken cancellationToken Returns Type Description Task"
  },
  "api/Flickr.Net.Core.IFlickrUpload.html": {
    "href": "api/Flickr.Net.Core.IFlickrUpload.html",
    "title": "Interface IFlickrUpload | Flickr.Net",
    "keywords": "Interface IFlickrUpload The flickr upload. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrUpload Methods | Improve this Doc View Source ReplacePictureAsync(Stream, String, String, IProgress<Double>, CancellationToken) Replace an existing photo on Flickr. Declaration Task<string> ReplacePictureAsync(Stream stream, string fileName, string photoId, IProgress<double> progress = null, CancellationToken cancellationToken = null) Parameters Type Name Description Stream stream The object containing the photo to be uploaded. System.String fileName The filename of the file to replace the existing item with. System.String photoId The ID of the photo to replace. IProgress < System.Double > progress CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source UploadPictureAsync(Stream, String, String, String, String, Boolean, Boolean, Boolean, ContentType, SafetyLevel, HiddenFromSearch, IProgress<Double>, CancellationToken) UploadPicture method that does all the uploading work. Declaration Task<string> UploadPictureAsync(Stream stream, string fileName, string title = null, string description = null, string tags = null, bool isPublic = false, bool isFamily = false, bool isFriend = false, ContentType contentType = null, SafetyLevel safetyLevel = null, HiddenFromSearch hiddenFromSearch = null, IProgress<double> progress = null, CancellationToken cancellationToken = null) Parameters Type Name Description Stream stream The object containing the pphoto to be uploaded. System.String fileName The filename of the file to upload. Used as the title if title is null. System.String title The title of the photo (optional). System.String description The description of the photograph (optional). System.String tags The tags for the photograph (optional). System.Boolean isPublic false for private, true for public. System.Boolean isFamily true if visible to family. System.Boolean isFriend true if visible to friends only. ContentType contentType The content type of the photo, i.e. Photo, Screenshot or Other. SafetyLevel safetyLevel The safety level of the photo, i.e. Safe, Moderate or Restricted. HiddenFromSearch hiddenFromSearch Is the photo hidden from public searches. IProgress < System.Double > progress CancellationToken cancellationToken Returns Type Description Task < System.String >"
  },
  "api/Flickr.Net.Core.IFlickrUrls.html": {
    "href": "api/Flickr.Net.Core.IFlickrUrls.html",
    "title": "Interface IFlickrUrls | Flickr.Net",
    "keywords": "Interface IFlickrUrls The flickr urls. Namespace : Flickr.Net.Core Assembly : Flickr.Net.Core.dll Syntax public interface IFlickrUrls Methods | Improve this Doc View Source GetGroupAsync(String, CancellationToken) Returns the url to a group's page. Declaration Task<string> GetGroupAsync(string groupId, CancellationToken cancellationToken = null) Parameters Type Name Description System.String groupId The NSID of the group to fetch the url for. CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source GetUserPhotosAsync(String, CancellationToken) Returns the url to a user's photos. Declaration Task<string> GetUserPhotosAsync(string userId = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The NSID of the user to fetch the url for. If omitted, the calling user is assumed. CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source GetUserProfileAsync(String, CancellationToken) Returns the url to a user's profile. Declaration Task<string> GetUserProfileAsync(string userId = null, CancellationToken cancellationToken = null) Parameters Type Name Description System.String userId The NSID of the user to fetch the url for. If omitted, the calling user is assumed. CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source LookupGalleryAsync(String, CancellationToken) Returns gallery info, by url. Declaration Task<Gallery> LookupGalleryAsync(string url, CancellationToken cancellationToken = null) Parameters Type Name Description System.String url The gallery's URL. CancellationToken cancellationToken Returns Type Description Task < Gallery > | Improve this Doc View Source LookupGroupAsync(String, CancellationToken) Returns a group NSID, given the url to a group's page or photo pool. Declaration Task<string> LookupGroupAsync(string urlToFind, CancellationToken cancellationToken = null) Parameters Type Name Description System.String urlToFind The url to the group's page or photo pool. CancellationToken cancellationToken Returns Type Description Task < System.String > | Improve this Doc View Source LookupUserAsync(String, CancellationToken) Returns a user NSID, given the url to a user's photos or profile. Declaration Task<FoundUser> LookupUserAsync(string urlToFind, CancellationToken cancellationToken = null) Parameters Type Name Description System.String urlToFind Thr url to the user's profile or photos page. CancellationToken cancellationToken Returns Type Description Task < FoundUser >"
  },
  "api/Flickr.Net.Core.Internals.BoundaryBox.html": {
    "href": "api/Flickr.Net.Core.Internals.BoundaryBox.html",
    "title": "Class BoundaryBox | Flickr.Net",
    "keywords": "Class BoundaryBox Summary description for BoundaryBox. Inheritance System.Object BoundaryBox Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) Namespace : Flickr.Net.Core.Internals Assembly : Flickr.Net.Core.dll Syntax public class BoundaryBox Constructors | Improve this Doc View Source BoundaryBox() Default constructor Declaration public BoundaryBox() | Improve this Doc View Source BoundaryBox(GeoAccuracy) Default constructor, specifying only the accuracy level. Declaration public BoundaryBox(GeoAccuracy accuracy) Parameters Type Name Description GeoAccuracy accuracy The of the search parameter. | Improve this Doc View Source BoundaryBox(Double, Double, Double, Double) Constructor for the BoundaryBox . Declaration public BoundaryBox(double minimumLongitude, double minimumLatitude, double maximumLongitude, double maximumLatitude) Parameters Type Name Description System.Double minimumLongitude The minimum longitude of the boundary box. Range of -180 to 180 allowed. System.Double minimumLatitude The minimum latitude of the boundary box. Range of -90 to 90 allowed. System.Double maximumLongitude The maximum longitude of the boundary box. Range of -180 to 180 allowed. System.Double maximumLatitude The maximum latitude of the boundary box. Range of -90 to 90 allowed. | Improve this Doc View Source BoundaryBox(Double, Double, Double, Double, GeoAccuracy) Constructor for the BoundaryBox . Declaration public BoundaryBox(double minimumLongitude, double minimumLatitude, double maximumLongitude, double maximumLatitude, GeoAccuracy accuracy) Parameters Type Name Description System.Double minimumLongitude The minimum longitude of the boundary box. Range of -180 to 180 allowed. System.Double minimumLatitude The minimum latitude of the boundary box. Range of -90 to 90 allowed. System.Double maximumLongitude The maximum longitude of the boundary box. Range of -180 to 180 allowed. System.Double maximumLatitude The maximum latitude of the boundary box. Range of -90 to 90 allowed. GeoAccuracy accuracy The of the search parameter. | Improve this Doc View Source BoundaryBox(String) Constructor for the BoundaryBox Declaration public BoundaryBox(string points) Parameters Type Name Description System.String points A comma seperated list of co-ordinates defining the boundary box. | Improve this Doc View Source BoundaryBox(String, GeoAccuracy) Constructor for the BoundaryBox Declaration public BoundaryBox(string points, GeoAccuracy accuracy) Parameters Type Name Description System.String points A comma seperated list of co-ordinates defining the boundary box. GeoAccuracy accuracy The of the search parameter. Properties | Improve this Doc View Source Accuracy The search accuracy - optional. Defaults to . Declaration public GeoAccuracy Accuracy { get; set; } Property Value Type Description GeoAccuracy | Improve this Doc View Source Canada Example boundary box for Canada. Declaration public static BoundaryBox Canada { get; } Property Value Type Description BoundaryBox | Improve this Doc View Source MaximumLatitude The maximum latitude of the boundary box, i.e. top right hand corner. Range of -90 to 90 allowed. Declaration public double MaximumLatitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MaximumLongitude The maximum longitude of the boundary box, i.e. top right hand corner. Range of -180 to 180 allowed. Declaration public double MaximumLongitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinimumLatitude The minimum latitude of the boundary box, i.e. bottom left hand corner. Declaration public double MinimumLatitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source MinimumLongitude The minimum longitude of the boundary box, i.e. bottom left hand corner. Range of -180 to 180 allowed. Declaration public double MinimumLongitude { get; set; } Property Value Type Description System.Double | Improve this Doc View Source UK Example boundary box for the UK. Declaration public static BoundaryBox UK { get; } Property Value Type Description BoundaryBox | Improve this Doc View Source UKNewcastle Example boundary box for Newcastle upon Tyne, England. Declaration public static BoundaryBox UKNewcastle { get; } Property Value Type Description BoundaryBox | Improve this Doc View Source Usa Example boundary box for the USA (excludes Hawaii and Alaska). Declaration public static BoundaryBox Usa { get; } Property Value Type Description BoundaryBox | Improve this Doc View Source World Example boundary box for the whole world. Declaration public static BoundaryBox World { get; } Property Value Type Description BoundaryBox Methods | Improve this Doc View Source DiagonalDistanceInKM() Calculates the distance in kilometres from the SW to the NE corners of this boundary box. Declaration public double DiagonalDistanceInKM() Returns Type Description System.Double | Improve this Doc View Source DiagonalDistanceInMiles() Calculates the distance in miles from the SW to the NE corners of this boundary box. Declaration public double DiagonalDistanceInMiles() Returns Type Description System.Double | Improve this Doc View Source ToString() Overrides the ToString method. Declaration public override string ToString() Returns Type Description System.String A comma seperated list of co-ordinates defining the boundary box. Overrides System.Object.ToString()"
  },
  "api/Flickr.Net.Core.Internals.Caching.Cache.html": {
    "href": "api/Flickr.Net.Core.Internals.Caching.Cache.html",
    "title": "Class Cache | Flickr.Net",
    "keywords": "Class Cache Internal Cache class Inheritance System.Object Cache Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals.Caching Assembly : Flickr.Net.Core.dll Syntax public class Cache Constructors | Improve this Doc View Source Cache(FlickrCachingSettings) Initializes a new instance of the Cache class. Declaration public Cache(FlickrCachingSettings settings) Parameters Type Name Description FlickrCachingSettings settings The settings. Properties | Improve this Doc View Source CacheDisabled Returns weither of not the cache is currently disabled. Declaration public bool CacheDisabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CacheLocation Returns the currently set location for the cache. Declaration public string CacheLocation { get; } Property Value Type Description System.String | Improve this Doc View Source CacheTimeout The default timeout for cachable objects within the cache. Declaration public TimeSpan CacheTimeout { get; } Property Value Type Description TimeSpan | Improve this Doc View Source Responses A static object containing the list of cached responses from Flickr. Declaration public PersistentCache Responses { get; } Property Value Type Description PersistentCache Methods | Improve this Doc View Source FlushCache() Clears all responses from the cache. Declaration public void FlushCache() | Improve this Doc View Source FlushCache(Uri) Remove a specific URL from the cache. Declaration public void FlushCache(Uri url) Parameters Type Name Description Uri url Extension Methods CacheExtensions.FlushCache(Cache, String)"
  },
  "api/Flickr.Net.Core.Internals.Caching.CacheItemPersister.html": {
    "href": "api/Flickr.Net.Core.Internals.Caching.CacheItemPersister.html",
    "title": "Class CacheItemPersister | Flickr.Net",
    "keywords": "Class CacheItemPersister An interface that knows how to read/write subclasses of ICacheItem. Obviously there will be a tight coupling between concrete implementations of ICacheItem and concrete implementations of ICacheItemPersister. Inheritance System.Object CacheItemPersister Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals.Caching Assembly : Flickr.Net.Core.dll Syntax public abstract class CacheItemPersister Methods | Improve this Doc View Source Read(Stream) Read a single cache item from the input stream. Declaration public abstract ICacheItem Read(Stream inputStream) Parameters Type Name Description Stream inputStream Returns Type Description ICacheItem | Improve this Doc View Source Write(Stream, ICacheItem) Write a single cache item to the output stream. Declaration public abstract void Write(Stream outputStream, ICacheItem cacheItem) Parameters Type Name Description Stream outputStream ICacheItem cacheItem"
  },
  "api/Flickr.Net.Core.Internals.Caching.html": {
    "href": "api/Flickr.Net.Core.Internals.Caching.html",
    "title": "Namespace Flickr.Net.Core.Internals.Caching | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Internals.Caching Classes Cache Internal Cache class CacheItemPersister An interface that knows how to read/write subclasses of ICacheItem. Obviously there will be a tight coupling between concrete implementations of ICacheItem and concrete implementations of ICacheItemPersister. PersistentCache A threadsafe cache that is backed by disk storage. All public methods that read or write state must be protected by the lockFile. Private methods should not acquire the lockFile as it is not reentrant. ResponseCacheItem A cache item containing details of a REST response from Flickr. Interfaces ICacheItem An item that can be stored in a cache."
  },
  "api/Flickr.Net.Core.Internals.Caching.ICacheItem.html": {
    "href": "api/Flickr.Net.Core.Internals.Caching.ICacheItem.html",
    "title": "Interface ICacheItem | Flickr.Net",
    "keywords": "Interface ICacheItem An item that can be stored in a cache. Namespace : Flickr.Net.Core.Internals.Caching Assembly : Flickr.Net.Core.dll Syntax public interface ICacheItem Properties | Improve this Doc View Source CreationTime The time this cache item was created. Declaration DateTime CreationTime { get; } Property Value Type Description DateTime | Improve this Doc View Source FileSize The size of this item, in bytes. Return 0 if size management is not important. Declaration long FileSize { get; } Property Value Type Description System.Int64 Methods | Improve this Doc View Source OnItemFlushed() Gets called back when the item gets flushed from the cache. Declaration void OnItemFlushed()"
  },
  "api/Flickr.Net.Core.Internals.Caching.PersistentCache.html": {
    "href": "api/Flickr.Net.Core.Internals.Caching.PersistentCache.html",
    "title": "Class PersistentCache | Flickr.Net",
    "keywords": "Class PersistentCache A threadsafe cache that is backed by disk storage. All public methods that read or write state must be protected by the lockFile. Private methods should not acquire the lockFile as it is not reentrant. Inheritance System.Object PersistentCache Namespace : Flickr.Net.Core.Internals.Caching Assembly : Flickr.Net.Core.dll Syntax public sealed class PersistentCache : IDisposable Constructors | Improve this Doc View Source PersistentCache(String, CacheItemPersister) Initializes a new instance of the PersistentCache for the given filename and cache type. Declaration public PersistentCache(string filename, CacheItemPersister persister) Parameters Type Name Description System.String filename CacheItemPersister persister Properties | Improve this Doc View Source Item[String] Gets or sets cache values. Declaration public ICacheItem this[string key] { set; } Parameters Type Name Description System.String key Property Value Type Description ICacheItem Methods | Improve this Doc View Source Flush() Clears the current cache of items. Declaration public void Flush() | Improve this Doc View Source Get(String, TimeSpan, Boolean) Gets the specified key from the cache unless it has expired. Declaration public ICacheItem Get(string key, TimeSpan maxAge, bool removeIfExpired) Parameters Type Name Description System.String key The key to look up in the cache. TimeSpan maxAge The maximum age the item can be before it is no longer returned. System.Boolean removeIfExpired Whether to delete the item if it has expired or not. Returns Type Description ICacheItem | Improve this Doc View Source Shrink(Int64) Shrinks the current cache to a specific size, removing older items first. Declaration public void Shrink(long size) Parameters Type Name Description System.Int64 size | Improve this Doc View Source ToArray(Type) Return all items in the cache. Works similarly to ArrayList.ToArray(Type). Declaration public ICacheItem[] ToArray(Type valueType) Parameters Type Name Description Type valueType Returns Type Description ICacheItem []"
  },
  "api/Flickr.Net.Core.Internals.Caching.ResponseCacheItem.html": {
    "href": "api/Flickr.Net.Core.Internals.Caching.ResponseCacheItem.html",
    "title": "Class ResponseCacheItem | Flickr.Net",
    "keywords": "Class ResponseCacheItem A cache item containing details of a REST response from Flickr. Inheritance System.Object ResponseCacheItem Implements ICacheItem Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals.Caching Assembly : Flickr.Net.Core.dll Syntax public sealed class ResponseCacheItem : ICacheItem Constructors | Improve this Doc View Source ResponseCacheItem(Uri, Byte[], DateTime) Creates an instance of the ResponseCacheItem class. Declaration public ResponseCacheItem(Uri url, byte[] response, DateTime creationTime) Parameters Type Name Description Uri url System.Byte [] response DateTime creationTime Properties | Improve this Doc View Source CreationTime Gets or sets the time the cache item was created. Declaration public DateTime CreationTime { get; set; } Property Value Type Description DateTime | Improve this Doc View Source FileSize Gets the filesize of the request. Declaration public long FileSize { get; } Property Value Type Description System.Int64 | Improve this Doc View Source Response Gets or sets the XML response. Declaration public byte[] Response { get; set; } Property Value Type Description System.Byte [] | Improve this Doc View Source Url Gets or sets the original URL of the request. Declaration public Uri Url { get; set; } Property Value Type Description Uri Explicit Interface Implementations | Improve this Doc View Source ICacheItem.OnItemFlushed() Declaration void ICacheItem.OnItemFlushed() Implements ICacheItem"
  },
  "api/Flickr.Net.Core.Internals.EchoResponseDictionary.html": {
    "href": "api/Flickr.Net.Core.Internals.EchoResponseDictionary.html",
    "title": "Class EchoResponseDictionary | Flickr.Net",
    "keywords": "Class EchoResponseDictionary The response returned by the EchoAsync(Dictionary<String, String>, CancellationToken) method. Inheritance System.Object EchoResponseDictionary Implements IFlickrParsable Namespace : Flickr.Net.Core.Internals Assembly : Flickr.Net.Core.dll Syntax public sealed class EchoResponseDictionary : Dictionary<string, string> Implements IFlickrParsable"
  },
  "api/Flickr.Net.Core.Internals.Extensions.AuthLevelExtensions.html": {
    "href": "api/Flickr.Net.Core.Internals.Extensions.AuthLevelExtensions.html",
    "title": "Class AuthLevelExtensions | Flickr.Net",
    "keywords": "Class AuthLevelExtensions Inheritance System.Object AuthLevelExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals.Extensions Assembly : Flickr.Net.Core.dll Syntax public static class AuthLevelExtensions Methods | Improve this Doc View Source ToFlickrString(AuthLevel) Converts to a string. Declaration public static string ToFlickrString(this AuthLevel level) Parameters Type Name Description AuthLevel level The level to convert. Returns Type Description System.String"
  },
  "api/Flickr.Net.Core.Internals.Extensions.CacheExtensions.html": {
    "href": "api/Flickr.Net.Core.Internals.Extensions.CacheExtensions.html",
    "title": "Class CacheExtensions | Flickr.Net",
    "keywords": "Class CacheExtensions The cache extensions. Inheritance System.Object CacheExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals.Extensions Assembly : Flickr.Net.Core.dll Syntax public static class CacheExtensions Methods | Improve this Doc View Source FlushCache(Cache, String) Clears the cache for a particular URL. Declaration public static void FlushCache(this Cache cache, string url) Parameters Type Name Description Cache cache System.String url The URL to remove from the cache. Remarks The URL can either be an image URL for a downloaded picture, or a request URL (see LastRequest for getting the last URL)."
  },
  "api/Flickr.Net.Core.Internals.Extensions.html": {
    "href": "api/Flickr.Net.Core.Internals.Extensions.html",
    "title": "Namespace Flickr.Net.Core.Internals.Extensions | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Internals.Extensions Classes AuthLevelExtensions CacheExtensions The cache extensions. MachineTagModeExtensions TagModeExtensions"
  },
  "api/Flickr.Net.Core.Internals.Extensions.MachineTagModeExtensions.html": {
    "href": "api/Flickr.Net.Core.Internals.Extensions.MachineTagModeExtensions.html",
    "title": "Class MachineTagModeExtensions | Flickr.Net",
    "keywords": "Class MachineTagModeExtensions Inheritance System.Object MachineTagModeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals.Extensions Assembly : Flickr.Net.Core.dll Syntax public static class MachineTagModeExtensions Methods | Improve this Doc View Source ToFlickrString(MachineTagMode) Convert a to a string used when passing to Flickr. Declaration public static string ToFlickrString(this MachineTagMode machineTagMode) Parameters Type Name Description MachineTagMode machineTagMode The machine tag mode to convert. Returns Type Description System.String The string to pass to Flickr."
  },
  "api/Flickr.Net.Core.Internals.Extensions.TagModeExtensions.html": {
    "href": "api/Flickr.Net.Core.Internals.Extensions.TagModeExtensions.html",
    "title": "Class TagModeExtensions | Flickr.Net",
    "keywords": "Class TagModeExtensions Inheritance System.Object TagModeExtensions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals.Extensions Assembly : Flickr.Net.Core.dll Syntax public static class TagModeExtensions Methods | Improve this Doc View Source ToFlickrString(TagMode) Convert a to a string used when passing to Flickr. Declaration public static string ToFlickrString(this TagMode tagMode) Parameters Type Name Description TagMode tagMode The tag mode to convert. Returns Type Description System.String The string to pass to Flickr."
  },
  "api/Flickr.Net.Core.Internals.FlickrResponder.html": {
    "href": "api/Flickr.Net.Core.Internals.FlickrResponder.html",
    "title": "Class FlickrResponder | Flickr.Net",
    "keywords": "Class FlickrResponder Flickr library interaction with the web goes in here. Inheritance System.Object FlickrResponder Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals Assembly : Flickr.Net.Core.dll Syntax public static class FlickrResponder Methods | Improve this Doc View Source GetDataResponseAsync(Flickr, String, Dictionary<String, String>, CancellationToken) Gets a data response for the given base url and parameters, either using OAuth or not depending on which parameters were passed in. Declaration public static async Task<byte[]> GetDataResponseAsync(Flickr flickr, string baseUrl, Dictionary<string, string> parameters, CancellationToken cancellationToken = null) Parameters Type Name Description Flickr flickr The current instance of the Flickr class. System.String baseUrl The base url to be called. Dictionary < System.String , System.String > parameters A dictionary of parameters. CancellationToken cancellationToken Returns Type Description Task < System.Byte []> | Improve this Doc View Source OAuthCalculateAuthHeader(Dictionary<String, String>) Returns the string for the Authorisation header to be used for OAuth authentication. Parameters other than OAuth ones are ignored. Declaration public static string OAuthCalculateAuthHeader(Dictionary<string, string> parameters) Parameters Type Name Description Dictionary < System.String , System.String > parameters OAuth and other parameters. Returns Type Description System.String | Improve this Doc View Source OAuthCalculatePostData(Dictionary<String, String>) Calculates for form encoded POST data to be included in the body of an OAuth call. Declaration public static string OAuthCalculatePostData(Dictionary<string, string> parameters) Parameters Type Name Description Dictionary < System.String , System.String > parameters Returns Type Description System.String Remarks This will include all non-OAuth parameters. The OAuth parameter will be included in the Authentication header."
  },
  "api/Flickr.Net.Core.Internals.html": {
    "href": "api/Flickr.Net.Core.Internals.html",
    "title": "Namespace Flickr.Net.Core.Internals | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Internals Classes BoundaryBox Summary description for BoundaryBox. EchoResponseDictionary The response returned by the EchoAsync(Dictionary<String, String>, CancellationToken) method. FlickrResponder Flickr library interaction with the web goes in here. OAuthRequestToken Class containing details of the OAUth request token returned by Flickr. UtilityMethods Internal class providing certain utility functions to other classes."
  },
  "api/Flickr.Net.Core.Internals.OAuthRequestToken.html": {
    "href": "api/Flickr.Net.Core.Internals.OAuthRequestToken.html",
    "title": "Class OAuthRequestToken | Flickr.Net",
    "keywords": "Class OAuthRequestToken Class containing details of the OAUth request token returned by Flickr. Inheritance System.Object OAuthRequestToken Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals Assembly : Flickr.Net.Core.dll Syntax public class OAuthRequestToken Properties | Improve this Doc View Source Token The request token string. Declaration public string Token { get; set; } Property Value Type Description System.String | Improve this Doc View Source TokenSecret The request token secret. Declaration public string TokenSecret { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source ParseResponse(Byte[]) Parses a URL parameter encoded string and returns a new OAuthRequestToken Declaration public static OAuthRequestToken ParseResponse(byte[] response) Parameters Type Name Description System.Byte [] response A URL parameter encoded string, e.g. \"oauth_token=ABC&oauth_token_secret=DEF\". Returns Type Description OAuthRequestToken"
  },
  "api/Flickr.Net.Core.Internals.UtilityMethods.html": {
    "href": "api/Flickr.Net.Core.Internals.UtilityMethods.html",
    "title": "Class UtilityMethods | Flickr.Net",
    "keywords": "Class UtilityMethods Internal class providing certain utility functions to other classes. Inheritance System.Object UtilityMethods Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Internals Assembly : Flickr.Net.Core.dll Syntax public static class UtilityMethods Methods | Improve this Doc View Source BuddyIcon(String, String, String) Returns the buddy icon for a given set of server, farm and userid. If no server is present then returns the standard buddy icon. Declaration public static string BuddyIcon(string server, string farm, string userId) Parameters Type Name Description System.String server System.String farm System.String userId Returns Type Description System.String | Improve this Doc View Source CheckParsingException(XmlReader) If an unknown element is found and the DLL is a debug DLL then a ParsingException is thrown. Declaration [Conditional(\"DEBUG\")] public static void CheckParsingException(XmlReader reader) Parameters Type Name Description XmlReader reader The containing the unknown xml node. | Improve this Doc View Source CleanCollectionId(String) Cleans the collection id. Declaration public static string CleanCollectionId(string collectionId) Parameters Type Name Description System.String collectionId The collection id. Returns Type Description System.String A string. | Improve this Doc View Source ColorCodesToString(IEnumerable<String>) Colors the codes to string. Declaration public static string ColorCodesToString(IEnumerable<string> codes) Parameters Type Name Description System.Collections.IEnumerable < System.String > codes The codes. Returns Type Description System.String A string. | Improve this Doc View Source DateToMySql(DateTime) Dates the to my sql. Declaration public static string DateToMySql(DateTime date) Parameters Type Name Description DateTime date The date. Returns Type Description System.String A string. | Improve this Doc View Source DateToUnixTimestamp(DateTime) Converts a object into a unix timestamp number. Declaration public static string DateToUnixTimestamp(DateTime date) Parameters Type Name Description DateTime date The date to convert. Returns Type Description System.String A long for the number of seconds since 1st January 1970, as per unix specification. | Improve this Doc View Source EscapeOAuthString(String) Escapes a string for use with OAuth. Declaration public static string EscapeOAuthString(string text) Parameters Type Name Description System.String text The text to escape. Returns Type Description System.String The escaped string. Remarks The only valid characters are Alphanumerics and \"-\", \"_\", \".\" and \"~\". Everything else is hex encoded. | Improve this Doc View Source MD5Hash(String) Generates an MD5 Hash of the passed in string. Declaration public static string MD5Hash(string data) Parameters Type Name Description System.String data The unhashed string. Returns Type Description System.String The MD5 hash string. | Improve this Doc View Source MediaTypeToString(MediaType) Converts a enumeration into a string used by Flickr. Declaration public static string MediaTypeToString(MediaType mediaType) Parameters Type Name Description MediaType mediaType The value to convert. Returns Type Description System.String | Improve this Doc View Source MemberTypeToString(MemberTypes) Members the type to string. Declaration public static string MemberTypeToString(MemberTypes memberTypes) Parameters Type Name Description MemberTypes memberTypes The member types. Returns Type Description System.String A string. | Improve this Doc View Source MySqlToDate(String) Mies the sql to date. Declaration public static DateTime MySqlToDate(string p) Parameters Type Name Description System.String p The p. Returns Type Description DateTime A DateTime. | Improve this Doc View Source ParseDateWithGranularity(String) Parses a date which may contain only a vald year component. Declaration public static DateTime ParseDateWithGranularity(string date) Parameters Type Name Description System.String date The date, as a string, to be parsed. Returns Type Description DateTime The parsed . | Improve this Doc View Source ParseIdToMemberType(String) Parses the id to member type. Declaration public static MemberTypes ParseIdToMemberType(string memberTypeId) Parameters Type Name Description System.String memberTypeId The member type id. Returns Type Description MemberTypes A MemberTypes. | Improve this Doc View Source PartialOptionsIntoArray(PartialSearchOptions, Dictionary<String, String>) Adds the partial options to the passed in System.Collections.Hashtable . Declaration public static void PartialOptionsIntoArray(PartialSearchOptions options, Dictionary<string, string> parameters) Parameters Type Name Description PartialSearchOptions options The options to convert to an array. Dictionary < System.String , System.String > parameters The System.Collections.Hashtable to add the option key value pairs to. | Improve this Doc View Source SortOrderToString(PhotoSearchSortOrder) Converts a into a string for use by the Flickr API. Declaration public static string SortOrderToString(PhotoSearchSortOrder order) Parameters Type Name Description PhotoSearchSortOrder order The sort order to convert. Returns Type Description System.String The string representative for the sort order. | Improve this Doc View Source SortOrderToString(PopularitySort) Converts a enum to a string. Declaration public static string SortOrderToString(PopularitySort sortOrder) Parameters Type Name Description PopularitySort sortOrder The value to convert. Returns Type Description System.String | Improve this Doc View Source StringToDictionary(String) Converts a URL parameter encoded string into a dictionary. Declaration public static Dictionary<string, string> StringToDictionary(string response) Parameters Type Name Description System.String response Returns Type Description Dictionary < System.String , System.String > Remarks e.g. ab=cd&ef=gh will return a dictionary of { \"ab\" => \"cd\", \"ef\" => \"gh\" }. | Improve this Doc View Source StylesToString(ICollection<Style>) Converts a collection of values to a string literal containing the lowercase string representations of each distinct style once, separated by commas. Declaration public static string StylesToString(ICollection<Style> styles) Parameters Type Name Description System.Collections.ICollection < Style > styles Set of styles. Returns Type Description System.String Concatenated styles. | Improve this Doc View Source UnixTimestampToDate(Int64) Converts a System.Int64 , representing a unix timestamp number into a object. Declaration public static DateTime UnixTimestampToDate(long timestamp) Parameters Type Name Description System.Int64 timestamp The unix timestamp. Returns Type Description DateTime The object the time represents. | Improve this Doc View Source UnixTimestampToDate(String) Converts a string, representing a unix timestamp number into a object. Declaration public static DateTime UnixTimestampToDate(string timestamp) Parameters Type Name Description System.String timestamp The timestamp, as a string. Returns Type Description DateTime The object the time represents. | Improve this Doc View Source UrlEncode(String) Encodes a URL quesrystring data component. Declaration public static string UrlEncode(string data) Parameters Type Name Description System.String data The data to encode. Returns Type Description System.String The URL encoded string. | Improve this Doc View Source UrlFormat(Photo, String, String) Urls the format. Declaration public static string UrlFormat(Photo p, string size, string extension) Parameters Type Name Description Photo p The p. System.String size The size. System.String extension The extension. Returns Type Description System.String A string. | Improve this Doc View Source UrlFormat(PhotoInfo, String, String) Urls the format. Declaration public static string UrlFormat(PhotoInfo p, string size, string extension) Parameters Type Name Description PhotoInfo p The p. System.String size The size. System.String extension The extension. Returns Type Description System.String A string. | Improve this Doc View Source UrlFormat(Photoset, String, String) Urls the format. Declaration public static string UrlFormat(Photoset p, string size, string extension) Parameters Type Name Description Photoset p The p. System.String size The size. System.String extension The extension. Returns Type Description System.String A string. | Improve this Doc View Source UrlFormat(String, String, String, String, String, String) Urls the format. Declaration public static string UrlFormat(string farm, string server, string photoid, string secret, string size, string extension) Parameters Type Name Description System.String farm The farm. System.String server The server. System.String photoid The photoid. System.String secret The secret. System.String size The size. System.String extension The extension. Returns Type Description System.String A string."
  },
  "api/Flickr.Net.Core.SearchOptions.html": {
    "href": "api/Flickr.Net.Core.SearchOptions.html",
    "title": "Namespace Flickr.Net.Core.SearchOptions | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.SearchOptions Classes PartialSearchOptions Summary description for PartialSearchOptions. PhotoSearchOptions Summary description for PhotoSearchOptions."
  },
  "api/Flickr.Net.Core.SearchOptions.PartialSearchOptions.html": {
    "href": "api/Flickr.Net.Core.SearchOptions.PartialSearchOptions.html",
    "title": "Class PartialSearchOptions | Flickr.Net",
    "keywords": "Class PartialSearchOptions Summary description for PartialSearchOptions. Inheritance System.Object PartialSearchOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.SearchOptions Assembly : Flickr.Net.Core.dll Syntax public class PartialSearchOptions Constructors | Improve this Doc View Source PartialSearchOptions() Default constructor. Declaration public PartialSearchOptions() | Improve this Doc View Source PartialSearchOptions(PhotoSearchExtras) Constructor taking a default parameter. Declaration public PartialSearchOptions(PhotoSearchExtras extras) Parameters Type Name Description PhotoSearchExtras extras See for more details. | Improve this Doc View Source PartialSearchOptions(Int32, Int32) Constructor taking a perPage and page parameter. Declaration public PartialSearchOptions(int perPage, int page) Parameters Type Name Description System.Int32 perPage The number of photos to return per page (maximum). System.Int32 page The page number to return. | Improve this Doc View Source PartialSearchOptions(Int32, Int32, PhotoSearchExtras) Constructor taking a perPage and page parameter and a default parameter. Declaration public PartialSearchOptions(int perPage, int page, PhotoSearchExtras extras) Parameters Type Name Description System.Int32 perPage The number of photos to return per page (maximum). System.Int32 page The page number to return. PhotoSearchExtras extras See for more details. Properties | Improve this Doc View Source Extras Optional extras to return, defaults to all. See for more details. Declaration public PhotoSearchExtras Extras { get; set; } Property Value Type Description PhotoSearchExtras | Improve this Doc View Source MaxTakenDate Maximum date taken. Defaults to which signifies that the value is not to be used. Declaration public DateTime MaxTakenDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source MaxUploadDate Maximum date uploaded. Defaults to which signifies that the value is not to be used. Declaration public DateTime MaxUploadDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source MinTakenDate Minimum date taken. Defaults to which signifies that the value is not to be used. Declaration public DateTime MinTakenDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source MinUploadDate Minimum date uploaded. Defaults to which signifies that the value is not to be used. Declaration public DateTime MinUploadDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Page The page to return. Defaults to page 1. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage Number of photos to return per page. Defaults to 100. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PrivacyFilter The privacy fitler to filter the search on. Declaration public PrivacyFilter PrivacyFilter { get; set; } Property Value Type Description PrivacyFilter | Improve this Doc View Source SortOrder The sort order of the returned list. Default is . Declaration public PhotoSearchSortOrder SortOrder { get; set; } Property Value Type Description PhotoSearchSortOrder"
  },
  "api/Flickr.Net.Core.SearchOptions.PhotoSearchOptions.html": {
    "href": "api/Flickr.Net.Core.SearchOptions.PhotoSearchOptions.html",
    "title": "Class PhotoSearchOptions | Flickr.Net",
    "keywords": "Class PhotoSearchOptions Summary description for PhotoSearchOptions. Inheritance System.Object PhotoSearchOptions Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.SearchOptions Assembly : Flickr.Net.Core.dll Syntax public class PhotoSearchOptions Constructors | Improve this Doc View Source PhotoSearchOptions() Creates a new instance of the search options. Declaration public PhotoSearchOptions() | Improve this Doc View Source PhotoSearchOptions(String) Creates a new instance of the search options, setting the UserId property to the parameter passed in. Declaration public PhotoSearchOptions(string userId) Parameters Type Name Description System.String userId The ID of the User to search for. | Improve this Doc View Source PhotoSearchOptions(String, String) Create an instance of the PhotoSearchOptions for a given user ID and tag list. Declaration public PhotoSearchOptions(string userId, string tags) Parameters Type Name Description System.String userId The ID of the User to search for. System.String tags The tags (comma delimited) to search for. Will match all tags. | Improve this Doc View Source PhotoSearchOptions(String, String, TagMode) Create an instance of the PhotoSearchOptions for a given user ID and tag list, with the selected tag mode. Declaration public PhotoSearchOptions(string userId, string tags, TagMode tagMode) Parameters Type Name Description System.String userId The ID of the User to search for. System.String tags The tags (comma delimited) to search for. TagMode tagMode The TagMode to use to search. | Improve this Doc View Source PhotoSearchOptions(String, String, TagMode, String) Create an instance of the PhotoSearchOptions for a given user ID and tag list, with the selected tag mode, and containing the selected text. Declaration public PhotoSearchOptions(string userId, string tags, TagMode tagMode, string text) Parameters Type Name Description System.String userId The ID of the User to search for. System.String tags The tags (comma delimited) to search for. TagMode tagMode The TagMode to use to search. System.String text The text to search for in photo title and descriptions. Properties | Improve this Doc View Source Accuracy The accuracy of the search for geo location photos. Declaration public GeoAccuracy Accuracy { get; set; } Property Value Type Description GeoAccuracy Remarks Can also be set as a property of the BoundaryBox property. | Improve this Doc View Source BoundaryBox The boundary box for which to search for geo location photos. Declaration public BoundaryBox BoundaryBox { get; set; } Property Value Type Description BoundaryBox | Improve this Doc View Source Camera Search for photos taken with a particular camera. Declaration public string Camera { get; set; } Property Value Type Description System.String | Improve this Doc View Source ColorCodes A list of the new color codes. Declaration public ICollection<string> ColorCodes { get; set; } Property Value Type Description ICollection < System.String > Remarks Acceptable values are \"0\"-\"9\" and \"a\"-\"e\". Or you can use a color name such as \"yellow\", \"blue\", \"green\" etc. | Improve this Doc View Source Contacts Fitler the search results on a particular users contacts. You must set UserId for this option to be honoured. Declaration public ContactSearch Contacts { get; set; } Property Value Type Description ContactSearch | Improve this Doc View Source ContentType Filter your search on a particular type of content (photo, screenshot or other). Declaration public ContentTypeSearch ContentType { get; set; } Property Value Type Description ContentTypeSearch | Improve this Doc View Source ExcludeUserID Exclude a specific user ID from the search results. Declaration public string ExcludeUserID { get; set; } Property Value Type Description System.String | Improve this Doc View Source ExifMaxAperture The maximum aperture to return photos for. Declaration public double? ExifMaxAperture { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source ExifMaxExposure The maximum exposure to return photos for. Declaration public double? ExifMaxExposure { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source ExifMaxFocalLength The maximum focal length to return photos for. Declaration public int? ExifMaxFocalLength { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source ExifMinAperture The minimum aperture to return photos for. Declaration public double? ExifMinAperture { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source ExifMinExposure The minimum exposure to return photos for. Declaration public double? ExifMinExposure { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source ExifMinFocalLength The minimum focal length to return photos for. Declaration public int? ExifMinFocalLength { get; set; } Property Value Type Description System.Nullable < System.Int32 > | Improve this Doc View Source Extras Optional extras to return, defaults to all. See for more details. Declaration public PhotoSearchExtras Extras { get; set; } Property Value Type Description PhotoSearchExtras | Improve this Doc View Source Faves If true then limit the search to within the current person's favourites. Declaration public bool Faves { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source FoursquareVenueID The ID of the Foursquare Venue to return photos for. Declaration public string FoursquareVenueID { get; set; } Property Value Type Description System.String | Improve this Doc View Source FoursquareWoeID The WOE ID of the Foursquare Venue to return photos for. Declaration public string FoursquareWoeID { get; set; } Property Value Type Description System.String | Improve this Doc View Source GeoContext The geocontext for the resulting photos. Declaration public GeoContext GeoContext { get; set; } Property Value Type Description GeoContext | Improve this Doc View Source GroupId The group id of the group to search within. Declaration public string GroupId { get; set; } Property Value Type Description System.String | Improve this Doc View Source GroupPathAlias The path alias for a group to search. Declaration public string GroupPathAlias { get; set; } Property Value Type Description System.String | Improve this Doc View Source HasGeo Filter the search results on those that have Geolocation information. Declaration public bool? HasGeo { get; set; } Property Value Type Description System.Nullable < System.Boolean > | Improve this Doc View Source InGallery Is the image in a gallery. Declaration public bool InGallery { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsCommons True if the photo is taken from the Flickr Commons project. Declaration public bool IsCommons { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source IsGetty Is the photo a part of the getty images collection on Flickr. Declaration public bool IsGetty { get; set; } Property Value Type Description System.Boolean | Improve this Doc View Source JumpTo I've no idea what this does. The Flickr API comment is simply: Jump, jump! Declaration public string JumpTo { get; set; } Property Value Type Description System.String | Improve this Doc View Source Latitude Specify the latitude center of a geo-location search. Declaration public double? Latitude { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source Licenses The licenses you wish to search for. Declaration public Collection<LicenseType> Licenses { get; } Property Value Type Description Collection < LicenseType > | Improve this Doc View Source Longitude Specify the longitude center of a geo-location search. Declaration public double? Longitude { get; set; } Property Value Type Description System.Nullable < System.Double > | Improve this Doc View Source MachineTagMode The machine tag mode. Declaration public MachineTagMode MachineTagMode { get; set; } Property Value Type Description MachineTagMode Remarks Allowed values are any and all. It defaults to any if none specified. | Improve this Doc View Source MachineTags Search for the given machine tags. Declaration public string MachineTags { get; set; } Property Value Type Description System.String Remarks See https://www.flickr.com/services/api/flickr.photos.search.html for details on how to search for machine tags. | Improve this Doc View Source MaxTakenDate Maximum date taken. Defaults to which signifies that the value is not to be used. Declaration public DateTime MaxTakenDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source MaxUploadDate Maximum date uploaded. Defaults to which signifies that the value is not to be used. Declaration public DateTime MaxUploadDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source MediaType Filter by media type. Declaration public MediaType MediaType { get; set; } Property Value Type Description MediaType | Improve this Doc View Source MinTakenDate Minimum date taken. Defaults to which signifies that the value is not to be used. Declaration public DateTime MinTakenDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source MinUploadDate Minimum date uploaded. Defaults to which signifies that the value is not to be used. Declaration public DateTime MinUploadDate { get; set; } Property Value Type Description DateTime | Improve this Doc View Source Page The page to return. Defaults to page 1. Declaration public int Page { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PerPage Number of photos to return per page. Defaults to 100. Declaration public int PerPage { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source PersonId If set then will return photos tagged as containing the given person. Declaration public string PersonId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PlaceId The Flickr Place to return photos for. Declaration public string PlaceId { get; set; } Property Value Type Description System.String | Improve this Doc View Source PrivacyFilter The privacy fitler to filter the search on. Declaration public PrivacyFilter PrivacyFilter { get; set; } Property Value Type Description PrivacyFilter | Improve this Doc View Source Radius Specify the radius of a particular geo-location search. Maximum of 20 miles, 32 kilometers. Declaration public float? Radius { get; set; } Property Value Type Description System.Nullable < System.Single > | Improve this Doc View Source RadiusUnits Specify the units to use for a Geo location based search. Default is Kilometers. Declaration public RadiusUnit RadiusUnits { get; set; } Property Value Type Description RadiusUnit | Improve this Doc View Source SafeSearch Which type of safe search to perform. Declaration public SafetyLevel SafeSearch { get; set; } Property Value Type Description SafetyLevel Remarks An unauthenticated search will only ever return safe photos. | Improve this Doc View Source SortOrder The sort order of the returned list. Default is . Declaration public PhotoSearchSortOrder SortOrder { get; set; } Property Value Type Description PhotoSearchSortOrder | Improve this Doc View Source Styles A collection of styles the search results will be filtered against. Declaration public ICollection<Style> Styles { get; set; } Property Value Type Description ICollection < Style > | Improve this Doc View Source TagMode Tag mode can either be 'all', or 'any'. Defaults to Declaration public TagMode TagMode { get; set; } Property Value Type Description TagMode | Improve this Doc View Source Tags A comma delimited list of tags Declaration public string Tags { get; set; } Property Value Type Description System.String | Improve this Doc View Source Text Search for the given text in photo titles and descriptions. Declaration public string Text { get; set; } Property Value Type Description System.String | Improve this Doc View Source UserId The user Id of the user to search on. Defaults to null for no specific user. Declaration public string UserId { get; set; } Property Value Type Description System.String | Improve this Doc View Source Username Search for photos by the users 'username' Declaration public string Username { get; set; } Property Value Type Description System.String | Improve this Doc View Source WoeId The WOE id to return photos for. This is a spatial reference. Declaration public string WoeId { get; set; } Property Value Type Description System.String Methods | Improve this Doc View Source AddToDictionary(ref Dictionary<String, String>) Takes the various properties of this instance and adds them to a instanced passed in, ready for sending to Flickr. Declaration public void AddToDictionary(ref Dictionary<string, string> parameters) Parameters Type Name Description Dictionary < System.String , System.String > parameters The to add the options to. | Improve this Doc View Source CalculateSlideshowUrl() Calculates the Uri for a Flash slideshow for the given search options. Declaration public string CalculateSlideshowUrl() Returns Type Description System.String"
  },
  "api/Flickr.Net.Core.Settings.FlickrCachingSettings.html": {
    "href": "api/Flickr.Net.Core.Settings.FlickrCachingSettings.html",
    "title": "Class FlickrCachingSettings | Flickr.Net",
    "keywords": "Class FlickrCachingSettings The flickr caching settings. Inheritance System.Object FlickrCachingSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Settings Assembly : Flickr.Net.Core.dll Syntax public class FlickrCachingSettings Properties | Improve this Doc View Source CacheDisabled Gets or sets whether the cache should be disabled. Use only in extreme cases where you are sure you don't want any caching. Declaration public bool CacheDisabled { get; } Property Value Type Description System.Boolean | Improve this Doc View Source CacheLocation Sets or gets the location to store the Cache files. Declaration public string CacheLocation { get; } Property Value Type Description System.String | Improve this Doc View Source CacheSizeLimit CacheSizeLimit is the cache file size in bytes for downloaded pictures. The default is 50MB (or 50 * 1024 * 1025 in bytes). Declaration public long CacheSizeLimit { get; set; } Property Value Type Description System.Int64 | Improve this Doc View Source CacheTimeout All GET calls to Flickr are cached by the Flickr.Net API. Set the CacheTimeout to determine how long these calls should be cached (make this as long as possible!) Declaration public TimeSpan CacheTimeout { get; } Property Value Type Description TimeSpan | Improve this Doc View Source InstanceCacheDisabled Override if the cache is disabled for this particular instance of Flickr . Declaration public bool InstanceCacheDisabled { get; } Property Value Type Description System.Boolean"
  },
  "api/Flickr.Net.Core.Settings.FlickrSettings.html": {
    "href": "api/Flickr.Net.Core.Settings.FlickrSettings.html",
    "title": "Class FlickrSettings | Flickr.Net",
    "keywords": "Class FlickrSettings The flickr settings. Inheritance System.Object FlickrSettings Inherited Members System.Object.Equals(System.Object) System.Object.Equals(System.Object, System.Object) System.Object.GetHashCode() System.Object.GetType() System.Object.MemberwiseClone() System.Object.ReferenceEquals(System.Object, System.Object) System.Object.ToString() Namespace : Flickr.Net.Core.Settings Assembly : Flickr.Net.Core.dll Syntax public class FlickrSettings Properties | Improve this Doc View Source ApiKey Get or set the API Key to be used by all calls. API key is mandatory for all calls to Flickr. Declaration public string ApiKey { get; } Property Value Type Description System.String | Improve this Doc View Source ApiSecret API shared secret is required for all calls that require signing, which includes all methods that require authentication, as well as the actual flickr.auth.* calls. Declaration public string ApiSecret { get; } Property Value Type Description System.String | Improve this Doc View Source HttpTimeout Internal timeout for all web requests in milliseconds. Defaults to 30 seconds. Declaration public int HttpTimeout { get; set; } Property Value Type Description System.Int32 | Improve this Doc View Source OAuthAccessToken OAuth Access Token. Needed for authenticated access using OAuth to Flickr. Declaration public string OAuthAccessToken { get; set; } Property Value Type Description System.String | Improve this Doc View Source OAuthAccessTokenSecret OAuth Access Token Secret. Needed for authenticated access using OAuth to Flickr. Declaration public string OAuthAccessTokenSecret { get; set; } Property Value Type Description System.String"
  },
  "api/Flickr.Net.Core.Settings.html": {
    "href": "api/Flickr.Net.Core.Settings.html",
    "title": "Namespace Flickr.Net.Core.Settings | Flickr.Net",
    "keywords": "Namespace Flickr.Net.Core.Settings Classes FlickrCachingSettings The flickr caching settings. FlickrSettings The flickr settings."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "PLACEHOLDER | Flickr.Net",
    "keywords": "PLACEHOLDER TODO: Add .NET projects to the src folder and run docfx to generate REAL API Documentation !"
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Add your introductions here! | Flickr.Net",
    "keywords": "Add your introductions here!"
  },
  "index.html": {
    "href": "index.html",
    "title": "This is the HOMEPAGE. | Flickr.Net",
    "keywords": "This is the HOMEPAGE . Refer to Markdown for how to write markdown files. Quick Start Notes: Add images to the images folder if the file is referencing an image."
  }
}