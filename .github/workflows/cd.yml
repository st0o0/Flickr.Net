name: .NET Continuous Deployment

on:
  push:
    branches: ["dev", "master"]
  pull_request_target:
    branches: ["dev", "master"]
    types:
      - closed
  workflow_dispatch:
    
env:
  DOTNET_VERSION: '7.0.x'

jobs:
  if_merged:
    if: ${{ github.event_name == 'push' || github.event.pull_request.merged == true }}
    runs-on: ubuntu-latest
    steps:
    - run: |
        echo The PR was merged
        
  test:
    needs: if_merged
    name: Testing Solution
    runs-on: ubuntu-latest
    permissions:
          id-token: write
          contents: read
          checks: write
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Test
        run: dotnet test --logger "trx;LogFileName=test-results.trx" ./src/Flickr.Net.sln
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()   # run this step even if previous step failed
        with:
          name: Dotnet Tests            # Name of the check run which will be created
          path: "**/test-results.trx"  # Path to test results
          reporter: dotnet-trx        # Format of test results
          fail-on-error: true

  semantic-release:
    needs: test
    name: Create a Package Release
    runs-on: ubuntu-latest
    steps:
     - name: Checkout
       uses: actions/checkout@v3
       with:
        fetch-depth: 0
     - name: Setup git verison
       uses: gittools/actions/gitversion/setup@v0
       with:
          versionSpec: '5.x'
     - name: Calcuate git version
       uses: gittools/actions/gitversion/execute@v0
     - name: Display git version
       run: | 
          echo "NuGetVersion: ${{ env.GitVersion_NuGetVersion }}"
     - name: Tag versions in git
       uses: rickstaa/action-create-tag@v1
       with:
          tag: ${{ env.GitVersion_NuGetVersion }}
          tag_exists_error: false
     - name: Changelog
       uses: scottbrenner/generate-changelog-action@master
       id: Changelog
       env:
          REPO: ${{ github.repository }}
     - name: Create Release
       id: create_release
       uses: actions/create-release@latest
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
         tag_name: ${{ env.GitVersion_NuGetVersion }}
         release_name: Release ${{ env.GitVersion_NuGetVersion }}
         body: |
           ${{ steps.Changelog.outputs.changelog }}
         draft: false
         prerelease: env.GitVersion_BranchName == "dev"
     - name: Create Nuget Package
       run: dotnet build -c Release ./src/Flickr.Net.Core/Flickr.Net.Core.csproj && dotnet pack -c Release -p:PackageVersion=${{ steps.tag_version.outputs.new_version }} -o . ./src/Flickr.Net.Core/Flickr.Net.Core.csproj
     - name: Upload Package for Publishing
       uses: actions/upload-artifact@v3
       with:
         name: PackedLib
         path: ./*.nupkg

  github-publish:
    needs: semantic-release
    name: Publish to Github
    runs-on: ubuntu-latest
    steps:
      - name: Download built project
        uses: actions/download-artifact@v3
        with:
          name: PackedLib
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Push Package to GitHub
        run: dotnet nuget push --api-key ${{secrets.GITHUB_TOKEN}} --source "https://nuget.pkg.github.com/st0o0/index.json" *.nupkg

  nuget-publish:
    needs: semantic-release
    name: Publish to Nuget
    runs-on: ubuntu-latest
    steps:
      - name: Download built project
        uses: actions/download-artifact@v3
        with:
          name: PackedLib
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Push Package to Nuget
        run: dotnet nuget push --api-key ${{secrets.NUGET_KEY}} --source "https://api.nuget.org/v3/index.json" *.nupkg
